// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

//Path: Cisco_IOS_XR_controller_optics_oper:optics_oper/optics_ports/optics_port/optics_info

package cisco_ios_xr_controller_optics_oper.optics_oper.optics_ports.optics_port.optics_info;

// optics transponder information
message optics_edm_info_KEYS {
    string name = 1;
}

message optics_edm_info {
    // Transport Admin State
    string transport_admin_state = 50;
    // Is Optics Present?
    bool optics_present = 51;
    // Optics type name
    string optics_type = 52;
    // Optics module name
    string optics_module = 53;
    // DWDM Carrier Band information
    string dwdm_carrier_band = 54;
    // Current ITU DWDM Carrier channel number
    string dwdm_carrier_channel = 55;
    // DWDM Carrier frequency read from hw in the unit 0.01THz
    string dwdm_carrier_frequency = 56;
    // Wavelength of color optics 0.001nm
    string dwdm_carrier_wavelength = 57;
    // Wavelength of grey optics 0.01nm
    uint32 grey_wavelength = 58;
    // Rx Low threshold value in units of 0.1dBm
    sint32 rx_low_threshold = 59;
    // Rx High threshold value in units of 0.1dBm
    sint32 rx_high_threshold = 60;
    // LBC High threshold value in units of percentage
    sint32 lbc_high_threshold = 61;
    // Tx Low threshold value in units of 0.1dBm
    sint32 tx_low_threshold = 62;
    // Tx High threshold value in units of 0.1dBm
    sint32 tx_high_threshold = 63;
    // LBC high threshold default value in unit of 0.001mA
    sint32 lbc_th_high_default = 64;
    // LBC low threshold default value in units of 0.001mA
    sint32 lbc_th_low_default = 65;
    // Temp Low threshold value in the units 0.01 C
    sint32 temp_low_threshold = 66;
    // Temp High threshold value in the units of 0.01 C
    sint32 temp_high_threshold = 67;
    // Volt Low threshold value
    sint32 volt_low_threshold = 68;
    // Volt High threshold value
    sint32 volt_high_threshold = 69;
    // Chromatic Dispersion ps/nm
    sint32 cd = 70;
    // Chromatic Dispersion Min ps/nm
    sint32 cd_min = 71;
    // Chromatic Dispersion Max ps/nm
    sint32 cd_max = 72;
    // Chromatic Dispersion low threshold ps/nm
    sint32 cd_low_threshold = 73;
    // Chromatic Dispersion high threshold ps/nm
    sint32 cd_high_threshold = 74;
    // OSNR low threshold in 0.01 dB
    string osnr_low_threshold = 75;
    // DGD high threshold in 0.1 ps
    string dgd_high_threshold = 76;
    // Polarization Mode Dispersion 0.1ps
    string polarization_mode_dispersion = 77;
    // Second Order Polarization Mode Dispersion 0.1ps^2
    string second_order_polarization_mode_dispersion = 78;
    // Optical Signal to Noise Ratio dB
    string optical_signal_to_noise_ratio = 79;
    // Polarization Dependent Loss dB
    string polarization_dependent_loss = 80;
    // Polarization Change Rate rad/s
    string polarization_change_rate = 81;
    // Differential Group Delay ps
    string differential_group_delay = 82;
    // Phase Noise dB
    string phase_noise = 83;
    // PmEable or Disable
    uint32 pm_enable = 84;
    // Showing laser state.Either ON or OFF or unknown
    string laser_state = 85;
    // Showing Current Colour of led state
    string led_state = 86;
    // Network SRLG information
    optics_edm_network_srlg_info network_srlg_info = 87;
    // Lane information
    repeated optics_edm_lane_data lane_data = 88;
    // Optics controller state: Up, Down or Administratively Down
    string controller_state = 89;
    // Optics form factor
    string form_factor = 90;
    // Optics physical type
    string phy_type = 91;
    // Optics Alarm Information
    optics_edm_alarm_info optics_alarm_info = 92;
    // Ots Alarm Information
    ots_edm_alarm_info ots_alarm_info = 93;
    // Receive Power in 0.01 dB
    sint32 rx_power = 94;
    // Transmit Power in 0.01 dB
    sint32 tx_power = 95;
    // Configured Tx power value in 0.01 dB
    sint32 cfg_tx_power = 96;
    // TX Power Configuration is supported or not
    bool cfg_tx_power_configurable = 97;
    // Temperature value
    sint32 temperature = 98;
    // Voltage value
    sint32 voltage = 99;
    // Display Volt/Temp ?
    bool display_volt_temp = 100;
    // CD Configurable is supported or not
    bool cd_configurable = 101;
    // Optics FEC
    string optics_fec = 102;
    // Showing port type
    string port_type = 103;
    // Showing port status
    string port_status = 104;
    // Rx Voa Attenuation in the unit of 0.01dBm
    sint32 rx_voa_attenuation = 105;
    // Tx Voa Attenuation in the unit of 0.01dBm
    sint32 tx_voa_attenuation = 106;
    // Ampli Gain in the unit of 0.01dBm
    sint32 ampli_gain = 107;
    // Ampli Tilt in the unit of 0.01dBm
    sint32 ampli_tilt = 108;
    bool rx_power_th_configurable = 109;
    bool tx_power_th_configurable = 110;
    sint32 rx_voa_attenuation_config_val = 111;
    sint32 tx_voa_attenuation_config_val = 112;
    string ampli_control_mode_config_val = 113;
    string ampli_gain_range_config_val = 114;
    sint32 ampli_gain_config_val = 115;
    sint32 ampli_tilt_config_val = 116;
    sint32 ampli_channel_power_config_val = 117;
    sint32 channel_power_max_delta_config_val = 118;
    sint32 ampli_gain_thr_deg_low_config_val = 119;
    sint32 ampli_gain_thr_deg_high_config_val = 120;
    bool osri_config_val = 121;
    string safety_control_mode_config_val = 122;
    // Total Receive Power for Multi_Lane Optics in dBm
    sint32 total_rx_power = 123;
    // Total Transmit Power for Multi_Lane Optics in dBm
    sint32 total_tx_power = 124;
    // Transceiver Vendor Details
    optics_transceiver_data transceiver_info = 125;
    // Is BO configured ?
    bool is_bo_configured = 126;
    // Are the Extended Parameters Valid ?
    bool is_ext_param_valid = 127;
    // Extended optics parameters
    optics_ext_param ext_param_val = 128;
    // Extended optics parameters threshold values
    optics_ext_threshold_param ext_param_threshold_val = 129;
    // Are there any alarms ?
    bool alarm_detected = 130;
    // Rx Low Warning threshold value in units of 0.1dBm
    sint32 rx_low_warning_threshold = 131;
    // Rx High Warning threshold value in units of 0.1dBm
    sint32 rx_high_warning_threshold = 132;
    // Tx Low Warning threshold value in units of 0.1dBm
    sint32 tx_low_warning_threshold = 133;
    // Tx High Warning threshold value in units of 0.1dBm
    sint32 tx_high_warning_threshold = 134;
    // LBC high Warning threshold default value in unit of 0.001mA
    sint32 lbc_th_high_warning_default = 135;
    // LBC low warning threshold default value in units of 0.001mA
    sint32 lbc_th_low_warning_default = 136;
    // Temp Low warning threshold value in the units 0.01 C
    sint32 temp_low_warning_threshold = 137;
    // Temp High warning threshold value in the units of 0.01 C
    sint32 temp_high_warning_threshold = 138;
    // Volt Low warning threshold value
    sint32 volt_low_warning_threshold = 139;
    // Volt High warning threshold value
    sint32 volt_high_warning_threshold = 140;
}

//  Lane Alarm Detail
message lane_alarm_detail {
    // Is defect detected?
    bool is_detected = 1;
    // Alarm counter
    uint32 counter = 2;
}

//  Lane Information Detail
message lane_edm_alarm_info {
    // High Rx Power
    lane_alarm_detail high_rx_power = 1;
    // Low Rx Power
    lane_alarm_detail low_rx_power = 2;
    // High Tx Power
    lane_alarm_detail high_tx_power = 3;
    // Low Tx Power
    lane_alarm_detail low_tx_power = 4;
    // High laser bias current
    lane_alarm_detail high_lbc = 5;
}

// Grey lane data
message optics_edm_lane_data {
    // The index number of the lane
    uint32 lane_index = 1;
    // Laser Bias Current in units of 0.01 percentage
    uint32 laser_bias_current_percent = 2;
    // Laser Bias Current in units of 0.01mA
    uint32 laser_bias_current_milli_amps = 3;
    // Transmit power in the unit of 0.01dBm
    sint32 transmit_power = 4;
    // Transponder receive power in the unit of 0.01dBm
    sint32 receive_power = 5;
    // Transponder receive signal power in the unit of 0.01dBm
    sint32 receive_signal_power = 6;
    // Transmit Signal power in the unit of 0.01dBm
    sint32 transmit_signal_power = 7;
    // Output frequency read from hw in the unit 0.01THz
    sint32 output_frequency = 8;
    // Lane Alarm Information
    lane_edm_alarm_info lane_alarm_info = 9;
}

// Optics Transceiver Details
message optics_transceiver_data {
    // Vendor Information
    string vendor_info = 1;
    // Date in Transceiver
    string date = 2;
    // Transceiver vendors revision number
    string optics_vendor_rev = 3;
    // Transceiver serial number
    string optics_serial_no = 4;
    // Transceiver vendors part number
    string optics_vendor_part = 5;
    // Connector type
    string connector_type = 6;
    // Otn Application Code
    string otn_application_code = 7;
    // Sonet Application Code
    string sonet_application_code = 8;
    // Ethernet Compliance Code
    string ethernet_compliance_code = 9;
    // Internal Temperature in C
    sint32 internal_temperature = 10;
}

// Network SRLG Information
message optics_edm_network_srlg_structure {
    // Array to maintain set number
    uint32 set_number = 1;
    // Network Srlg
    repeated uint32 network_srlg = 2;
}

// Network SRLG Information Array
message optics_edm_network_srlg_info {
    // Network Srlg Array
    repeated optics_edm_network_srlg_structure network_srlg_array = 1;
}

//  Optics Alarm Detail
message optics_alarm_detail {
    // Is defect detected?
    bool is_detected = 1;
    // Alarm counter
    uint32 counter = 2;
}

// Optics Alarm Information
message optics_edm_alarm_info {
    // High Rx Power in uints of 0.1 dBm
    optics_alarm_detail high_rx_power = 1;
    // Low Rx Power in uints of 0.1 dBm
    optics_alarm_detail low_rx_power = 2;
    // High Tx Power in uints of 0.1 dBm
    optics_alarm_detail high_tx_power = 3;
    // Low Tx Power in uints of 0.1 dBm
    optics_alarm_detail low_tx_power = 4;
    // High laser bias current in units of percentage
    optics_alarm_detail high_lbc = 5;
    // High Rx1 Power in uints of 0.1 dBm
    optics_alarm_detail high_rx1_power = 6;
    // High Rx2 Power in uints of 0.1 dBm
    optics_alarm_detail high_rx2_power = 7;
    // High Rx3 Power in uints of 0.1 dBm
    optics_alarm_detail high_rx3_power = 8;
    // High Rx4 Power in uints of 0.1 dBm
    optics_alarm_detail high_rx4_power = 9;
    // Low Rx1 Power in uints of 0.1 dBm
    optics_alarm_detail low_rx1_power = 10;
    // Low Rx2 Power in uints of 0.1 dBm
    optics_alarm_detail low_rx2_power = 11;
    // Low Rx3 Power in uints of 0.1 dBm
    optics_alarm_detail low_rx3_power = 12;
    // Low Rx4 Power in uints of 0.1 dBm
    optics_alarm_detail low_rx4_power = 13;
    // High Tx1 Power in uints of 0.1 dBm
    optics_alarm_detail high_tx1_power = 14;
    // High Tx2 Power in uints of 0.1 dBm
    optics_alarm_detail high_tx2_power = 15;
    // High Tx3 Power in uints of 0.1 dBm
    optics_alarm_detail high_tx3_power = 16;
    // High Tx4 Power in uints of 0.1 dBm
    optics_alarm_detail high_tx4_power = 17;
    // Low Tx1 Power in uints of 0.1 dBm
    optics_alarm_detail low_tx1_power = 18;
    // Low Tx2 Power in uints of 0.1 dBm
    optics_alarm_detail low_tx2_power = 19;
    // Low Tx3 Power in uints of 0.1 dBm
    optics_alarm_detail low_tx3_power = 20;
    // Low Tx4 Power in uints of 0.1 dBm
    optics_alarm_detail low_tx4_power = 21;
    // High Tx1 laser bias current in units of percentage
    optics_alarm_detail high_tx1_lbc = 22;
    // High Tx2 laser bias current in units of percentage
    optics_alarm_detail high_tx2_lbc = 23;
    // High Tx3 laser bias current in units of percentage
    optics_alarm_detail high_tx3_lbc = 24;
    // High Tx4 laser bias current in units of percentage
    optics_alarm_detail high_tx4_lbc = 25;
    // Low Tx1 laser bias current in units of percentage
    optics_alarm_detail low_tx1_lbc = 26;
    // Low Tx2 laser bias current in units of percentage
    optics_alarm_detail low_tx2_lbc = 27;
    // Low Tx3 laser bias current in units of percentage
    optics_alarm_detail low_tx3_lbc = 28;
    // Low Tx4 laser bias current in units of percentage
    optics_alarm_detail low_tx4_lbc = 29;
    // RX LOS
    optics_alarm_detail rx_los = 30;
    // TX LOS
    optics_alarm_detail tx_los = 31;
    // RX LOL
    optics_alarm_detail rx_lol = 32;
    // TX LOL
    optics_alarm_detail tx_lol = 33;
    // TX Fault
    optics_alarm_detail tx_fault = 34;
    // HI_DGD
    optics_alarm_detail hidgd = 35;
    // OOR_CD
    optics_alarm_detail oorcd = 36;
    // OSNR
    optics_alarm_detail osnr = 37;
    // WVL_OOL
    optics_alarm_detail wvlool = 38;
    // MEA
    optics_alarm_detail mea = 39;
    // IMPROPER_REM
    optics_alarm_detail imp_removal = 40;
    // Rx LOC
    optics_alarm_detail rx_loc = 41;
    // Ampli Gain Deg Low
    optics_alarm_detail amp_gain_deg_low = 42;
    // Ampli Gain Deg High
    optics_alarm_detail amp_gain_deg_high = 43;
}

// Ots Alarm Information
message ots_edm_alarm_info {
    // Low Tx Power in uints of 0.1 dBm
    optics_alarm_detail low_tx_power = 1;
    // Low Rx Power in uints of 0.1 dBm
    optics_alarm_detail low_rx_power = 2;
    // Rx LOS_P
    optics_alarm_detail rx_los_p = 3;
    // Rx LOC
    optics_alarm_detail rx_loc = 4;
    // Ampli Gain Deg Low
    optics_alarm_detail amp_gain_deg_low = 5;
    // Ampli Gain Deg High
    optics_alarm_detail amp_gain_deg_high = 6;
    // Auto Laser Shut
    optics_alarm_detail auto_laser_shut = 7;
    // Auto Power Red
    optics_alarm_detail auto_power_red = 8;
    // Auto Ampli Ctrl Disabled
    optics_alarm_detail auto_ampli_ctrl_disabled = 9;
    // Auto Ampli Ctrl Config Mismatch
    optics_alarm_detail auto_ampli_ctrl_config_mismatch = 10;
    // Switch To Protect
    optics_alarm_detail switch_to_protect = 11;
}

// extended monitored parameter information
message optics_ext_param {
    // Signal to Noise Ratio on Lane 1
    sint32 snr_lane1 = 1;
    // Signal to Noise Ratio on Lane 2
    sint32 snr_lane2 = 2;
    // Inter symbol Interference correction on Lane 1
    sint32 isi_correction_lane1 = 3;
    // Inter symbol Interference correction on Lane 2
    sint32 isi_correction_lane2 = 4;
    // PAM Histogram parameter on Lane 1
    sint32 pam_rate_lane1 = 5;
    // PAM Histogram parameter on Lane 2
    sint32 pam_rate_lane2 = 6;
    // Pre FEC BER since last counter reset
    sint64 pre_fec_ber = 7;
    // Uncorrected BER since last counter reset
    sint64 uncorrected_ber = 8;
    // Current flowing to the TEC of a cooled laser on Lane 1
    sint32 tec_current_lane1 = 9;
    // Current flowing to the TEC of a cooled laser on Lane 2
    sint32 tec_current_lane2 = 10;
    // Difference between target and actual center frequency on Lane 1
    sint32 laser_diff_frequency_lane1 = 11;
    // Difference between target and actual center frequency on Lane 2
    sint32 laser_diff_frequency_lane2 = 12;
    // Difference between target and actual temperature on Lane 1
    sint32 laser_diff_temperature_lane1 = 13;
    // Difference between target and actual temperature on Lane 2
    sint32 laser_diff_temperature_lane2 = 14;
    // Latched minimum Pre FEC BER value since last read, line ingress
    sint64 pre_fec_ber_latched_min = 15;
    // Latched maximum Pre FEC BER value since last read, line ingress
    sint64 pre_fec_ber_latched_max = 16;
    // Pre FEC BER value prior accumulation period, line ingress
    sint64 pre_fec_ber_accumulated = 17;
    // Pre FEC BER value instantaneous line ingress
    sint64 pre_fec_ber_instantaneous = 18;
    // Latched minimum Uncorrected BER value since last read, line ingress
    sint64 uncorrected_ber_latched_min = 19;
    // Latched maximum Uncorrected BER value since last read, line ingress
    sint64 uncorrected_ber_latched_max = 20;
    // Uncorrected BER value prior accumulation period, line ingress
    sint64 uncorrected_ber_accumulated = 21;
    // Uncorrected BER value instantaneous line line ingress
    sint64 uncorrected_ber_instantaneous = 22;
}

// extended monitored parameter threshold information
message optics_ext_threshold_param {
    // High threshold alarm for SNR
    sint32 snr_alarm_high_threshold = 1;
    // Low threshold alarm for SNR
    sint32 snr_alarm_low_threshold = 2;
    // High threshold warning for SNR
    sint32 snr_warn_high_threshold = 3;
    // Low threshold warning for SNR
    sint32 snr_warn_low_threshold = 4;
    // High threshold alarm for ISI Correction
    sint32 isi_correction_alarm_high_threshold = 5;
    // Low threshold alarm for ISI Correction
    sint32 isi_correction_alarm_low_threshold = 6;
    // High threshold warning for ISI Correction
    sint32 isi_correction_warn_high_threshold = 7;
    // Low threshold warning for ISI Correction
    sint32 isi_correction_warn_low_threshold = 8;
    // High threshold alarm for PAM Rate
    sint32 pam_rate_alarm_high_threshold = 9;
    // Low threshold alarm for PAM Rate
    sint32 pam_rate_alarm_low_threshold = 10;
    // High threshold warning for PAM Rate
    sint32 pam_rate_warn_high_threshold = 11;
    // Low threshold warning for PAM Rate
    sint32 pam_rate_warn_low_threshold = 12;
    // High threshold alarm for Pre FEC BER
    sint64 pre_fec_ber_alarm_high_threshold = 13;
    // Low threshold alarm for Pre FEC BER
    sint64 pre_fec_ber_alarm_low_threshold = 14;
    // High threshold warning for Pre FEC BER
    sint64 pre_fec_ber_warn_high_threshold = 15;
    // Low threshold warning for Pre FEC BER
    sint64 pre_fec_ber_warn_low_threshold = 16;
    // High threshold alarm for Uncorrected BER
    sint64 uncorrected_ber_alarm_high_threshold = 17;
    // Low threshold alarm for Uncorrected BER
    sint64 uncorrected_ber_alarm_low_threshold = 18;
    // High threshold warning for Uncorrected BER
    sint64 uncorrected_ber_warn_high_threshold = 19;
    // Low threshold warning for Uncorrected BER
    sint64 uncorrected_ber_warn_low_threshold = 20;
    // High threshold alarm for TEC Current
    sint32 tec_current_alarm_high_threshold = 21;
    // Low threshold alarm for TEC Current
    sint32 tec_current_alarm_low_threshold = 22;
    // High threshold warning for TEC Current
    sint32 tec_current_warn_high_threshold = 23;
    // Low threshold warning for TEC Current
    sint32 tec_current_warn_low_threshold = 24;
    // High Threshold Alarm for Differential Laser Frequency
    sint32 laser_diff_frequency_alarm_high_threshold = 25;
    // Low Threshold Alarm for Differential Laser Frequency
    sint32 laser_diff_frequency_alarm_low_threshold = 26;
    // High Threshold Warning for Differential Laser Frequency
    sint32 laser_diff_frequency_warn_high_threshold = 27;
    // Low Threshold Warning for Differential Laser Frequency
    sint32 laser_diff_frequency_warn_low_threshold = 28;
    // High Threshold Alarm for Differential Laser Temperature
    sint32 laser_diff_temperature_alarm_high_threshold = 29;
    // Low Threshold Alarm for Differential Laser Temperature
    sint32 laser_diff_temperature_alarm_low_threshold = 30;
    // High Threshold Warning for Differential Laser Temperature
    sint32 laser_diff_temperature_warn_high_threshold = 31;
    // Low Threshold Warning for Differential Laser Temperature
    sint32 laser_diff_temperature_warn_low_threshold = 32;
    // High threshold alarm for Latched Min Pre FEC BER
    sint64 pre_fec_ber_latched_min_alarm_high_threshold = 33;
    // Low threshold alarm for Latched Min Pre FEC BER
    sint64 pre_fec_ber_latched_min_alarm_low_threshold = 34;
    // High threshold warning for Latched Min Pre FEC BER
    sint64 pre_fec_ber_latched_min_warn_high_threshold = 35;
    // Low threshold warning for Latched Min Pre FEC BER
    sint64 pre_fec_ber_latched_min_warn_low_threshold = 36;
    // High threshold alarm for Latched Max Pre FEC BER
    sint64 pre_fec_ber_latched_max_alarm_high_threshold = 37;
    // Low threshold alarm for Latched Max Pre FEC BER
    sint64 pre_fec_ber_latched_max_alarm_low_threshold = 38;
    // High threshold warning for Latched Max Pre FEC BER
    sint64 pre_fec_ber_latched_max_warn_high_threshold = 39;
    // Low threshold warning for Latched Max Pre FEC BER
    sint64 pre_fec_ber_latched_max_warn_low_threshold = 40;
    // High threshold alarm for Accumulated Pre FEC BER
    sint64 pre_fec_ber_accumulated_alarm_high_threshold = 41;
    // Low threshold alarm for Accumulated Pre FEC BER
    sint64 pre_fec_ber_accumulated_alarm_low_threshold = 42;
    // High threshold warning for Accumulated Pre FEC BER
    sint64 pre_fec_ber_accumulated_warn_high_threshold = 43;
    // Low threshold warning for Accumulated Pre FEC BER
    sint64 pre_fec_ber_accumulated_warn_low_threshold = 44;
    // High threshold alarm for Instantaneous Pre FEC BER
    sint64 pre_fec_ber_instantaneous_alarm_high_threshold = 45;
    // Low threshold alarm for Instantaneous Pre FEC BER
    sint64 pre_fec_ber_instantaneous_alarm_low_threshold = 46;
    // High threshold warning for Instantaneous Pre FEC BER
    sint64 pre_fec_ber_instantaneous_warn_high_threshold = 47;
    // Low threshold warning for Instantaneous Pre FEC BER
    sint64 pre_fec_ber_instantaneous_warn_low_threshold = 48;
    // High threshold alarm for  Latched Min Uncorrected BER
    sint64 uncorrected_ber_latched_min_alarm_high_threshold = 49;
    // Low threshold alarm for  Latched Min Uncorrected BER
    sint64 uncorrected_ber_latched_min_alarm_low_threshold = 50;
    // High threshold warning for  Latched Min Uncorrected BER
    sint64 uncorrected_ber_latched_min_warn_high_threshold = 51;
    // Low threshold alarm for Latched Min Uncorrected BER
    sint64 uncorrected_ber_latched_min_warn_low_threshold = 52;
    // High threshold alarm for Latched_Max Uncorrected BER
    sint64 uncorrected_ber_latched_max_alarm_high_threshold = 53;
    // Low threshold alarm for Latched_Max Uncorrected BER
    sint64 uncorrected_ber_latched_max_alarm_low_threshold = 54;
    // High threshold warning Latched_Max for Uncorrected BER
    sint64 uncorrected_ber_latched_max_warn_high_threshold = 55;
    // Low threshold warning Latched_Max for Uncorrected BER
    sint64 uncorrected_ber_latched_max_warn_low_threshold = 56;
    // High threshold alarm for Accumulated Uncorrected BER
    sint64 uncorrected_ber_accumulated_alarm_high_threshold = 57;
    // Low threshold alarm for Accumulated Uncorrected BER
    sint64 uncorrected_ber_accumulated_alarm_low_threshold = 58;
    // High threshold warning for Accumulated Uncorrected BER
    sint64 uncorrected_ber_accumulated_warn_high_threshold = 59;
    // Low threshold warning for Accumulated Uncorrected BER
    sint64 uncorrected_ber_accumulated_warn_low_threshold = 60;
    // High threshold alarm for Instantaneous Uncorrected BER
    sint64 uncorrected_ber_instantaneous_alarm_high_threshold = 61;
    // Low threshold alarm for Instantaneous Uncorrected BER
    sint64 uncorrected_ber_instantaneous_alarm_low_threshold = 62;
    // High threshold warning for Instantaneous Uncorrected BER
    sint64 uncorrected_ber_instantaneous_warn_high_threshold = 63;
    // Low threshold warning for Instantaneous Uncorrected BER
    sint64 uncorrected_ber_instantaneous_warn_low_threshold = 64;
}

message optics_edm_info_COMBINED {
    string name = 1;
    // Transport Admin State
    string transport_admin_state = 50;
    // Is Optics Present?
    bool optics_present = 51;
    // Optics type name
    string optics_type = 52;
    // Optics module name
    string optics_module = 53;
    // DWDM Carrier Band information
    string dwdm_carrier_band = 54;
    // Current ITU DWDM Carrier channel number
    string dwdm_carrier_channel = 55;
    // DWDM Carrier frequency read from hw in the unit 0.01THz
    string dwdm_carrier_frequency = 56;
    // Wavelength of color optics 0.001nm
    string dwdm_carrier_wavelength = 57;
    // Wavelength of grey optics 0.01nm
    uint32 grey_wavelength = 58;
    // Rx Low threshold value in units of 0.1dBm
    sint32 rx_low_threshold = 59;
    // Rx High threshold value in units of 0.1dBm
    sint32 rx_high_threshold = 60;
    // LBC High threshold value in units of percentage
    sint32 lbc_high_threshold = 61;
    // Tx Low threshold value in units of 0.1dBm
    sint32 tx_low_threshold = 62;
    // Tx High threshold value in units of 0.1dBm
    sint32 tx_high_threshold = 63;
    // LBC high threshold default value in unit of 0.001mA
    sint32 lbc_th_high_default = 64;
    // LBC low threshold default value in units of 0.001mA
    sint32 lbc_th_low_default = 65;
    // Temp Low threshold value in the units 0.01 C
    sint32 temp_low_threshold = 66;
    // Temp High threshold value in the units of 0.01 C
    sint32 temp_high_threshold = 67;
    // Volt Low threshold value
    sint32 volt_low_threshold = 68;
    // Volt High threshold value
    sint32 volt_high_threshold = 69;
    // Chromatic Dispersion ps/nm
    sint32 cd = 70;
    // Chromatic Dispersion Min ps/nm
    sint32 cd_min = 71;
    // Chromatic Dispersion Max ps/nm
    sint32 cd_max = 72;
    // Chromatic Dispersion low threshold ps/nm
    sint32 cd_low_threshold = 73;
    // Chromatic Dispersion high threshold ps/nm
    sint32 cd_high_threshold = 74;
    // OSNR low threshold in 0.01 dB
    string osnr_low_threshold = 75;
    // DGD high threshold in 0.1 ps
    string dgd_high_threshold = 76;
    // Polarization Mode Dispersion 0.1ps
    string polarization_mode_dispersion = 77;
    // Second Order Polarization Mode Dispersion 0.1ps^2
    string second_order_polarization_mode_dispersion = 78;
    // Optical Signal to Noise Ratio dB
    string optical_signal_to_noise_ratio = 79;
    // Polarization Dependent Loss dB
    string polarization_dependent_loss = 80;
    // Polarization Change Rate rad/s
    string polarization_change_rate = 81;
    // Differential Group Delay ps
    string differential_group_delay = 82;
    // Phase Noise dB
    string phase_noise = 83;
    // PmEable or Disable
    uint32 pm_enable = 84;
    // Showing laser state.Either ON or OFF or unknown
    string laser_state = 85;
    // Showing Current Colour of led state
    string led_state = 86;
    // Network SRLG information
    optics_edm_network_srlg_info network_srlg_info = 87;
    // Lane information
    repeated optics_edm_lane_data lane_data = 88;
    // Optics controller state: Up, Down or Administratively Down
    string controller_state = 89;
    // Optics form factor
    string form_factor = 90;
    // Optics physical type
    string phy_type = 91;
    // Optics Alarm Information
    optics_edm_alarm_info optics_alarm_info = 92;
    // Ots Alarm Information
    ots_edm_alarm_info ots_alarm_info = 93;
    // Receive Power in 0.01 dB
    sint32 rx_power = 94;
    // Transmit Power in 0.01 dB
    sint32 tx_power = 95;
    // Configured Tx power value in 0.01 dB
    sint32 cfg_tx_power = 96;
    // TX Power Configuration is supported or not
    bool cfg_tx_power_configurable = 97;
    // Temperature value
    sint32 temperature = 98;
    // Voltage value
    sint32 voltage = 99;
    // Display Volt/Temp ?
    bool display_volt_temp = 100;
    // CD Configurable is supported or not
    bool cd_configurable = 101;
    // Optics FEC
    string optics_fec = 102;
    // Showing port type
    string port_type = 103;
    // Showing port status
    string port_status = 104;
    // Rx Voa Attenuation in the unit of 0.01dBm
    sint32 rx_voa_attenuation = 105;
    // Tx Voa Attenuation in the unit of 0.01dBm
    sint32 tx_voa_attenuation = 106;
    // Ampli Gain in the unit of 0.01dBm
    sint32 ampli_gain = 107;
    // Ampli Tilt in the unit of 0.01dBm
    sint32 ampli_tilt = 108;
    bool rx_power_th_configurable = 109;
    bool tx_power_th_configurable = 110;
    sint32 rx_voa_attenuation_config_val = 111;
    sint32 tx_voa_attenuation_config_val = 112;
    string ampli_control_mode_config_val = 113;
    string ampli_gain_range_config_val = 114;
    sint32 ampli_gain_config_val = 115;
    sint32 ampli_tilt_config_val = 116;
    sint32 ampli_channel_power_config_val = 117;
    sint32 channel_power_max_delta_config_val = 118;
    sint32 ampli_gain_thr_deg_low_config_val = 119;
    sint32 ampli_gain_thr_deg_high_config_val = 120;
    bool osri_config_val = 121;
    string safety_control_mode_config_val = 122;
    // Total Receive Power for Multi_Lane Optics in dBm
    sint32 total_rx_power = 123;
    // Total Transmit Power for Multi_Lane Optics in dBm
    sint32 total_tx_power = 124;
    // Transceiver Vendor Details
    optics_transceiver_data transceiver_info = 125;
    // Is BO configured ?
    bool is_bo_configured = 126;
    // Are the Extended Parameters Valid ?
    bool is_ext_param_valid = 127;
    // Extended optics parameters
    optics_ext_param ext_param_val = 128;
    // Extended optics parameters threshold values
    optics_ext_threshold_param ext_param_threshold_val = 129;
    // Are there any alarms ?
    bool alarm_detected = 130;
    // Rx Low Warning threshold value in units of 0.1dBm
    sint32 rx_low_warning_threshold = 131;
    // Rx High Warning threshold value in units of 0.1dBm
    sint32 rx_high_warning_threshold = 132;
    // Tx Low Warning threshold value in units of 0.1dBm
    sint32 tx_low_warning_threshold = 133;
    // Tx High Warning threshold value in units of 0.1dBm
    sint32 tx_high_warning_threshold = 134;
    // LBC high Warning threshold default value in unit of 0.001mA
    sint32 lbc_th_high_warning_default = 135;
    // LBC low warning threshold default value in units of 0.001mA
    sint32 lbc_th_low_warning_default = 136;
    // Temp Low warning threshold value in the units 0.01 C
    sint32 temp_low_warning_threshold = 137;
    // Temp High warning threshold value in the units of 0.01 C
    sint32 temp_high_warning_threshold = 138;
    // Volt Low warning threshold value
    sint32 volt_low_warning_threshold = 139;
    // Volt High warning threshold value
    sint32 volt_high_warning_threshold = 140;
}

