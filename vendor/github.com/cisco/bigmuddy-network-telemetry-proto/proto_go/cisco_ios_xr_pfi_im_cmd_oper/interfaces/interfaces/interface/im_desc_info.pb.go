// Code generated by protoc-gen-go. DO NOT EDIT.
// source: im_desc_info.proto

/*
Package cisco_ios_xr_pfi_im_cmd_oper_interfaces_interfaces_interface is a generated protocol buffer package.

It is generated from these files:
	im_desc_info.proto

It has these top-level messages:
	ImDescInfo_KEYS
	ImDescInfo
*/
package cisco_ios_xr_pfi_im_cmd_oper_interfaces_interfaces_interface

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Interface description information
type ImDescInfo_KEYS struct {
	InterfaceName string `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName" json:"interface_name,omitempty"`
}

func (m *ImDescInfo_KEYS) Reset()                    { *m = ImDescInfo_KEYS{} }
func (m *ImDescInfo_KEYS) String() string            { return proto.CompactTextString(m) }
func (*ImDescInfo_KEYS) ProtoMessage()               {}
func (*ImDescInfo_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ImDescInfo_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type ImDescInfo struct {
	// Interface
	Interface string `protobuf:"bytes,50,opt,name=interface" json:"interface,omitempty"`
	// Operational state with no translation of error disable or shutdown
	State string `protobuf:"bytes,51,opt,name=state" json:"state,omitempty"`
	// Line protocol state with no translation of error disable or shutdown
	LineState string `protobuf:"bytes,52,opt,name=line_state,json=lineState" json:"line_state,omitempty"`
	// Interface description string
	Description string `protobuf:"bytes,53,opt,name=description" json:"description,omitempty"`
}

func (m *ImDescInfo) Reset()                    { *m = ImDescInfo{} }
func (m *ImDescInfo) String() string            { return proto.CompactTextString(m) }
func (*ImDescInfo) ProtoMessage()               {}
func (*ImDescInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ImDescInfo) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *ImDescInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ImDescInfo) GetLineState() string {
	if m != nil {
		return m.LineState
	}
	return ""
}

func (m *ImDescInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*ImDescInfo_KEYS)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interfaces.interface.im_desc_info_KEYS")
	proto.RegisterType((*ImDescInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interfaces.interface.im_desc_info")
}

func init() { proto.RegisterFile("im_desc_info.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0xcc, 0x8d, 0x4f,
	0x49, 0x2d, 0x4e, 0x8e, 0xcf, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xb2,
	0x49, 0xce, 0x2c, 0x4e, 0xce, 0x8f, 0xcf, 0xcc, 0x2f, 0x8e, 0xaf, 0x28, 0x8a, 0x2f, 0x48, 0xcb,
	0x8c, 0xcf, 0xcc, 0x8d, 0x4f, 0xce, 0x4d, 0x89, 0xcf, 0x2f, 0x48, 0x2d, 0xd2, 0xcb, 0xcc, 0x2b,
	0x49, 0x2d, 0x4a, 0x4b, 0x4c, 0x4e, 0x2d, 0xc6, 0xca, 0x54, 0xb2, 0xe2, 0x12, 0x44, 0x36, 0x33,
	0xde, 0xdb, 0x35, 0x32, 0x58, 0x48, 0x95, 0x8b, 0x0f, 0xae, 0x22, 0x3e, 0x2f, 0x31, 0x37, 0x55,
	0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x88, 0x17, 0x2e, 0xea, 0x97, 0x98, 0x9b, 0xaa, 0xd4, 0xcc,
	0xc8, 0xc5, 0x83, 0xac, 0x59, 0x48, 0x86, 0x8b, 0x13, 0xae, 0x42, 0xc2, 0x08, 0xac, 0x05, 0x21,
	0x20, 0x24, 0xc2, 0xc5, 0x5a, 0x5c, 0x92, 0x58, 0x92, 0x2a, 0x61, 0x0c, 0x96, 0x81, 0x70, 0x84,
	0x64, 0xb9, 0xb8, 0x72, 0x32, 0xf3, 0x52, 0xe3, 0x21, 0x52, 0x26, 0x10, 0x4d, 0x20, 0x91, 0x60,
	0xb0, 0xb4, 0x02, 0x17, 0x37, 0xc8, 0xfc, 0xa2, 0xcc, 0x82, 0x92, 0xcc, 0xfc, 0x3c, 0x09, 0x53,
	0xb0, 0x3c, 0xb2, 0x50, 0x12, 0x1b, 0x38, 0x18, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3a,
	0x59, 0x7a, 0xb4, 0x1c, 0x01, 0x00, 0x00,
}
