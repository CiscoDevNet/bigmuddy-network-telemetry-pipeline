// Code generated by protoc-gen-go. DO NOT EDIT.
// source: im_if_summary_info.proto

/*
Package cisco_ios_xr_pfi_im_cmd_oper_interfaces_inventory_summary is a generated protocol buffer package.

It is generated from these files:
	im_if_summary_info.proto

It has these top-level messages:
	ImIfSummaryInfo_KEYS
	ImIfSummaryInfo
	ImIfGroupCountsSt
	ImIfTypeSummarySt
*/
package cisco_ios_xr_pfi_im_cmd_oper_interfaces_inventory_summary

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Interface summary bag
type ImIfSummaryInfo_KEYS struct {
}

func (m *ImIfSummaryInfo_KEYS) Reset()                    { *m = ImIfSummaryInfo_KEYS{} }
func (m *ImIfSummaryInfo_KEYS) String() string            { return proto.CompactTextString(m) }
func (*ImIfSummaryInfo_KEYS) ProtoMessage()               {}
func (*ImIfSummaryInfo_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ImIfSummaryInfo struct {
	// List of per interface type summary information
	InterfaceTypeList []*ImIfTypeSummarySt `protobuf:"bytes,50,rep,name=interface_type_list,json=interfaceTypeList" json:"interface_type_list,omitempty"`
	// Counts for all interfaces
	InterfaceCounts *ImIfGroupCountsSt `protobuf:"bytes,51,opt,name=interface_counts,json=interfaceCounts" json:"interface_counts,omitempty"`
}

func (m *ImIfSummaryInfo) Reset()                    { *m = ImIfSummaryInfo{} }
func (m *ImIfSummaryInfo) String() string            { return proto.CompactTextString(m) }
func (*ImIfSummaryInfo) ProtoMessage()               {}
func (*ImIfSummaryInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ImIfSummaryInfo) GetInterfaceTypeList() []*ImIfTypeSummarySt {
	if m != nil {
		return m.InterfaceTypeList
	}
	return nil
}

func (m *ImIfSummaryInfo) GetInterfaceCounts() *ImIfGroupCountsSt {
	if m != nil {
		return m.InterfaceCounts
	}
	return nil
}

type ImIfGroupCountsSt struct {
	// Number of interfaces
	InterfaceCount uint32 `protobuf:"varint,1,opt,name=interface_count,json=interfaceCount" json:"interface_count,omitempty"`
	// Number of interfaces in UP state
	UpInterfaceCount uint32 `protobuf:"varint,2,opt,name=up_interface_count,json=upInterfaceCount" json:"up_interface_count,omitempty"`
	// Number of interfaces in DOWN state
	DownInterfaceCount uint32 `protobuf:"varint,3,opt,name=down_interface_count,json=downInterfaceCount" json:"down_interface_count,omitempty"`
	// Number of interfaces in an ADMINDOWN state
	AdminDownInterfaceCount uint32 `protobuf:"varint,4,opt,name=admin_down_interface_count,json=adminDownInterfaceCount" json:"admin_down_interface_count,omitempty"`
}

func (m *ImIfGroupCountsSt) Reset()                    { *m = ImIfGroupCountsSt{} }
func (m *ImIfGroupCountsSt) String() string            { return proto.CompactTextString(m) }
func (*ImIfGroupCountsSt) ProtoMessage()               {}
func (*ImIfGroupCountsSt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ImIfGroupCountsSt) GetInterfaceCount() uint32 {
	if m != nil {
		return m.InterfaceCount
	}
	return 0
}

func (m *ImIfGroupCountsSt) GetUpInterfaceCount() uint32 {
	if m != nil {
		return m.UpInterfaceCount
	}
	return 0
}

func (m *ImIfGroupCountsSt) GetDownInterfaceCount() uint32 {
	if m != nil {
		return m.DownInterfaceCount
	}
	return 0
}

func (m *ImIfGroupCountsSt) GetAdminDownInterfaceCount() uint32 {
	if m != nil {
		return m.AdminDownInterfaceCount
	}
	return 0
}

type ImIfTypeSummarySt struct {
	// Name of the interface type
	InterfaceTypeName string `protobuf:"bytes,1,opt,name=interface_type_name,json=interfaceTypeName" json:"interface_type_name,omitempty"`
	// Description of the interface type
	InterfaceTypeDescription string `protobuf:"bytes,2,opt,name=interface_type_description,json=interfaceTypeDescription" json:"interface_type_description,omitempty"`
	// Counts for interfaces of this type
	InterfaceCounts *ImIfGroupCountsSt `protobuf:"bytes,3,opt,name=interface_counts,json=interfaceCounts" json:"interface_counts,omitempty"`
}

func (m *ImIfTypeSummarySt) Reset()                    { *m = ImIfTypeSummarySt{} }
func (m *ImIfTypeSummarySt) String() string            { return proto.CompactTextString(m) }
func (*ImIfTypeSummarySt) ProtoMessage()               {}
func (*ImIfTypeSummarySt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ImIfTypeSummarySt) GetInterfaceTypeName() string {
	if m != nil {
		return m.InterfaceTypeName
	}
	return ""
}

func (m *ImIfTypeSummarySt) GetInterfaceTypeDescription() string {
	if m != nil {
		return m.InterfaceTypeDescription
	}
	return ""
}

func (m *ImIfTypeSummarySt) GetInterfaceCounts() *ImIfGroupCountsSt {
	if m != nil {
		return m.InterfaceCounts
	}
	return nil
}

func init() {
	proto.RegisterType((*ImIfSummaryInfo_KEYS)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.inventory_summary.im_if_summary_info_KEYS")
	proto.RegisterType((*ImIfSummaryInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.inventory_summary.im_if_summary_info")
	proto.RegisterType((*ImIfGroupCountsSt)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.inventory_summary.im_if_group_counts_st")
	proto.RegisterType((*ImIfTypeSummarySt)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.inventory_summary.im_if_type_summary_st")
}

func init() { proto.RegisterFile("im_if_summary_info.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0xcf, 0x4a, 0x33, 0x31,
	0x14, 0xc5, 0x99, 0xf6, 0xe3, 0x83, 0x46, 0xb4, 0x35, 0x2a, 0x1d, 0xbb, 0x2a, 0xb3, 0xb1, 0x0b,
	0x19, 0xa4, 0x5d, 0x89, 0xee, 0xac, 0x0b, 0x51, 0x44, 0xaa, 0x1b, 0x57, 0x97, 0x31, 0x93, 0x91,
	0x0b, 0xe6, 0x0f, 0x49, 0x46, 0x1d, 0xdc, 0x88, 0xcf, 0xe0, 0xeb, 0xf9, 0x2e, 0xd2, 0x68, 0x5b,
	0x9a, 0xe9, 0x4a, 0xc4, 0x6d, 0xee, 0xef, 0x9c, 0x73, 0x2f, 0x87, 0x90, 0x18, 0x05, 0x60, 0x01,
	0xb6, 0x14, 0x22, 0x33, 0x15, 0xa0, 0x2c, 0x54, 0xaa, 0x8d, 0x72, 0x8a, 0x1e, 0x32, 0xb4, 0x4c,
	0x01, 0x2a, 0x0b, 0xcf, 0x06, 0x74, 0x81, 0x80, 0x02, 0x98, 0xc8, 0x41, 0x69, 0x6e, 0x52, 0x94,
	0x8e, 0x9b, 0x22, 0x63, 0xdc, 0xa6, 0x28, 0x1f, 0xb9, 0x74, 0xca, 0x54, 0x33, 0x97, 0x64, 0x97,
	0x74, 0xeb, 0xb6, 0x70, 0x7e, 0x7a, 0x7b, 0x9d, 0xbc, 0x37, 0x08, 0xad, 0xcf, 0xe8, 0x6b, 0x44,
	0xb6, 0xe6, 0x96, 0xe0, 0x2a, 0xcd, 0xe1, 0x01, 0xad, 0x8b, 0x87, 0xfd, 0xe6, 0x60, 0x6d, 0x78,
	0x95, 0xfe, 0x78, 0x97, 0xf4, 0x2b, 0xcc, 0x3b, 0xce, 0x12, 0xad, 0x9b, 0x6c, 0xce, 0x35, 0x37,
	0x95, 0xe6, 0x17, 0x68, 0x1d, 0x7d, 0x21, 0x9d, 0xc5, 0x06, 0x4c, 0x95, 0xd2, 0xd9, 0x78, 0xd4,
	0x8f, 0x7e, 0x25, 0xfe, 0xde, 0xa8, 0x52, 0x7f, 0x9b, 0x4e, 0xe3, 0xdb, 0x73, 0xcd, 0x89, 0x7f,
	0x4b, 0x3e, 0x22, 0xb2, 0xb3, 0x12, 0xa5, 0x7b, 0xa4, 0x1d, 0xac, 0x15, 0x47, 0xfd, 0x68, 0xb0,
	0x3e, 0xd9, 0x58, 0xf6, 0xa0, 0xfb, 0x84, 0x96, 0x1a, 0x42, 0xb6, 0xe1, 0xd9, 0x4e, 0xa9, 0xcf,
	0x96, 0xe9, 0x03, 0xb2, 0x9d, 0xab, 0x27, 0x59, 0xe3, 0x9b, 0x9e, 0xa7, 0xd3, 0x59, 0xa0, 0x38,
	0x22, 0xbd, 0x2c, 0x17, 0x28, 0x61, 0xa5, 0xee, 0x9f, 0xd7, 0x75, 0x3d, 0x31, 0xae, 0x89, 0x93,
	0xb7, 0xc6, 0xec, 0xbe, 0xa0, 0x09, 0x9a, 0xd6, 0x8a, 0x97, 0x99, 0xe0, 0xfe, 0xc6, 0x56, 0x50,
	0xd3, 0x65, 0x26, 0x38, 0x3d, 0x26, 0xbd, 0x80, 0xcf, 0xb9, 0x65, 0x06, 0xb5, 0x43, 0x25, 0xfd,
	0xb9, 0xad, 0x49, 0xbc, 0x24, 0x1b, 0x2f, 0xe6, 0x2b, 0x4b, 0x6e, 0xfe, 0x51, 0xc9, 0x77, 0xff,
	0xfd, 0xc7, 0x1a, 0x7d, 0x06, 0x00, 0x00, 0xff, 0xff, 0x09, 0xd4, 0x75, 0x42, 0x74, 0x03, 0x00,
	0x00,
}
