// Code generated by protoc-gen-go. DO NOT EDIT.
// source: filesystem.proto

/*
Package cisco_ios_xr_shellutil_filesystem_oper_file_system_node is a generated protocol buffer package.

It is generated from these files:
	filesystem.proto

It has these top-level messages:
	Filesystem_KEYS
	Filesystem
	FilesystemUtil
*/
package cisco_ios_xr_shellutil_filesystem_oper_file_system_node

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// File Systems
type Filesystem_KEYS struct {
	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
}

func (m *Filesystem_KEYS) Reset()                    { *m = Filesystem_KEYS{} }
func (m *Filesystem_KEYS) String() string            { return proto.CompactTextString(m) }
func (*Filesystem_KEYS) ProtoMessage()               {}
func (*Filesystem_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Filesystem_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type Filesystem struct {
	// Available file systems
	FileSystems []*FilesystemUtil `protobuf:"bytes,50,rep,name=file_systems,json=fileSystems" json:"file_systems,omitempty"`
}

func (m *Filesystem) Reset()                    { *m = Filesystem{} }
func (m *Filesystem) String() string            { return proto.CompactTextString(m) }
func (*Filesystem) ProtoMessage()               {}
func (*Filesystem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Filesystem) GetFileSystems() []*FilesystemUtil {
	if m != nil {
		return m.FileSystems
	}
	return nil
}

// File System Description
type FilesystemUtil struct {
	// Size of the file system in bytes
	Size string `protobuf:"bytes,1,opt,name=size" json:"size,omitempty"`
	// Free space in the file system in bytes
	Free string `protobuf:"bytes,2,opt,name=free" json:"free,omitempty"`
	// Type of file system
	Type string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	// Flags of file system
	Flags string `protobuf:"bytes,4,opt,name=flags" json:"flags,omitempty"`
	// Prefixes of file system
	Prefixes string `protobuf:"bytes,5,opt,name=prefixes" json:"prefixes,omitempty"`
}

func (m *FilesystemUtil) Reset()                    { *m = FilesystemUtil{} }
func (m *FilesystemUtil) String() string            { return proto.CompactTextString(m) }
func (*FilesystemUtil) ProtoMessage()               {}
func (*FilesystemUtil) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FilesystemUtil) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *FilesystemUtil) GetFree() string {
	if m != nil {
		return m.Free
	}
	return ""
}

func (m *FilesystemUtil) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FilesystemUtil) GetFlags() string {
	if m != nil {
		return m.Flags
	}
	return ""
}

func (m *FilesystemUtil) GetPrefixes() string {
	if m != nil {
		return m.Prefixes
	}
	return ""
}

func init() {
	proto.RegisterType((*Filesystem_KEYS)(nil), "cisco_ios_xr_shellutil_filesystem_oper.file_system.node.filesystem_KEYS")
	proto.RegisterType((*Filesystem)(nil), "cisco_ios_xr_shellutil_filesystem_oper.file_system.node.filesystem")
	proto.RegisterType((*FilesystemUtil)(nil), "cisco_ios_xr_shellutil_filesystem_oper.file_system.node.filesystem_util")
}

func init() { proto.RegisterFile("filesystem.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x55, 0xda, 0xa2, 0xf6, 0x8a, 0x04, 0xb2, 0x18, 0x2c, 0x58, 0xaa, 0x4c, 0x9d, 0x3c,
	0x94, 0x81, 0x5f, 0x80, 0x84, 0x84, 0xc4, 0xd0, 0x4e, 0x4c, 0x56, 0x08, 0x67, 0xb0, 0x70, 0x62,
	0xcb, 0x67, 0xa4, 0x84, 0x85, 0xbf, 0x8e, 0x2e, 0x26, 0x4a, 0x58, 0xbb, 0xbd, 0xf7, 0xdd, 0xbb,
	0xd3, 0xb3, 0xe1, 0xca, 0x58, 0x87, 0xd4, 0x51, 0xc2, 0x5a, 0x85, 0xe8, 0x93, 0x17, 0xf7, 0x95,
	0xa5, 0xca, 0x6b, 0xeb, 0x49, 0xb7, 0x51, 0xd3, 0x07, 0x3a, 0xf7, 0x95, 0xac, 0xd3, 0x63, 0x50,
	0xfb, 0x80, 0x51, 0xb1, 0xd7, 0x7f, 0x9b, 0x8d, 0x7f, 0xc3, 0x42, 0xc1, 0xe5, 0x24, 0xf3, 0xf4,
	0xf0, 0x72, 0x14, 0xb7, 0xb0, 0xe6, 0x91, 0x6e, 0xca, 0x1a, 0xe5, 0x6c, 0x3b, 0xdb, 0xad, 0x0f,
	0x2b, 0x06, 0xcf, 0x65, 0x8d, 0x45, 0x07, 0x30, 0xe6, 0xc5, 0x27, 0x5c, 0x4c, 0x2e, 0x92, 0xdc,
	0x6f, 0xe7, 0xbb, 0xcd, 0xfe, 0x51, 0x9d, 0xd8, 0x46, 0x4d, 0x02, 0xbc, 0x70, 0xd8, 0x30, 0x38,
	0xe6, 0xe3, 0xc5, 0xcf, 0xbf, 0xaa, 0x3c, 0x17, 0x02, 0x16, 0x64, 0xbf, 0x87, 0x96, 0xbd, 0x66,
	0x66, 0x22, 0xa2, 0x3c, 0xcb, 0x8c, 0x35, 0xb3, 0xd4, 0x05, 0x94, 0xf3, 0xcc, 0x58, 0x8b, 0x6b,
	0x58, 0x1a, 0x57, 0xbe, 0x93, 0x5c, 0xf4, 0x30, 0x1b, 0x71, 0x03, 0xab, 0x10, 0xd1, 0xd8, 0x16,
	0x49, 0x2e, 0xf3, 0xdb, 0x07, 0xff, 0x7a, 0xde, 0xff, 0xf5, 0xdd, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x39, 0xc1, 0x34, 0x1c, 0x7f, 0x01, 0x00, 0x00,
}
