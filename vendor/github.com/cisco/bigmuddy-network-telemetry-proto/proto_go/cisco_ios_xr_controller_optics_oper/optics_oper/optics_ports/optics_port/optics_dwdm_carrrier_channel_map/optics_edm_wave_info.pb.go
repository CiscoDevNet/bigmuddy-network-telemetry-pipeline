// Code generated by protoc-gen-go. DO NOT EDIT.
// source: optics_edm_wave_info.proto

/*
Package cisco_ios_xr_controller_optics_oper_optics_oper_optics_ports_optics_port_optics_dwdm_carrrier_channel_map is a generated protocol buffer package.

It is generated from these files:
	optics_edm_wave_info.proto

It has these top-level messages:
	OpticsEdmWaveInfo_KEYS
	OpticsEdmWaveInfo
	OpticsEdmChannelWavelengthMapInfo
	OpticsEdmWaveInfo_COMBINED
*/
package cisco_ios_xr_controller_optics_oper_optics_oper_optics_ports_optics_port_optics_dwdm_carrrier_channel_map

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// wavelength channel mapping information
type OpticsEdmWaveInfo_KEYS struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *OpticsEdmWaveInfo_KEYS) Reset()                    { *m = OpticsEdmWaveInfo_KEYS{} }
func (m *OpticsEdmWaveInfo_KEYS) String() string            { return proto.CompactTextString(m) }
func (*OpticsEdmWaveInfo_KEYS) ProtoMessage()               {}
func (*OpticsEdmWaveInfo_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *OpticsEdmWaveInfo_KEYS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OpticsEdmWaveInfo struct {
	// DWDM carrier band
	DwdmCarrierBand string `protobuf:"bytes,50,opt,name=dwdm_carrier_band,json=dwdmCarrierBand" json:"dwdm_carrier_band,omitempty"`
	// Lowest DWDM carrier supported
	DwdmCarrierMin uint32 `protobuf:"varint,51,opt,name=dwdm_carrier_min,json=dwdmCarrierMin" json:"dwdm_carrier_min,omitempty"`
	// Highest DWDM carrier supported
	DwdmCarrierMax uint32 `protobuf:"varint,52,opt,name=dwdm_carrier_max,json=dwdmCarrierMax" json:"dwdm_carrier_max,omitempty"`
	// DWDM carrier mapping info
	DwdmCarrierMapInfo []*OpticsEdmChannelWavelengthMapInfo `protobuf:"bytes,53,rep,name=dwdm_carrier_map_info,json=dwdmCarrierMapInfo" json:"dwdm_carrier_map_info,omitempty"`
}

func (m *OpticsEdmWaveInfo) Reset()                    { *m = OpticsEdmWaveInfo{} }
func (m *OpticsEdmWaveInfo) String() string            { return proto.CompactTextString(m) }
func (*OpticsEdmWaveInfo) ProtoMessage()               {}
func (*OpticsEdmWaveInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OpticsEdmWaveInfo) GetDwdmCarrierBand() string {
	if m != nil {
		return m.DwdmCarrierBand
	}
	return ""
}

func (m *OpticsEdmWaveInfo) GetDwdmCarrierMin() uint32 {
	if m != nil {
		return m.DwdmCarrierMin
	}
	return 0
}

func (m *OpticsEdmWaveInfo) GetDwdmCarrierMax() uint32 {
	if m != nil {
		return m.DwdmCarrierMax
	}
	return 0
}

func (m *OpticsEdmWaveInfo) GetDwdmCarrierMapInfo() []*OpticsEdmChannelWavelengthMapInfo {
	if m != nil {
		return m.DwdmCarrierMapInfo
	}
	return nil
}

type OpticsEdmChannelWavelengthMapInfo struct {
	// ITU channel number
	ItuChanNum uint32 `protobuf:"varint,1,opt,name=itu_chan_num,json=ituChanNum" json:"itu_chan_num,omitempty"`
	// G694 channel number
	G694ChanNum int32 `protobuf:"zigzag32,2,opt,name=g694_chan_num,json=g694ChanNum" json:"g694_chan_num,omitempty"`
	// Frequency
	Frequency string `protobuf:"bytes,3,opt,name=frequency" json:"frequency,omitempty"`
	// Wavelength
	Wavelength string `protobuf:"bytes,4,opt,name=wavelength" json:"wavelength,omitempty"`
}

func (m *OpticsEdmChannelWavelengthMapInfo) Reset()         { *m = OpticsEdmChannelWavelengthMapInfo{} }
func (m *OpticsEdmChannelWavelengthMapInfo) String() string { return proto.CompactTextString(m) }
func (*OpticsEdmChannelWavelengthMapInfo) ProtoMessage()    {}
func (*OpticsEdmChannelWavelengthMapInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2}
}

func (m *OpticsEdmChannelWavelengthMapInfo) GetItuChanNum() uint32 {
	if m != nil {
		return m.ItuChanNum
	}
	return 0
}

func (m *OpticsEdmChannelWavelengthMapInfo) GetG694ChanNum() int32 {
	if m != nil {
		return m.G694ChanNum
	}
	return 0
}

func (m *OpticsEdmChannelWavelengthMapInfo) GetFrequency() string {
	if m != nil {
		return m.Frequency
	}
	return ""
}

func (m *OpticsEdmChannelWavelengthMapInfo) GetWavelength() string {
	if m != nil {
		return m.Wavelength
	}
	return ""
}

type OpticsEdmWaveInfo_COMBINED struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// DWDM carrier band
	DwdmCarrierBand string `protobuf:"bytes,50,opt,name=dwdm_carrier_band,json=dwdmCarrierBand" json:"dwdm_carrier_band,omitempty"`
	// Lowest DWDM carrier supported
	DwdmCarrierMin uint32 `protobuf:"varint,51,opt,name=dwdm_carrier_min,json=dwdmCarrierMin" json:"dwdm_carrier_min,omitempty"`
	// Highest DWDM carrier supported
	DwdmCarrierMax uint32 `protobuf:"varint,52,opt,name=dwdm_carrier_max,json=dwdmCarrierMax" json:"dwdm_carrier_max,omitempty"`
	// DWDM carrier mapping info
	DwdmCarrierMapInfo []*OpticsEdmChannelWavelengthMapInfo `protobuf:"bytes,53,rep,name=dwdm_carrier_map_info,json=dwdmCarrierMapInfo" json:"dwdm_carrier_map_info,omitempty"`
}

func (m *OpticsEdmWaveInfo_COMBINED) Reset()                    { *m = OpticsEdmWaveInfo_COMBINED{} }
func (m *OpticsEdmWaveInfo_COMBINED) String() string            { return proto.CompactTextString(m) }
func (*OpticsEdmWaveInfo_COMBINED) ProtoMessage()               {}
func (*OpticsEdmWaveInfo_COMBINED) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *OpticsEdmWaveInfo_COMBINED) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OpticsEdmWaveInfo_COMBINED) GetDwdmCarrierBand() string {
	if m != nil {
		return m.DwdmCarrierBand
	}
	return ""
}

func (m *OpticsEdmWaveInfo_COMBINED) GetDwdmCarrierMin() uint32 {
	if m != nil {
		return m.DwdmCarrierMin
	}
	return 0
}

func (m *OpticsEdmWaveInfo_COMBINED) GetDwdmCarrierMax() uint32 {
	if m != nil {
		return m.DwdmCarrierMax
	}
	return 0
}

func (m *OpticsEdmWaveInfo_COMBINED) GetDwdmCarrierMapInfo() []*OpticsEdmChannelWavelengthMapInfo {
	if m != nil {
		return m.DwdmCarrierMapInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*OpticsEdmWaveInfo_KEYS)(nil), "cisco_ios_xr_controller_optics_oper.optics_oper.optics_ports.optics_port.optics_dwdm_carrrier_channel_map.optics_edm_wave_info_KEYS")
	proto.RegisterType((*OpticsEdmWaveInfo)(nil), "cisco_ios_xr_controller_optics_oper.optics_oper.optics_ports.optics_port.optics_dwdm_carrrier_channel_map.optics_edm_wave_info")
	proto.RegisterType((*OpticsEdmChannelWavelengthMapInfo)(nil), "cisco_ios_xr_controller_optics_oper.optics_oper.optics_ports.optics_port.optics_dwdm_carrrier_channel_map.optics_edm_channel_wavelength_map_info")
	proto.RegisterType((*OpticsEdmWaveInfo_COMBINED)(nil), "cisco_ios_xr_controller_optics_oper.optics_oper.optics_ports.optics_port.optics_dwdm_carrrier_channel_map.optics_edm_wave_info_COMBINED")
}

func init() { proto.RegisterFile("optics_edm_wave_info.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 373 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x94, 0xc1, 0x4e, 0xf2, 0x40,
	0x14, 0x85, 0x53, 0x20, 0x7f, 0xc2, 0xe5, 0x47, 0x65, 0xa2, 0x49, 0x35, 0x6a, 0x9a, 0x2e, 0x4c,
	0xe3, 0xa2, 0x26, 0x80, 0x26, 0x6e, 0x41, 0x16, 0xc4, 0x80, 0x49, 0x5d, 0xb9, 0x9a, 0x0c, 0xed,
	0x00, 0x93, 0xb4, 0x33, 0x75, 0x3a, 0x15, 0x7c, 0x0c, 0xdf, 0xc3, 0xd7, 0xf0, 0x35, 0x7c, 0x11,
	0x37, 0xa6, 0xa3, 0x40, 0x91, 0x2e, 0x5c, 0x18, 0x57, 0xee, 0x6e, 0xcf, 0x7c, 0x27, 0xf7, 0xf6,
	0xce, 0xc9, 0xc0, 0x81, 0x88, 0x15, 0xf3, 0x13, 0x4c, 0x83, 0x08, 0xcf, 0xc8, 0x03, 0xc5, 0x8c,
	0x8f, 0x85, 0x1b, 0x4b, 0xa1, 0x04, 0x62, 0x3e, 0x4b, 0x7c, 0x81, 0x99, 0x48, 0xf0, 0x5c, 0x62,
	0x5f, 0x70, 0x25, 0x45, 0x18, 0x52, 0x89, 0x3f, 0x3d, 0x22, 0xa6, 0xd2, 0x2d, 0xa8, 0x63, 0x21,
	0x55, 0x92, 0xff, 0x58, 0xd4, 0xc1, 0x2c, 0x88, 0xb0, 0x4f, 0xa4, 0x94, 0x8c, 0x4a, 0xec, 0x4f,
	0x09, 0xe7, 0x34, 0xc4, 0x11, 0x89, 0xed, 0x33, 0xd8, 0x2f, 0x1a, 0x04, 0x5f, 0xf7, 0xee, 0x6e,
	0x11, 0x82, 0x0a, 0x27, 0x11, 0x35, 0x0d, 0xcb, 0x70, 0xaa, 0x9e, 0xae, 0xed, 0xd7, 0x12, 0xec,
	0x16, 0x39, 0xd0, 0x29, 0x34, 0x96, 0x6d, 0xb2, 0x2e, 0x23, 0xc2, 0x03, 0xb3, 0xa9, 0x9d, 0xdb,
	0xd9, 0x41, 0xf7, 0x43, 0xef, 0x10, 0x1e, 0x20, 0x07, 0x76, 0xd6, 0xd8, 0x88, 0x71, 0xb3, 0x65,
	0x19, 0x4e, 0xdd, 0xdb, 0xca, 0xa1, 0x03, 0xc6, 0x37, 0x49, 0x32, 0x37, 0xdb, 0x9b, 0x24, 0x99,
	0xa3, 0x17, 0x03, 0xf6, 0xbe, 0xa0, 0xb1, 0x9e, 0xcc, 0x3c, 0xb7, 0xca, 0x4e, 0xad, 0xf9, 0x64,
	0xb8, 0xbf, 0xb6, 0x56, 0x37, 0xb7, 0xa1, 0x85, 0x9c, 0x6d, 0x2a, 0xa4, 0x7c, 0xa2, 0xa6, 0xcb,
	0xc9, 0x3c, 0xb4, 0xf6, 0x0f, 0x71, 0x9f, 0x8f, 0x85, 0xfd, 0x6c, 0xc0, 0xc9, 0xf7, 0xec, 0xc8,
	0x82, 0xff, 0x4c, 0xa5, 0x1a, 0xc1, 0x3c, 0x8d, 0xf4, 0x3d, 0xd5, 0x3d, 0x60, 0x2a, 0xed, 0x4e,
	0x09, 0x1f, 0xa6, 0x11, 0xb2, 0xa1, 0x3e, 0xb9, 0xb8, 0x6c, 0xaf, 0x90, 0x92, 0x65, 0x38, 0x0d,
	0xaf, 0x96, 0x89, 0x0b, 0xe6, 0x10, 0xaa, 0x63, 0x49, 0xef, 0x53, 0xca, 0xfd, 0x47, 0xb3, 0xac,
	0x2f, 0x6c, 0x25, 0xa0, 0x63, 0x80, 0x55, 0x6b, 0xb3, 0xa2, 0x8f, 0x73, 0x8a, 0xfd, 0x56, 0x82,
	0xa3, 0xc2, 0x04, 0x75, 0x6f, 0x06, 0x9d, 0xfe, 0xb0, 0x77, 0x55, 0x94, 0xa2, 0xbf, 0xb0, 0xfc,
	0x4c, 0x58, 0x46, 0xff, 0xf4, 0x83, 0xd1, 0x7a, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x76, 0xb9, 0x12,
	0x47, 0x4e, 0x04, 0x00, 0x00,
}
