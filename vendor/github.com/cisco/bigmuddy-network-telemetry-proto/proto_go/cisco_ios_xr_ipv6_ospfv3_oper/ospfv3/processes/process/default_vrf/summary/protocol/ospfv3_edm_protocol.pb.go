// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospfv3_edm_protocol.proto

/*
Package cisco_ios_xr_ipv6_ospfv3_oper_ospfv3_processes_process_default_vrf_summary_protocol is a generated protocol buffer package.

It is generated from these files:
	ospfv3_edm_protocol.proto

It has these top-level messages:
	Ospfv3EdmProtocol_KEYS
	Ospfv3EdmProtocol
*/
package cisco_ios_xr_ipv6_ospfv3_oper_ospfv3_processes_process_default_vrf_summary_protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// OSPFv3 Protocol Information
type Ospfv3EdmProtocol_KEYS struct {
	ProcessName string `protobuf:"bytes,1,opt,name=process_name,json=processName" json:"process_name,omitempty"`
}

func (m *Ospfv3EdmProtocol_KEYS) Reset()                    { *m = Ospfv3EdmProtocol_KEYS{} }
func (m *Ospfv3EdmProtocol_KEYS) String() string            { return proto.CompactTextString(m) }
func (*Ospfv3EdmProtocol_KEYS) ProtoMessage()               {}
func (*Ospfv3EdmProtocol_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Ospfv3EdmProtocol_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

type Ospfv3EdmProtocol struct {
	// Protocol router ID
	ProtocolRouterId string `protobuf:"bytes,50,opt,name=protocol_router_id,json=protocolRouterId" json:"protocol_router_id,omitempty"`
	// Administrative distance
	AdministrativeDistance uint32 `protobuf:"varint,51,opt,name=administrative_distance,json=administrativeDistance" json:"administrative_distance,omitempty"`
	// Administrative Distance for Inter Area routes
	AdministrativeDistanceInterArea uint32 `protobuf:"varint,52,opt,name=administrative_distance_inter_area,json=administrativeDistanceInterArea" json:"administrative_distance_inter_area,omitempty"`
	// Administrative Distance for External routes
	AdministrativeDistanceExternal uint32 `protobuf:"varint,53,opt,name=administrative_distance_external,json=administrativeDistanceExternal" json:"administrative_distance_external,omitempty"`
	// If true, Graceful restart is enabled
	IsGracefulRestart bool `protobuf:"varint,54,opt,name=is_graceful_restart,json=isGracefulRestart" json:"is_graceful_restart,omitempty"`
	// Distribute List In
	DistributeListIn string `protobuf:"bytes,55,opt,name=distribute_list_in,json=distributeListIn" json:"distribute_list_in,omitempty"`
}

func (m *Ospfv3EdmProtocol) Reset()                    { *m = Ospfv3EdmProtocol{} }
func (m *Ospfv3EdmProtocol) String() string            { return proto.CompactTextString(m) }
func (*Ospfv3EdmProtocol) ProtoMessage()               {}
func (*Ospfv3EdmProtocol) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Ospfv3EdmProtocol) GetProtocolRouterId() string {
	if m != nil {
		return m.ProtocolRouterId
	}
	return ""
}

func (m *Ospfv3EdmProtocol) GetAdministrativeDistance() uint32 {
	if m != nil {
		return m.AdministrativeDistance
	}
	return 0
}

func (m *Ospfv3EdmProtocol) GetAdministrativeDistanceInterArea() uint32 {
	if m != nil {
		return m.AdministrativeDistanceInterArea
	}
	return 0
}

func (m *Ospfv3EdmProtocol) GetAdministrativeDistanceExternal() uint32 {
	if m != nil {
		return m.AdministrativeDistanceExternal
	}
	return 0
}

func (m *Ospfv3EdmProtocol) GetIsGracefulRestart() bool {
	if m != nil {
		return m.IsGracefulRestart
	}
	return false
}

func (m *Ospfv3EdmProtocol) GetDistributeListIn() string {
	if m != nil {
		return m.DistributeListIn
	}
	return ""
}

func init() {
	proto.RegisterType((*Ospfv3EdmProtocol_KEYS)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.default_vrf.summary.protocol.ospfv3_edm_protocol_KEYS")
	proto.RegisterType((*Ospfv3EdmProtocol)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.default_vrf.summary.protocol.ospfv3_edm_protocol")
}

func init() { proto.RegisterFile("ospfv3_edm_protocol.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x89, 0x07, 0xd1, 0x55, 0x41, 0xb7, 0xa0, 0xeb, 0x45, 0x63, 0x4f, 0x3d, 0x48, 0x0e,
	0x56, 0xdb, 0x93, 0x07, 0xc1, 0xa2, 0xa5, 0xe2, 0x21, 0x3d, 0x79, 0x1a, 0xb6, 0xc9, 0x44, 0x06,
	0x92, 0xdd, 0x30, 0xbb, 0x09, 0xf5, 0x67, 0xfb, 0x0f, 0x24, 0x69, 0xaa, 0x08, 0xe9, 0x6d, 0xd8,
	0xef, 0xed, 0xf7, 0xe0, 0x89, 0x4b, 0xeb, 0xca, 0xac, 0x1e, 0x03, 0xa6, 0x05, 0x94, 0x6c, 0xbd,
	0x4d, 0x6c, 0x1e, 0xb5, 0x87, 0x5c, 0x26, 0xe4, 0x12, 0x0b, 0x64, 0x1d, 0xac, 0x19, 0xa8, 0xac,
	0x27, 0xd0, 0x85, 0x6d, 0x89, 0x1c, 0x6d, 0xee, 0x26, 0x9b, 0xa0, 0x73, 0xe8, 0xb6, 0x57, 0x94,
	0x62, 0xa6, 0xab, 0xdc, 0x43, 0xcd, 0x59, 0xe4, 0xaa, 0xa2, 0xd0, 0xfc, 0x15, 0x6d, 0xd5, 0xc3,
	0x47, 0xa1, 0x7a, 0x1a, 0x61, 0x31, 0xfb, 0x58, 0xca, 0x1b, 0x71, 0xdc, 0x39, 0xc0, 0xe8, 0x02,
	0x55, 0x10, 0x06, 0xa3, 0xc3, 0xf8, 0xa8, 0x7b, 0x7b, 0xd7, 0x05, 0x0e, 0xbf, 0xf7, 0xc4, 0xa0,
	0xe7, 0xbf, 0xbc, 0x15, 0xf2, 0xd7, 0xc5, 0xb6, 0xf2, 0xc8, 0x40, 0xa9, 0xba, 0x6b, 0x05, 0xa7,
	0x5b, 0x12, 0xb7, 0x60, 0x9e, 0xca, 0xa9, 0xb8, 0xd0, 0x69, 0x41, 0x86, 0x9c, 0x67, 0xed, 0xa9,
	0x46, 0x48, 0xc9, 0x79, 0x6d, 0x12, 0x54, 0xe3, 0x30, 0x18, 0x9d, 0xc4, 0xe7, 0xff, 0xf1, 0x73,
	0x47, 0xe5, 0x42, 0x0c, 0x77, 0x7c, 0x04, 0x32, 0x4d, 0xa9, 0x66, 0xd4, 0xea, 0xbe, 0x75, 0x5c,
	0xf7, 0x3b, 0xe6, 0x4d, 0xee, 0x89, 0x51, 0xcb, 0x57, 0x11, 0xee, 0x92, 0xe1, 0xda, 0x23, 0x1b,
	0x9d, 0xab, 0x87, 0x56, 0x75, 0xd5, 0xaf, 0x9a, 0x75, 0x29, 0x19, 0x89, 0x01, 0x39, 0xf8, 0x64,
	0x9d, 0x60, 0x56, 0xe5, 0xc0, 0xe8, 0xbc, 0x66, 0xaf, 0x26, 0x61, 0x30, 0x3a, 0x88, 0xcf, 0xc8,
	0xbd, 0x74, 0x24, 0xde, 0x80, 0x66, 0xad, 0xa6, 0x8a, 0x69, 0x55, 0x79, 0x84, 0x9c, 0x9c, 0x07,
	0x32, 0x6a, 0xba, 0x59, 0xeb, 0x8f, 0xbc, 0x91, 0xf3, 0x73, 0xb3, 0xda, 0x6f, 0xf7, 0x1b, 0xff,
	0x04, 0x00, 0x00, 0xff, 0xff, 0x73, 0xad, 0x24, 0x4d, 0x2b, 0x02, 0x00, 0x00,
}
