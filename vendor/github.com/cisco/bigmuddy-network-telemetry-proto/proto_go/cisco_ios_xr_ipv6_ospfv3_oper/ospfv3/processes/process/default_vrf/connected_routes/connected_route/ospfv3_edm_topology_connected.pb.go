// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospfv3_edm_topology_connected.proto

/*
Package cisco_ios_xr_ipv6_ospfv3_oper_ospfv3_processes_process_default_vrf_connected_routes_connected_route is a generated protocol buffer package.

It is generated from these files:
	ospfv3_edm_topology_connected.proto

It has these top-level messages:
	Ospfv3EdmTopologyConnected_KEYS
	Ospfv3EdmTopologyConnected
	Ospfv3ShBackupPath
	Ospfv3EdmTopPath
	Ospfv3EdmTopology
*/
package cisco_ios_xr_ipv6_ospfv3_oper_ospfv3_processes_process_default_vrf_connected_routes_connected_route

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// OSPFv3 Topology Connected Information
type Ospfv3EdmTopologyConnected_KEYS struct {
	ProcessName  string `protobuf:"bytes,1,opt,name=process_name,json=processName" json:"process_name,omitempty"`
	Prefix       string `protobuf:"bytes,2,opt,name=prefix" json:"prefix,omitempty"`
	PrefixLength uint32 `protobuf:"varint,3,opt,name=prefix_length,json=prefixLength" json:"prefix_length,omitempty"`
}

func (m *Ospfv3EdmTopologyConnected_KEYS) Reset()                    { *m = Ospfv3EdmTopologyConnected_KEYS{} }
func (m *Ospfv3EdmTopologyConnected_KEYS) String() string            { return proto.CompactTextString(m) }
func (*Ospfv3EdmTopologyConnected_KEYS) ProtoMessage()               {}
func (*Ospfv3EdmTopologyConnected_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Ospfv3EdmTopologyConnected_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *Ospfv3EdmTopologyConnected_KEYS) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *Ospfv3EdmTopologyConnected_KEYS) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

type Ospfv3EdmTopologyConnected struct {
	// Common Route topology information
	RouteTopology *Ospfv3EdmTopology `protobuf:"bytes,50,opt,name=route_topology,json=routeTopology" json:"route_topology,omitempty"`
	// List of paths to this route
	RoutePathList []*Ospfv3EdmTopPath `protobuf:"bytes,51,rep,name=route_path_list,json=routePathList" json:"route_path_list,omitempty"`
}

func (m *Ospfv3EdmTopologyConnected) Reset()                    { *m = Ospfv3EdmTopologyConnected{} }
func (m *Ospfv3EdmTopologyConnected) String() string            { return proto.CompactTextString(m) }
func (*Ospfv3EdmTopologyConnected) ProtoMessage()               {}
func (*Ospfv3EdmTopologyConnected) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Ospfv3EdmTopologyConnected) GetRouteTopology() *Ospfv3EdmTopology {
	if m != nil {
		return m.RouteTopology
	}
	return nil
}

func (m *Ospfv3EdmTopologyConnected) GetRoutePathList() []*Ospfv3EdmTopPath {
	if m != nil {
		return m.RoutePathList
	}
	return nil
}

// OSPFv3 Route Backup Path Information
type Ospfv3ShBackupPath struct {
	// Next hop Interface
	BackupRouteInterfaceName string `protobuf:"bytes,1,opt,name=backup_route_interface_name,json=backupRouteInterfaceName" json:"backup_route_interface_name,omitempty"`
	// Nexthop IP address
	BackupRouteNextHopAddress string `protobuf:"bytes,2,opt,name=backup_route_next_hop_address,json=backupRouteNextHopAddress" json:"backup_route_next_hop_address,omitempty"`
	// IP address of source of route
	BackupRouteSource string `protobuf:"bytes,3,opt,name=backup_route_source,json=backupRouteSource" json:"backup_route_source,omitempty"`
	// Metric
	BackupMetric uint32 `protobuf:"varint,4,opt,name=backup_metric,json=backupMetric" json:"backup_metric,omitempty"`
	// Primary Path
	PrimaryPath bool `protobuf:"varint,5,opt,name=primary_path,json=primaryPath" json:"primary_path,omitempty"`
	// Line Card Disjoint
	LineCardDisjoint bool `protobuf:"varint,6,opt,name=line_card_disjoint,json=lineCardDisjoint" json:"line_card_disjoint,omitempty"`
	// Downstream
	Downstream bool `protobuf:"varint,7,opt,name=downstream" json:"downstream,omitempty"`
	// Node Protect
	NodeProtect bool `protobuf:"varint,8,opt,name=node_protect,json=nodeProtect" json:"node_protect,omitempty"`
	// SRLG Disjoint
	SrlgDisjoint bool `protobuf:"varint,9,opt,name=srlg_disjoint,json=srlgDisjoint" json:"srlg_disjoint,omitempty"`
}

func (m *Ospfv3ShBackupPath) Reset()                    { *m = Ospfv3ShBackupPath{} }
func (m *Ospfv3ShBackupPath) String() string            { return proto.CompactTextString(m) }
func (*Ospfv3ShBackupPath) ProtoMessage()               {}
func (*Ospfv3ShBackupPath) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Ospfv3ShBackupPath) GetBackupRouteInterfaceName() string {
	if m != nil {
		return m.BackupRouteInterfaceName
	}
	return ""
}

func (m *Ospfv3ShBackupPath) GetBackupRouteNextHopAddress() string {
	if m != nil {
		return m.BackupRouteNextHopAddress
	}
	return ""
}

func (m *Ospfv3ShBackupPath) GetBackupRouteSource() string {
	if m != nil {
		return m.BackupRouteSource
	}
	return ""
}

func (m *Ospfv3ShBackupPath) GetBackupMetric() uint32 {
	if m != nil {
		return m.BackupMetric
	}
	return 0
}

func (m *Ospfv3ShBackupPath) GetPrimaryPath() bool {
	if m != nil {
		return m.PrimaryPath
	}
	return false
}

func (m *Ospfv3ShBackupPath) GetLineCardDisjoint() bool {
	if m != nil {
		return m.LineCardDisjoint
	}
	return false
}

func (m *Ospfv3ShBackupPath) GetDownstream() bool {
	if m != nil {
		return m.Downstream
	}
	return false
}

func (m *Ospfv3ShBackupPath) GetNodeProtect() bool {
	if m != nil {
		return m.NodeProtect
	}
	return false
}

func (m *Ospfv3ShBackupPath) GetSrlgDisjoint() bool {
	if m != nil {
		return m.SrlgDisjoint
	}
	return false
}

// OSPFv3 topology path information
type Ospfv3EdmTopPath struct {
	// Route path interface name
	InterfaceName string `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName" json:"interface_name,omitempty"`
	// Route path next hop
	RoutePathNextHop string `protobuf:"bytes,2,opt,name=route_path_next_hop,json=routePathNextHop" json:"route_path_next_hop,omitempty"`
	// Path ID of path
	RoutePathId uint32 `protobuf:"varint,3,opt,name=route_path_id,json=routePathId" json:"route_path_id,omitempty"`
	// Backup Path Info
	RouteBackupPath *Ospfv3ShBackupPath `protobuf:"bytes,4,opt,name=route_backup_path,json=routeBackupPath" json:"route_backup_path,omitempty"`
}

func (m *Ospfv3EdmTopPath) Reset()                    { *m = Ospfv3EdmTopPath{} }
func (m *Ospfv3EdmTopPath) String() string            { return proto.CompactTextString(m) }
func (*Ospfv3EdmTopPath) ProtoMessage()               {}
func (*Ospfv3EdmTopPath) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Ospfv3EdmTopPath) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *Ospfv3EdmTopPath) GetRoutePathNextHop() string {
	if m != nil {
		return m.RoutePathNextHop
	}
	return ""
}

func (m *Ospfv3EdmTopPath) GetRoutePathId() uint32 {
	if m != nil {
		return m.RoutePathId
	}
	return 0
}

func (m *Ospfv3EdmTopPath) GetRouteBackupPath() *Ospfv3ShBackupPath {
	if m != nil {
		return m.RouteBackupPath
	}
	return nil
}

// OSPFv3 Topology Information
type Ospfv3EdmTopology struct {
	// Route ID
	RouteId string `protobuf:"bytes,1,opt,name=route_id,json=routeId" json:"route_id,omitempty"`
	// Route distance
	RouteDistance uint32 `protobuf:"varint,2,opt,name=route_distance,json=routeDistance" json:"route_distance,omitempty"`
	// Route cost
	RouteCost uint32 `protobuf:"varint,3,opt,name=route_cost,json=routeCost" json:"route_cost,omitempty"`
	// Route type
	RouteType uint32 `protobuf:"varint,4,opt,name=route_type,json=routeType" json:"route_type,omitempty"`
}

func (m *Ospfv3EdmTopology) Reset()                    { *m = Ospfv3EdmTopology{} }
func (m *Ospfv3EdmTopology) String() string            { return proto.CompactTextString(m) }
func (*Ospfv3EdmTopology) ProtoMessage()               {}
func (*Ospfv3EdmTopology) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Ospfv3EdmTopology) GetRouteId() string {
	if m != nil {
		return m.RouteId
	}
	return ""
}

func (m *Ospfv3EdmTopology) GetRouteDistance() uint32 {
	if m != nil {
		return m.RouteDistance
	}
	return 0
}

func (m *Ospfv3EdmTopology) GetRouteCost() uint32 {
	if m != nil {
		return m.RouteCost
	}
	return 0
}

func (m *Ospfv3EdmTopology) GetRouteType() uint32 {
	if m != nil {
		return m.RouteType
	}
	return 0
}

func init() {
	proto.RegisterType((*Ospfv3EdmTopologyConnected_KEYS)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.default_vrf.connected_routes.connected_route.ospfv3_edm_topology_connected_KEYS")
	proto.RegisterType((*Ospfv3EdmTopologyConnected)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.default_vrf.connected_routes.connected_route.ospfv3_edm_topology_connected")
	proto.RegisterType((*Ospfv3ShBackupPath)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.default_vrf.connected_routes.connected_route.ospfv3_sh_backup_path")
	proto.RegisterType((*Ospfv3EdmTopPath)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.default_vrf.connected_routes.connected_route.ospfv3_edm_top_path")
	proto.RegisterType((*Ospfv3EdmTopology)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.default_vrf.connected_routes.connected_route.ospfv3_edm_topology")
}

func init() { proto.RegisterFile("ospfv3_edm_topology_connected.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 616 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0xcd, 0x6e, 0x13, 0x3d,
	0x14, 0xd5, 0xb4, 0xdf, 0xd7, 0x36, 0x4e, 0xa7, 0xb4, 0xae, 0x40, 0x53, 0xa1, 0xa2, 0x30, 0x15,
	0x52, 0x16, 0x30, 0x8b, 0x56, 0x62, 0x87, 0x04, 0xb4, 0x48, 0x44, 0x94, 0xaa, 0x9a, 0x76, 0xc3,
	0xca, 0x72, 0xed, 0x9b, 0xc4, 0x30, 0x33, 0x1e, 0xd9, 0x4e, 0x48, 0x58, 0xf3, 0x0a, 0xac, 0x61,
	0xd5, 0x67, 0xe0, 0x81, 0x78, 0x10, 0xe4, 0x9f, 0xa4, 0x93, 0x2a, 0xea, 0xb2, 0xec, 0xec, 0x73,
	0x8f, 0xed, 0x33, 0xf7, 0x9c, 0x3b, 0xe8, 0x40, 0xea, 0xba, 0x3f, 0x3e, 0x22, 0xc0, 0x4b, 0x62,
	0x64, 0x2d, 0x0b, 0x39, 0x98, 0x12, 0x26, 0xab, 0x0a, 0x98, 0x01, 0x9e, 0xd5, 0x4a, 0x1a, 0x89,
	0x19, 0x13, 0x9a, 0x49, 0x22, 0xa4, 0x26, 0x13, 0x45, 0x44, 0x3d, 0x7e, 0x49, 0xc2, 0x31, 0x59,
	0x83, 0xca, 0xfc, 0xda, 0x72, 0x19, 0x68, 0x0d, 0x7a, 0xb6, 0xca, 0x38, 0xf4, 0xe9, 0xa8, 0x30,
	0x64, 0xac, 0xfa, 0xd9, 0xfc, 0x4e, 0xa2, 0xe4, 0xc8, 0x80, 0xbe, 0x0d, 0xa4, 0xdf, 0x23, 0x94,
	0xde, 0x29, 0x86, 0x7c, 0x78, 0xf7, 0xe9, 0x02, 0x3f, 0x45, 0x9b, 0xe1, 0x7a, 0x52, 0xd1, 0x12,
	0x92, 0xa8, 0x13, 0x75, 0x5b, 0x79, 0x3b, 0x60, 0x67, 0xb4, 0x04, 0xfc, 0x08, 0xad, 0xd5, 0x0a,
	0xfa, 0x62, 0x92, 0xac, 0xb8, 0x62, 0xd8, 0xe1, 0x03, 0x14, 0xfb, 0x15, 0x29, 0xa0, 0x1a, 0x98,
	0x61, 0xb2, 0xda, 0x89, 0xba, 0x71, 0xbe, 0xe9, 0xc1, 0x53, 0x87, 0xa5, 0x7f, 0x56, 0xd0, 0xfe,
	0x9d, 0x32, 0xf0, 0xcf, 0x08, 0x6d, 0x39, 0xc9, 0xf3, 0x62, 0x72, 0xd8, 0x89, 0xba, 0xed, 0xc3,
	0x49, 0x76, 0x0f, 0x7d, 0xca, 0x96, 0x88, 0xcb, 0x63, 0x57, 0xba, 0x0c, 0x5b, 0xfc, 0x2b, 0x42,
	0x0f, 0xbc, 0xc2, 0x9a, 0x9a, 0x21, 0x29, 0x84, 0x36, 0xc9, 0x51, 0x67, 0xf5, 0x1f, 0x49, 0x74,
	0x22, 0x82, 0xc4, 0x73, 0x6a, 0x86, 0xa7, 0x42, 0x9b, 0xf4, 0x7a, 0x15, 0x3d, 0x0c, 0x34, 0x3d,
	0x24, 0x57, 0x94, 0x7d, 0x19, 0x79, 0x22, 0x7e, 0x85, 0x1e, 0x87, 0xad, 0xff, 0x04, 0x51, 0x19,
	0x50, 0x7d, 0xca, 0xa0, 0xe9, 0x77, 0xe2, 0x29, 0xb9, 0x65, 0xf4, 0x66, 0x04, 0x67, 0xfe, 0x6b,
	0xb4, 0xbf, 0x70, 0xbc, 0x82, 0x89, 0x21, 0x43, 0x59, 0x13, 0xca, 0xb9, 0x02, 0xad, 0x43, 0x26,
	0xf6, 0x1a, 0x17, 0x9c, 0xc1, 0xc4, 0xbc, 0x97, 0xf5, 0x1b, 0x4f, 0xc0, 0x19, 0xda, 0x5d, 0xb8,
	0x41, 0xcb, 0x91, 0x62, 0xe0, 0xc2, 0xd2, 0xca, 0x77, 0x1a, 0xe7, 0x2e, 0x5c, 0xc1, 0xc6, 0x2a,
	0xf0, 0x4b, 0x30, 0x4a, 0xb0, 0xe4, 0x3f, 0x1f, 0x2b, 0x0f, 0x7e, 0x74, 0x98, 0x8f, 0xad, 0x28,
	0xa9, 0x9a, 0xba, 0xaf, 0x4c, 0xfe, 0xef, 0x44, 0xdd, 0x0d, 0x1b, 0x5b, 0x87, 0xd9, 0xb6, 0xe0,
	0xe7, 0x08, 0x17, 0xa2, 0x02, 0xc2, 0xa8, 0xe2, 0x84, 0x0b, 0xfd, 0x59, 0x8a, 0xca, 0x24, 0x6b,
	0x8e, 0xb8, 0x6d, 0x2b, 0xc7, 0x54, 0xf1, 0x93, 0x80, 0xe3, 0x27, 0x08, 0x71, 0xf9, 0xb5, 0xd2,
	0x46, 0x01, 0x2d, 0x93, 0x75, 0xc7, 0x6a, 0x20, 0xf6, 0xc1, 0x4a, 0x72, 0x20, 0x76, 0x82, 0x81,
	0x99, 0x64, 0xc3, 0x3f, 0x68, 0xb1, 0x73, 0x0f, 0x59, 0xe1, 0x5a, 0x15, 0x83, 0x9b, 0xb7, 0x5a,
	0x8e, 0xb3, 0x69, 0xc1, 0xd9, 0x3b, 0xe9, 0xef, 0x15, 0xb4, 0xbb, 0xc4, 0x4f, 0xfc, 0x0c, 0x6d,
	0x2d, 0x75, 0x26, 0x16, 0x0b, 0x76, 0xbc, 0x40, 0xbb, 0x8d, 0x24, 0xce, 0xcc, 0x08, 0x26, 0x6c,
	0xcf, 0x33, 0x11, 0x2c, 0xc0, 0x29, 0x8a, 0x1b, 0x74, 0xc1, 0xc3, 0x88, 0xb6, 0xe7, 0xc4, 0x1e,
	0xc7, 0xd7, 0x11, 0xda, 0xf1, 0xa4, 0x46, 0x6c, 0x5c, 0xd3, 0xdb, 0x87, 0xdf, 0xee, 0x33, 0xdf,
	0x8b, 0xc1, 0xcd, 0xfd, 0xc8, 0xbd, 0x75, 0x88, 0x95, 0x9a, 0xfe, 0x88, 0x6e, 0xb7, 0xce, 0x8f,
	0xe7, 0x1e, 0xda, 0x08, 0xd1, 0xe6, 0xa1, 0x69, 0xeb, 0x6e, 0xdf, 0xe3, 0xb6, 0xab, 0xbe, 0xc4,
	0x85, 0x36, 0xb4, 0x62, 0xe0, 0x3a, 0x15, 0x87, 0xe9, 0x39, 0x09, 0x20, 0xde, 0x47, 0xc8, 0xd3,
	0x98, 0xd4, 0x26, 0xf4, 0xa8, 0xe5, 0x90, 0x63, 0xa9, 0xcd, 0x4d, 0xd9, 0x4c, 0x6b, 0x08, 0x71,
	0xf4, 0xe5, 0xcb, 0x69, 0x0d, 0x57, 0x6b, 0xee, 0xaf, 0x7e, 0xf4, 0x37, 0x00, 0x00, 0xff, 0xff,
	0x3c, 0xce, 0x98, 0x73, 0xfc, 0x05, 0x00, 0x00,
}
