// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospfv3_sh_ipfrr_topo.proto

/*
Package cisco_ios_xr_ipv6_ospfv3_oper_ospfv3_processes_process_default_vrf_fast_reroutes_fast_reroute is a generated protocol buffer package.

It is generated from these files:
	ospfv3_sh_ipfrr_topo.proto

It has these top-level messages:
	Ospfv3ShIpfrrTopo_KEYS
	Ospfv3ShIpfrrTopo
	OspfShIpfrrTopoEntry
*/
package cisco_ios_xr_ipv6_ospfv3_oper_ospfv3_processes_process_default_vrf_fast_reroutes_fast_reroute

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// OSPF IPFRR Topology Information
type Ospfv3ShIpfrrTopo_KEYS struct {
	ProcessName string `protobuf:"bytes,1,opt,name=process_name,json=processName" json:"process_name,omitempty"`
	RouterId    string `protobuf:"bytes,2,opt,name=router_id,json=routerId" json:"router_id,omitempty"`
	AreaId      uint32 `protobuf:"varint,3,opt,name=area_id,json=areaId" json:"area_id,omitempty"`
}

func (m *Ospfv3ShIpfrrTopo_KEYS) Reset()                    { *m = Ospfv3ShIpfrrTopo_KEYS{} }
func (m *Ospfv3ShIpfrrTopo_KEYS) String() string            { return proto.CompactTextString(m) }
func (*Ospfv3ShIpfrrTopo_KEYS) ProtoMessage()               {}
func (*Ospfv3ShIpfrrTopo_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Ospfv3ShIpfrrTopo_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *Ospfv3ShIpfrrTopo_KEYS) GetRouterId() string {
	if m != nil {
		return m.RouterId
	}
	return ""
}

func (m *Ospfv3ShIpfrrTopo_KEYS) GetAreaId() uint32 {
	if m != nil {
		return m.AreaId
	}
	return 0
}

type Ospfv3ShIpfrrTopo struct {
	// Area ID string in decimal or dotted decimal format
	IpfrrTopoAreaId string `protobuf:"bytes,50,opt,name=ipfrr_topo_area_id,json=ipfrrTopoAreaId" json:"ipfrr_topo_area_id,omitempty"`
	// OSPF Router ID
	IpfrrRouterId string `protobuf:"bytes,51,opt,name=ipfrr_router_id,json=ipfrrRouterId" json:"ipfrr_router_id,omitempty"`
	// IPFRR Topology Revision
	IpfrrAreaRevision uint32 `protobuf:"varint,52,opt,name=ipfrr_area_revision,json=ipfrrAreaRevision" json:"ipfrr_area_revision,omitempty"`
	// IPFRR Topology entries
	IpfrrTopo []*OspfShIpfrrTopoEntry `protobuf:"bytes,53,rep,name=ipfrr_topo,json=ipfrrTopo" json:"ipfrr_topo,omitempty"`
}

func (m *Ospfv3ShIpfrrTopo) Reset()                    { *m = Ospfv3ShIpfrrTopo{} }
func (m *Ospfv3ShIpfrrTopo) String() string            { return proto.CompactTextString(m) }
func (*Ospfv3ShIpfrrTopo) ProtoMessage()               {}
func (*Ospfv3ShIpfrrTopo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Ospfv3ShIpfrrTopo) GetIpfrrTopoAreaId() string {
	if m != nil {
		return m.IpfrrTopoAreaId
	}
	return ""
}

func (m *Ospfv3ShIpfrrTopo) GetIpfrrRouterId() string {
	if m != nil {
		return m.IpfrrRouterId
	}
	return ""
}

func (m *Ospfv3ShIpfrrTopo) GetIpfrrAreaRevision() uint32 {
	if m != nil {
		return m.IpfrrAreaRevision
	}
	return 0
}

func (m *Ospfv3ShIpfrrTopo) GetIpfrrTopo() []*OspfShIpfrrTopoEntry {
	if m != nil {
		return m.IpfrrTopo
	}
	return nil
}

// OSPF_IPFRR Topology Entry
type OspfShIpfrrTopoEntry struct {
	// IPFRR Topology Node ID
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	// IPFRR Topology LSA ID
	Lsaid uint32 `protobuf:"varint,2,opt,name=lsaid" json:"lsaid,omitempty"`
	// IPFRR Topology Distance
	Distance uint32 `protobuf:"varint,3,opt,name=distance" json:"distance,omitempty"`
	// IPFRR Topoogy Type-4 entry
	Type4 bool `protobuf:"varint,4,opt,name=type4" json:"type4,omitempty"`
	// IPFRR Topology Revision
	Revision uint32 `protobuf:"varint,5,opt,name=revision" json:"revision,omitempty"`
	// IPFRR Topology Neighbor Sourced
	NeighborSourced bool `protobuf:"varint,6,opt,name=neighbor_sourced,json=neighborSourced" json:"neighbor_sourced,omitempty"`
	// IPFRR Topology DR entry
	Dr bool `protobuf:"varint,7,opt,name=dr" json:"dr,omitempty"`
}

func (m *OspfShIpfrrTopoEntry) Reset()                    { *m = OspfShIpfrrTopoEntry{} }
func (m *OspfShIpfrrTopoEntry) String() string            { return proto.CompactTextString(m) }
func (*OspfShIpfrrTopoEntry) ProtoMessage()               {}
func (*OspfShIpfrrTopoEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *OspfShIpfrrTopoEntry) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *OspfShIpfrrTopoEntry) GetLsaid() uint32 {
	if m != nil {
		return m.Lsaid
	}
	return 0
}

func (m *OspfShIpfrrTopoEntry) GetDistance() uint32 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *OspfShIpfrrTopoEntry) GetType4() bool {
	if m != nil {
		return m.Type4
	}
	return false
}

func (m *OspfShIpfrrTopoEntry) GetRevision() uint32 {
	if m != nil {
		return m.Revision
	}
	return 0
}

func (m *OspfShIpfrrTopoEntry) GetNeighborSourced() bool {
	if m != nil {
		return m.NeighborSourced
	}
	return false
}

func (m *OspfShIpfrrTopoEntry) GetDr() bool {
	if m != nil {
		return m.Dr
	}
	return false
}

func init() {
	proto.RegisterType((*Ospfv3ShIpfrrTopo_KEYS)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.default_vrf.fast_reroutes.fast_reroute.ospfv3_sh_ipfrr_topo_KEYS")
	proto.RegisterType((*Ospfv3ShIpfrrTopo)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.default_vrf.fast_reroutes.fast_reroute.ospfv3_sh_ipfrr_topo")
	proto.RegisterType((*OspfShIpfrrTopoEntry)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.default_vrf.fast_reroutes.fast_reroute.ospf_sh_ipfrr_topo_entry")
}

func init() { proto.RegisterFile("ospfv3_sh_ipfrr_topo.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x52, 0xc1, 0x6e, 0xd4, 0x30,
	0x14, 0x54, 0x52, 0x9a, 0xee, 0xbe, 0xb2, 0x14, 0x4c, 0x25, 0x4c, 0xb9, 0x84, 0x3d, 0xa0, 0x20,
	0xa4, 0x1c, 0xba, 0x85, 0x3b, 0x07, 0x0e, 0x2b, 0x24, 0x0e, 0x29, 0x17, 0x0e, 0xc8, 0x72, 0xe3,
	0x17, 0x6a, 0xa9, 0x8d, 0xad, 0x67, 0x6f, 0xa0, 0x3f, 0xc2, 0x97, 0xf0, 0x25, 0x7c, 0x11, 0xb2,
	0x9d, 0xec, 0x02, 0x5a, 0x8e, 0xdc, 0x3c, 0x33, 0x6f, 0xc6, 0x2f, 0x9e, 0xc0, 0x99, 0x71, 0xb6,
	0x1b, 0x56, 0xc2, 0x5d, 0x0b, 0x6d, 0x3b, 0x22, 0xe1, 0x8d, 0x35, 0xb5, 0x25, 0xe3, 0x0d, 0xfb,
	0xdc, 0x6a, 0xd7, 0x1a, 0xa1, 0x8d, 0x13, 0xdf, 0x48, 0x68, 0x3b, 0xbc, 0x11, 0xe3, 0xb4, 0xb1,
	0x48, 0x75, 0x3a, 0x87, 0xd9, 0x16, 0x9d, 0x43, 0x37, 0x9d, 0x6a, 0x85, 0x9d, 0xdc, 0xdc, 0x78,
	0x31, 0x50, 0x57, 0x77, 0xd2, 0x79, 0x41, 0x48, 0x66, 0xe3, 0xd1, 0xfd, 0x81, 0x96, 0x1e, 0x9e,
	0xee, 0xbb, 0x5c, 0xbc, 0x7f, 0xf7, 0xe9, 0x92, 0x3d, 0x87, 0xfb, 0x63, 0x9c, 0xe8, 0xe5, 0x2d,
	0xf2, 0xac, 0xcc, 0xaa, 0x79, 0x73, 0x3c, 0x72, 0x1f, 0xe4, 0x2d, 0xb2, 0x67, 0x30, 0x8f, 0x41,
	0x24, 0xb4, 0xe2, 0x79, 0xd4, 0x67, 0x89, 0x58, 0x2b, 0xf6, 0x04, 0x8e, 0x24, 0xa1, 0x0c, 0xd2,
	0x41, 0x99, 0x55, 0x8b, 0xa6, 0x08, 0x70, 0xad, 0x96, 0x3f, 0x72, 0x38, 0xdd, 0x77, 0x2d, 0x7b,
	0x05, 0xec, 0xb7, 0x25, 0x26, 0xf3, 0x79, 0xcc, 0x3d, 0x89, 0xca, 0x47, 0x63, 0xcd, 0xdb, 0x98,
	0xc2, 0x5e, 0x40, 0xa2, 0xc4, 0x6e, 0x83, 0x55, 0x9c, 0x5c, 0x44, 0xba, 0x99, 0xd6, 0xa8, 0xe1,
	0x71, 0x9a, 0x8b, 0x79, 0x84, 0x83, 0x76, 0xda, 0xf4, 0xfc, 0x22, 0xae, 0xf4, 0x28, 0x4a, 0x21,
	0xb1, 0x19, 0x05, 0xf6, 0x3d, 0x03, 0xd8, 0x6d, 0xc1, 0x5f, 0x97, 0x07, 0xd5, 0xf1, 0xf9, 0xd7,
	0xfa, 0xbf, 0x16, 0x11, 0xfd, 0x7f, 0x75, 0x80, 0xbd, 0xa7, 0xbb, 0x66, 0xbe, 0xfd, 0xec, 0xe5,
	0xcf, 0x0c, 0xf8, 0xbf, 0xe6, 0xc2, 0x63, 0xf7, 0x46, 0x61, 0x78, 0x85, 0xd4, 0x53, 0x11, 0xe0,
	0x5a, 0xb1, 0x53, 0x38, 0xbc, 0x71, 0x72, 0xac, 0x67, 0xd1, 0x24, 0xc0, 0xce, 0x60, 0xa6, 0xb4,
	0xf3, 0xb2, 0x6f, 0x71, 0x2c, 0x67, 0x8b, 0x83, 0xc3, 0xdf, 0x59, 0xbc, 0xe0, 0xf7, 0xca, 0xac,
	0x9a, 0x35, 0x09, 0x04, 0xc7, 0xf6, 0xed, 0x0e, 0x93, 0x63, 0xc2, 0xec, 0x25, 0x3c, 0xec, 0x51,
	0x7f, 0xb9, 0xbe, 0x32, 0x24, 0x9c, 0xd9, 0x50, 0x8b, 0x8a, 0x17, 0xd1, 0x7c, 0x32, 0xf1, 0x97,
	0x89, 0x66, 0x0f, 0x20, 0x57, 0xc4, 0x8f, 0xa2, 0x98, 0x2b, 0xba, 0x2a, 0xe2, 0x7f, 0xbe, 0xfa,
	0x15, 0x00, 0x00, 0xff, 0xff, 0x1b, 0x8a, 0xba, 0x46, 0x05, 0x03, 0x00, 0x00,
}
