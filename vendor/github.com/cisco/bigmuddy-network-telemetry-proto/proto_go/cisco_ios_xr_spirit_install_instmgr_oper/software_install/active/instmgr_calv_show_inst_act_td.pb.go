// Code generated by protoc-gen-go. DO NOT EDIT.
// source: instmgr_calv_show_inst_act_td.proto

/*
Package cisco_ios_xr_spirit_install_instmgr_oper_software_install_active is a generated protocol buffer package.

It is generated from these files:
	instmgr_calv_show_inst_act_td.proto

It has these top-level messages:
	InstmgrCalvShowInstActTd_KEYS
	InstmgrCalvShowInstActTd
	InstmgrCalvShowInstActRow
*/
package cisco_ios_xr_spirit_install_instmgr_oper_software_install_active

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Calvados show install active info
type InstmgrCalvShowInstActTd_KEYS struct {
}

func (m *InstmgrCalvShowInstActTd_KEYS) Reset()                    { *m = InstmgrCalvShowInstActTd_KEYS{} }
func (m *InstmgrCalvShowInstActTd_KEYS) String() string            { return proto.CompactTextString(m) }
func (*InstmgrCalvShowInstActTd_KEYS) ProtoMessage()               {}
func (*InstmgrCalvShowInstActTd_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type InstmgrCalvShowInstActTd struct {
	ActivePackageInfo []*InstmgrCalvShowInstActRow `protobuf:"bytes,50,rep,name=active_package_info,json=activePackageInfo" json:"active_package_info,omitempty"`
}

func (m *InstmgrCalvShowInstActTd) Reset()                    { *m = InstmgrCalvShowInstActTd{} }
func (m *InstmgrCalvShowInstActTd) String() string            { return proto.CompactTextString(m) }
func (*InstmgrCalvShowInstActTd) ProtoMessage()               {}
func (*InstmgrCalvShowInstActTd) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InstmgrCalvShowInstActTd) GetActivePackageInfo() []*InstmgrCalvShowInstActRow {
	if m != nil {
		return m.ActivePackageInfo
	}
	return nil
}

type InstmgrCalvShowInstActRow struct {
	ErrorMessage           string `protobuf:"bytes,1,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	Location               string `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	NodeType               string `protobuf:"bytes,3,opt,name=node_type,json=nodeType" json:"node_type,omitempty"`
	BootPartitionName      string `protobuf:"bytes,4,opt,name=boot_partition_name,json=bootPartitionName" json:"boot_partition_name,omitempty"`
	NumberOfActivePackages uint32 `protobuf:"varint,5,opt,name=number_of_active_packages,json=numberOfActivePackages" json:"number_of_active_packages,omitempty"`
	ActivePackages         string `protobuf:"bytes,6,opt,name=active_packages,json=activePackages" json:"active_packages,omitempty"`
}

func (m *InstmgrCalvShowInstActRow) Reset()                    { *m = InstmgrCalvShowInstActRow{} }
func (m *InstmgrCalvShowInstActRow) String() string            { return proto.CompactTextString(m) }
func (*InstmgrCalvShowInstActRow) ProtoMessage()               {}
func (*InstmgrCalvShowInstActRow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *InstmgrCalvShowInstActRow) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *InstmgrCalvShowInstActRow) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *InstmgrCalvShowInstActRow) GetNodeType() string {
	if m != nil {
		return m.NodeType
	}
	return ""
}

func (m *InstmgrCalvShowInstActRow) GetBootPartitionName() string {
	if m != nil {
		return m.BootPartitionName
	}
	return ""
}

func (m *InstmgrCalvShowInstActRow) GetNumberOfActivePackages() uint32 {
	if m != nil {
		return m.NumberOfActivePackages
	}
	return 0
}

func (m *InstmgrCalvShowInstActRow) GetActivePackages() string {
	if m != nil {
		return m.ActivePackages
	}
	return ""
}

func init() {
	proto.RegisterType((*InstmgrCalvShowInstActTd_KEYS)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.active.instmgr_calv_show_inst_act_td_KEYS")
	proto.RegisterType((*InstmgrCalvShowInstActTd)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.active.instmgr_calv_show_inst_act_td")
	proto.RegisterType((*InstmgrCalvShowInstActRow)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.active.instmgr_calv_show_inst_act_row")
}

func init() { proto.RegisterFile("instmgr_calv_show_inst_act_td.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xb1, 0x4e, 0xf3, 0x30,
	0x14, 0x85, 0x95, 0xf6, 0xff, 0x2b, 0x6a, 0x28, 0xa8, 0xae, 0x84, 0x02, 0x08, 0x54, 0xa5, 0x48,
	0x74, 0xca, 0x50, 0x26, 0x36, 0x18, 0x18, 0x10, 0x02, 0xaa, 0xc2, 0xc2, 0x74, 0x71, 0x5d, 0xa7,
	0x58, 0x24, 0xb9, 0xd6, 0xb5, 0x69, 0xe9, 0x5b, 0x20, 0x1e, 0x85, 0x27, 0x44, 0x89, 0x15, 0x44,
	0x19, 0xb2, 0x30, 0xfa, 0x9c, 0xef, 0xde, 0x63, 0x1f, 0x99, 0x0d, 0x74, 0x6e, 0x5d, 0x36, 0x27,
	0x90, 0x22, 0x5d, 0x80, 0x7d, 0xc6, 0x25, 0x14, 0x0a, 0x08, 0xe9, 0xc0, 0xcd, 0x62, 0x43, 0xe8,
	0x90, 0x9f, 0x4b, 0x6d, 0x25, 0x82, 0x46, 0x0b, 0x6f, 0x04, 0xd6, 0x68, 0xd2, 0xae, 0xc4, 0x44,
	0x9a, 0x42, 0xb5, 0x00, 0x8d, 0xa2, 0xd8, 0x62, 0xe2, 0x96, 0x82, 0x54, 0xe5, 0xc6, 0x42, 0x3a,
	0xbd, 0x50, 0xd1, 0x31, 0x8b, 0x6a, 0x83, 0xe0, 0xfa, 0xf2, 0xf1, 0x3e, 0xfa, 0x0c, 0xd8, 0x61,
	0x2d, 0xc6, 0xdf, 0x03, 0xd6, 0xf3, 0x2b, 0xc1, 0x08, 0xf9, 0x22, 0xe6, 0x45, 0x52, 0x82, 0xe1,
	0xa8, 0xdf, 0x1c, 0x6e, 0x8e, 0x9e, 0xe2, 0xbf, 0x5e, 0x34, 0xae, 0x89, 0x27, 0x5c, 0x4e, 0xba,
	0x1e, 0x1b, 0xfb, 0xec, 0xab, 0x3c, 0xc1, 0xe8, 0xa3, 0xc1, 0x8e, 0xea, 0xa7, 0xf8, 0x80, 0x75,
	0x14, 0x11, 0x12, 0x64, 0xca, 0x5a, 0x31, 0x57, 0x61, 0xd0, 0x0f, 0x86, 0xed, 0xc9, 0x56, 0x29,
	0xde, 0x78, 0x8d, 0xef, 0xb3, 0x8d, 0x14, 0xa5, 0x70, 0x1a, 0xf3, 0xb0, 0x51, 0xfa, 0xdf, 0x67,
	0x7e, 0xc0, 0xda, 0x39, 0xce, 0x14, 0xb8, 0x95, 0x51, 0x61, 0xd3, 0x9b, 0x85, 0xf0, 0xb0, 0x32,
	0x8a, 0xc7, 0xac, 0x37, 0x45, 0x74, 0x60, 0x04, 0x39, 0x5d, 0xe0, 0x90, 0x8b, 0x4c, 0x85, 0xff,
	0x4a, 0xac, 0x5b, 0x58, 0xe3, 0xca, 0xb9, 0x15, 0x99, 0xe2, 0x67, 0x6c, 0x2f, 0x7f, 0xcd, 0xa6,
	0x8a, 0x00, 0x13, 0x58, 0x2f, 0xd3, 0x86, 0xff, 0xfb, 0xc1, 0xb0, 0x33, 0xd9, 0xf5, 0xc0, 0x5d,
	0x72, 0xf1, 0xf3, 0xb9, 0x96, 0x9f, 0xb0, 0x9d, 0xdf, 0x03, 0xad, 0x32, 0x66, 0x7b, 0xad, 0x17,
	0x3b, 0x6d, 0x95, 0x1f, 0xe7, 0xf4, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x7b, 0x20, 0x83, 0xbc, 0x5f,
	0x02, 0x00, 0x00,
}
