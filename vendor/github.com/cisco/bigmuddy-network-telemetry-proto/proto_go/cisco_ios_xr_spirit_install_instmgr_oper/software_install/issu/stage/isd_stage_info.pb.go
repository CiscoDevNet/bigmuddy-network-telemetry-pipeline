// Code generated by protoc-gen-go. DO NOT EDIT.
// source: isd_stage_info.proto

/*
Package cisco_ios_xr_spirit_install_instmgr_oper_software_install_issu_stage is a generated protocol buffer package.

It is generated from these files:
	isd_stage_info.proto

It has these top-level messages:
	IsdStageInfo_KEYS
	IsdStageInfo
*/
package cisco_ios_xr_spirit_install_instmgr_oper_software_install_issu_stage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ISSU Director stage Information
type IsdStageInfo_KEYS struct {
}

func (m *IsdStageInfo_KEYS) Reset()                    { *m = IsdStageInfo_KEYS{} }
func (m *IsdStageInfo_KEYS) String() string            { return proto.CompactTextString(m) }
func (*IsdStageInfo_KEYS) ProtoMessage()               {}
func (*IsdStageInfo_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type IsdStageInfo struct {
	// State
	State string `protobuf:"bytes,50,opt,name=state" json:"state,omitempty"`
	// ISSU Node Count
	IssuNodeCnt int32 `protobuf:"zigzag32,51,opt,name=issu_node_cnt,json=issuNodeCnt" json:"issu_node_cnt,omitempty"`
	// ISSU Ready Node Count
	IssuReadyNodeCnt int32 `protobuf:"zigzag32,52,opt,name=issu_ready_node_cnt,json=issuReadyNodeCnt" json:"issu_ready_node_cnt,omitempty"`
	// Percentage
	Percentage int32 `protobuf:"zigzag32,53,opt,name=percentage" json:"percentage,omitempty"`
	// Abort Status
	IssuStatus string `protobuf:"bytes,54,opt,name=issu_status,json=issuStatus" json:"issu_status,omitempty"`
	// ISSU Error
	IssuError string `protobuf:"bytes,55,opt,name=issu_error,json=issuError" json:"issu_error,omitempty"`
}

func (m *IsdStageInfo) Reset()                    { *m = IsdStageInfo{} }
func (m *IsdStageInfo) String() string            { return proto.CompactTextString(m) }
func (*IsdStageInfo) ProtoMessage()               {}
func (*IsdStageInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IsdStageInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *IsdStageInfo) GetIssuNodeCnt() int32 {
	if m != nil {
		return m.IssuNodeCnt
	}
	return 0
}

func (m *IsdStageInfo) GetIssuReadyNodeCnt() int32 {
	if m != nil {
		return m.IssuReadyNodeCnt
	}
	return 0
}

func (m *IsdStageInfo) GetPercentage() int32 {
	if m != nil {
		return m.Percentage
	}
	return 0
}

func (m *IsdStageInfo) GetIssuStatus() string {
	if m != nil {
		return m.IssuStatus
	}
	return ""
}

func (m *IsdStageInfo) GetIssuError() string {
	if m != nil {
		return m.IssuError
	}
	return ""
}

func init() {
	proto.RegisterType((*IsdStageInfo_KEYS)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.issu.stage.isd_stage_info_KEYS")
	proto.RegisterType((*IsdStageInfo)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.issu.stage.isd_stage_info")
}

func init() { proto.RegisterFile("isd_stage_info.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x4f, 0x4b, 0x33, 0x41,
	0x0c, 0xc6, 0xd9, 0xc3, 0xfb, 0x42, 0x47, 0x14, 0x1d, 0x2b, 0xec, 0x45, 0x2d, 0x7b, 0xea, 0xc5,
	0x3d, 0x58, 0xff, 0x7c, 0x00, 0xed, 0x49, 0xf0, 0xb0, 0x3d, 0x79, 0x0a, 0xeb, 0x6e, 0x5a, 0x06,
	0xea, 0x64, 0x49, 0xb2, 0xa8, 0x1f, 0xd5, 0x6f, 0x23, 0x89, 0x14, 0xed, 0x69, 0xc8, 0xef, 0x79,
	0xf8, 0x25, 0x4c, 0x98, 0x26, 0xe9, 0x41, 0xb4, 0xdd, 0x20, 0xa4, 0xbc, 0xa6, 0x7a, 0x60, 0x52,
	0x8a, 0x8f, 0x5d, 0x92, 0x8e, 0x20, 0x91, 0xc0, 0x07, 0x83, 0x0c, 0x89, 0x93, 0x42, 0xca, 0xa2,
	0xed, 0x76, 0xeb, 0xef, 0xdb, 0x86, 0x81, 0x06, 0xe4, 0x5a, 0x68, 0xad, 0xef, 0x2d, 0xe3, 0x2e,
	0xad, 0x93, 0xc8, 0x58, 0xbb, 0xb0, 0x3a, 0x0b, 0xa7, 0xfb, 0x76, 0x78, 0x5a, 0xbe, 0xac, 0xaa,
	0xaf, 0x22, 0x1c, 0xed, 0xf3, 0x38, 0x0d, 0xff, 0x44, 0x5b, 0xc5, 0xf2, 0x7a, 0x56, 0xcc, 0x27,
	0xcd, 0xcf, 0x10, 0xab, 0x70, 0x68, 0x36, 0xc8, 0xd4, 0x23, 0x74, 0x59, 0xcb, 0xc5, 0xac, 0x98,
	0x9f, 0x34, 0x07, 0x06, 0x9f, 0xa9, 0xc7, 0x87, 0xac, 0xf1, 0xca, 0x76, 0xc8, 0x08, 0x8c, 0x6d,
	0xff, 0xf9, 0xdb, 0xbc, 0xf1, 0xe6, 0xb1, 0x45, 0x8d, 0x25, 0xbb, 0xfa, 0x45, 0x08, 0x03, 0x72,
	0x87, 0xd9, 0x76, 0x97, 0xb7, 0xde, 0xfa, 0x43, 0xe2, 0x65, 0x70, 0xbb, 0xdd, 0xa6, 0xa3, 0x94,
	0x77, 0x7e, 0x4e, 0x30, 0xb4, 0x72, 0x12, 0xcf, 0x83, 0x4f, 0x80, 0xcc, 0xc4, 0xe5, 0xbd, 0xe7,
	0x13, 0x23, 0x4b, 0x03, 0xaf, 0xff, 0xfd, 0xff, 0x16, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0a,
	0x6c, 0x6e, 0x49, 0x57, 0x01, 0x00, 0x00,
}
