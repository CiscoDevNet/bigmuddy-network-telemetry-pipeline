// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fia_edm_stats_brief_info.proto

/*
Package cisco_ios_xr_fretta_bcm_dpa_npu_stats_oper_dpa_stats_nodes_node_asic_statistics_asic_statistics_for_npu_ids_asic_statistics_for_npu_id is a generated protocol buffer package.

It is generated from these files:
	fia_edm_stats_brief_info.proto

It has these top-level messages:
	FiaEdmStatsBriefInfo_KEYS
	FiaEdmStatsBriefInfo
	FiaEdmDeviceStatsAsicBriefInfo
*/
package cisco_ios_xr_fretta_bcm_dpa_npu_stats_oper_dpa_stats_nodes_node_asic_statistics_asic_statistics_for_npu_ids_asic_statistics_for_npu_id

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ASIC statistics information
type FiaEdmStatsBriefInfo_KEYS struct {
	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	NpuId    uint32 `protobuf:"varint,2,opt,name=npu_id,json=npuId" json:"npu_id,omitempty"`
}

func (m *FiaEdmStatsBriefInfo_KEYS) Reset()                    { *m = FiaEdmStatsBriefInfo_KEYS{} }
func (m *FiaEdmStatsBriefInfo_KEYS) String() string            { return proto.CompactTextString(m) }
func (*FiaEdmStatsBriefInfo_KEYS) ProtoMessage()               {}
func (*FiaEdmStatsBriefInfo_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FiaEdmStatsBriefInfo_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *FiaEdmStatsBriefInfo_KEYS) GetNpuId() uint32 {
	if m != nil {
		return m.NpuId
	}
	return 0
}

type FiaEdmStatsBriefInfo struct {
	// Flag to indicate if data is valid
	Valid bool `protobuf:"varint,50,opt,name=valid" json:"valid,omitempty"`
	// Rack number
	RackNumber uint32 `protobuf:"varint,51,opt,name=rack_number,json=rackNumber" json:"rack_number,omitempty"`
	// Slot number
	SlotNumber uint32 `protobuf:"varint,52,opt,name=slot_number,json=slotNumber" json:"slot_number,omitempty"`
	// ASIC instance
	AsicInstance uint32 `protobuf:"varint,53,opt,name=asic_instance,json=asicInstance" json:"asic_instance,omitempty"`
	// Chip version
	ChipVersion uint32 `protobuf:"varint,54,opt,name=chip_version,json=chipVersion" json:"chip_version,omitempty"`
	// Statistics
	Statistics *FiaEdmDeviceStatsAsicBriefInfo `protobuf:"bytes,55,opt,name=statistics" json:"statistics,omitempty"`
}

func (m *FiaEdmStatsBriefInfo) Reset()                    { *m = FiaEdmStatsBriefInfo{} }
func (m *FiaEdmStatsBriefInfo) String() string            { return proto.CompactTextString(m) }
func (*FiaEdmStatsBriefInfo) ProtoMessage()               {}
func (*FiaEdmStatsBriefInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FiaEdmStatsBriefInfo) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *FiaEdmStatsBriefInfo) GetRackNumber() uint32 {
	if m != nil {
		return m.RackNumber
	}
	return 0
}

func (m *FiaEdmStatsBriefInfo) GetSlotNumber() uint32 {
	if m != nil {
		return m.SlotNumber
	}
	return 0
}

func (m *FiaEdmStatsBriefInfo) GetAsicInstance() uint32 {
	if m != nil {
		return m.AsicInstance
	}
	return 0
}

func (m *FiaEdmStatsBriefInfo) GetChipVersion() uint32 {
	if m != nil {
		return m.ChipVersion
	}
	return 0
}

func (m *FiaEdmStatsBriefInfo) GetStatistics() *FiaEdmDeviceStatsAsicBriefInfo {
	if m != nil {
		return m.Statistics
	}
	return nil
}

// ASIC statistics
type FiaEdmDeviceStatsAsicBriefInfo struct {
	// Total bytes sent from NIF to IRE
	NbiRxTotalByteCnt uint64 `protobuf:"varint,1,opt,name=nbi_rx_total_byte_cnt,json=nbiRxTotalByteCnt" json:"nbi_rx_total_byte_cnt,omitempty"`
	// Total packets sent from NIF to IRE
	NbiRxTotalPktCnt uint64 `protobuf:"varint,2,opt,name=nbi_rx_total_pkt_cnt,json=nbiRxTotalPktCnt" json:"nbi_rx_total_pkt_cnt,omitempty"`
	// CPU ingress received packet counter
	IreCpuPktCnt uint64 `protobuf:"varint,3,opt,name=ire_cpu_pkt_cnt,json=ireCpuPktCnt" json:"ire_cpu_pkt_cnt,omitempty"`
	// NIF received packet counter
	IreNifPktCnt uint64 `protobuf:"varint,4,opt,name=ire_nif_pkt_cnt,json=ireNifPktCnt" json:"ire_nif_pkt_cnt,omitempty"`
	// OAMP ingress received packet counter
	IreOampPktCnt uint64 `protobuf:"varint,5,opt,name=ire_oamp_pkt_cnt,json=ireOampPktCnt" json:"ire_oamp_pkt_cnt,omitempty"`
	// OLP ingress received packet counter
	IreOlpPktCnt uint64 `protobuf:"varint,6,opt,name=ire_olp_pkt_cnt,json=ireOlpPktCnt" json:"ire_olp_pkt_cnt,omitempty"`
	// Recycling ingress received packet counter
	IreRcyPktCnt uint64 `protobuf:"varint,7,opt,name=ire_rcy_pkt_cnt,json=ireRcyPktCnt" json:"ire_rcy_pkt_cnt,omitempty"`
	// Performance counter of the FDT interface
	IreFdtIfCnt uint64 `protobuf:"varint,8,opt,name=ire_fdt_if_cnt,json=ireFdtIfCnt" json:"ire_fdt_if_cnt,omitempty"`
	// Performance counter of the MMU interface
	IdrMmuIfCnt uint64 `protobuf:"varint,9,opt,name=idr_mmu_if_cnt,json=idrMmuIfCnt" json:"idr_mmu_if_cnt,omitempty"`
	// Performance counter of the OCB interface
	IdrOcbIfCnt uint64 `protobuf:"varint,10,opt,name=idr_ocb_if_cnt,json=idrOcbIfCnt" json:"idr_ocb_if_cnt,omitempty"`
	// Counts enqueued packets
	IqmEnqueuePktCnt uint64 `protobuf:"varint,11,opt,name=iqm_enqueue_pkt_cnt,json=iqmEnqueuePktCnt" json:"iqm_enqueue_pkt_cnt,omitempty"`
	// Counts dequeued packets
	IqmDequeuePktCnt uint64 `protobuf:"varint,12,opt,name=iqm_dequeue_pkt_cnt,json=iqmDequeuePktCnt" json:"iqm_dequeue_pkt_cnt,omitempty"`
	// Counts matched packets discarded in the DEQ process
	IqmDeletedPktCnt uint64 `protobuf:"varint,13,opt,name=iqm_deleted_pkt_cnt,json=iqmDeletedPktCnt" json:"iqm_deleted_pkt_cnt,omitempty"`
	// Counts all packets discarded at the ENQ pipe
	IqmEnqDiscardedPktCnt uint64 `protobuf:"varint,14,opt,name=iqm_enq_discarded_pkt_cnt,json=iqmEnqDiscardedPktCnt" json:"iqm_enq_discarded_pkt_cnt,omitempty"`
	// EGQ packet counter
	IptEgqPktCnt uint64 `protobuf:"varint,15,opt,name=ipt_egq_pkt_cnt,json=iptEgqPktCnt" json:"ipt_egq_pkt_cnt,omitempty"`
	// ENQ packet counter
	IptEnqPktCnt uint64 `protobuf:"varint,16,opt,name=ipt_enq_pkt_cnt,json=iptEnqPktCnt" json:"ipt_enq_pkt_cnt,omitempty"`
	// FDT packet counter
	IptFdtPktCnt uint64 `protobuf:"varint,17,opt,name=ipt_fdt_pkt_cnt,json=iptFdtPktCnt" json:"ipt_fdt_pkt_cnt,omitempty"`
	// Configurable event counter
	IptCfgEventCnt uint64 `protobuf:"varint,18,opt,name=ipt_cfg_event_cnt,json=iptCfgEventCnt" json:"ipt_cfg_event_cnt,omitempty"`
	// Configurable bytes counter
	IptCfgByteCnt uint64 `protobuf:"varint,19,opt,name=ipt_cfg_byte_cnt,json=iptCfgByteCnt" json:"ipt_cfg_byte_cnt,omitempty"`
	// Descriptor cell counter
	FdtIptDescCellCnt uint64 `protobuf:"varint,20,opt,name=fdt_ipt_desc_cell_cnt,json=fdtIptDescCellCnt" json:"fdt_ipt_desc_cell_cnt,omitempty"`
	// IRE internal descriptor cell counter
	FdtIreDescCellCnt uint64 `protobuf:"varint,21,opt,name=fdt_ire_desc_cell_cnt,json=fdtIreDescCellCnt" json:"fdt_ire_desc_cell_cnt,omitempty"`
	// Counts all transmitted data cells
	FdtTransmittedDataCellsCnt uint64 `protobuf:"varint,22,opt,name=fdt_transmitted_data_cells_cnt,json=fdtTransmittedDataCellsCnt" json:"fdt_transmitted_data_cells_cnt,omitempty"`
	// FDR total incoming cell counter at pipe 1
	FdrP1CellInCnt uint64 `protobuf:"varint,23,opt,name=fdr_p1_cell_in_cnt,json=fdrP1CellInCnt" json:"fdr_p1_cell_in_cnt,omitempty"`
	// FDR total incoming cell counter at pipe 2
	FdrP2CellInCnt uint64 `protobuf:"varint,24,opt,name=fdr_p2_cell_in_cnt,json=fdrP2CellInCnt" json:"fdr_p2_cell_in_cnt,omitempty"`
	// FDR total incoming cell counter at pipe 3
	FdrP3CellInCnt uint64 `protobuf:"varint,25,opt,name=fdr_p3_cell_in_cnt,json=fdrP3CellInCnt" json:"fdr_p3_cell_in_cnt,omitempty"`
	// FDR total incoming cell counter
	FdrCellInCntTotal uint64 `protobuf:"varint,26,opt,name=fdr_cell_in_cnt_total,json=fdrCellInCntTotal" json:"fdr_cell_in_cnt_total,omitempty"`
	// FDA input cell counter P1
	FdaCellsInCntP1 uint64 `protobuf:"varint,27,opt,name=fda_cells_in_cnt_p1,json=fdaCellsInCntP1" json:"fda_cells_in_cnt_p1,omitempty"`
	// FDA input cell counter P2
	FdaCellsInCntP2 uint64 `protobuf:"varint,28,opt,name=fda_cells_in_cnt_p2,json=fdaCellsInCntP2" json:"fda_cells_in_cnt_p2,omitempty"`
	// FDA input cell counter P3
	FdaCellsInCntP3 uint64 `protobuf:"varint,29,opt,name=fda_cells_in_cnt_p3,json=fdaCellsInCntP3" json:"fda_cells_in_cnt_p3,omitempty"`
	// FDA input cell counter TDM
	FdaCellsInTdmCnt uint64 `protobuf:"varint,30,opt,name=fda_cells_in_tdm_cnt,json=fdaCellsInTdmCnt" json:"fda_cells_in_tdm_cnt,omitempty"`
	// FDA input cell counter MESHMC
	FdaCellsInMeshmcCnt uint64 `protobuf:"varint,31,opt,name=fda_cells_in_meshmc_cnt,json=fdaCellsInMeshmcCnt" json:"fda_cells_in_meshmc_cnt,omitempty"`
	// FDA input cell counter IPT
	FdaCellsInIptCnt uint64 `protobuf:"varint,32,opt,name=fda_cells_in_ipt_cnt,json=fdaCellsInIptCnt" json:"fda_cells_in_ipt_cnt,omitempty"`
	// FDA output cell counter P1
	FdaCellsOutCntP1 uint64 `protobuf:"varint,33,opt,name=fda_cells_out_cnt_p1,json=fdaCellsOutCntP1" json:"fda_cells_out_cnt_p1,omitempty"`
	// FDA output cell counter P2
	FdaCellsOutCntP2 uint64 `protobuf:"varint,34,opt,name=fda_cells_out_cnt_p2,json=fdaCellsOutCntP2" json:"fda_cells_out_cnt_p2,omitempty"`
	// FDA output cell counter P3
	FdaCellsOutCntP3 uint64 `protobuf:"varint,35,opt,name=fda_cells_out_cnt_p3,json=fdaCellsOutCntP3" json:"fda_cells_out_cnt_p3,omitempty"`
	// FDA output cell counter TDM
	FdaCellsOutTdmCnt uint64 `protobuf:"varint,36,opt,name=fda_cells_out_tdm_cnt,json=fdaCellsOutTdmCnt" json:"fda_cells_out_tdm_cnt,omitempty"`
	// FDA output cell counter MESHMC
	FdaCellsOutMeshmcCnt uint64 `protobuf:"varint,37,opt,name=fda_cells_out_meshmc_cnt,json=fdaCellsOutMeshmcCnt" json:"fda_cells_out_meshmc_cnt,omitempty"`
	// FDA output cell counter IPT
	FdaCellsOutIptCnt uint64 `protobuf:"varint,38,opt,name=fda_cells_out_ipt_cnt,json=fdaCellsOutIptCnt" json:"fda_cells_out_ipt_cnt,omitempty"`
	// FDA EGQ drop counter
	FdaEgqDropCnt uint64 `protobuf:"varint,39,opt,name=fda_egq_drop_cnt,json=fdaEgqDropCnt" json:"fda_egq_drop_cnt,omitempty"`
	// FDA EGQ MESHMC drop counter
	FdaEgqMeshmcDropCnt uint64 `protobuf:"varint,40,opt,name=fda_egq_meshmc_drop_cnt,json=fdaEgqMeshmcDropCnt" json:"fda_egq_meshmc_drop_cnt,omitempty"`
	// FQP2EPE packet counter
	EgqFqpPktCnt uint64 `protobuf:"varint,41,opt,name=egq_fqp_pkt_cnt,json=egqFqpPktCnt" json:"egq_fqp_pkt_cnt,omitempty"`
	// PQP2FQP unicast packet counter
	EgqPqpUcPktCnt uint64 `protobuf:"varint,42,opt,name=egq_pqp_uc_pkt_cnt,json=egqPqpUcPktCnt" json:"egq_pqp_uc_pkt_cnt,omitempty"`
	// PQP discarded unicast packet counter
	EgqPqpDiscardUcPktCnt uint64 `protobuf:"varint,43,opt,name=egq_pqp_discard_uc_pkt_cnt,json=egqPqpDiscardUcPktCnt" json:"egq_pqp_discard_uc_pkt_cnt,omitempty"`
	// PQP2FQP unicast bytes counter
	EgqPqpUcBytesCnt uint64 `protobuf:"varint,44,opt,name=egq_pqp_uc_bytes_cnt,json=egqPqpUcBytesCnt" json:"egq_pqp_uc_bytes_cnt,omitempty"`
	// PQP2FQP multicast packet counter
	EgqPqpMcPktCnt uint64 `protobuf:"varint,45,opt,name=egq_pqp_mc_pkt_cnt,json=egqPqpMcPktCnt" json:"egq_pqp_mc_pkt_cnt,omitempty"`
	// PQP discarded multicast packet counter
	EgqPqpDiscardMcPktCnt uint64 `protobuf:"varint,46,opt,name=egq_pqp_discard_mc_pkt_cnt,json=egqPqpDiscardMcPktCnt" json:"egq_pqp_discard_mc_pkt_cnt,omitempty"`
	// PQP2FQP multicast bytes counter
	EgqPqpMcBytesCnt uint64 `protobuf:"varint,47,opt,name=egq_pqp_mc_bytes_cnt,json=egqPqpMcBytesCnt" json:"egq_pqp_mc_bytes_cnt,omitempty"`
	// EHP2PQP unicast packet counter
	EgqEhpUcPktCnt uint64 `protobuf:"varint,48,opt,name=egq_ehp_uc_pkt_cnt,json=egqEhpUcPktCnt" json:"egq_ehp_uc_pkt_cnt,omitempty"`
	// EHP2PQP multicast high packet counter
	EgqEhpMcHighPktCnt uint64 `protobuf:"varint,49,opt,name=egq_ehp_mc_high_pkt_cnt,json=egqEhpMcHighPktCnt" json:"egq_ehp_mc_high_pkt_cnt,omitempty"`
	// EHP2PQP multicast low packet counter
	EgqEhpMcLowPktCnt uint64 `protobuf:"varint,50,opt,name=egq_ehp_mc_low_pkt_cnt,json=egqEhpMcLowPktCnt" json:"egq_ehp_mc_low_pkt_cnt,omitempty"`
	// EHP2PQP discarded packet counter
	EgqDeletedPktCnt uint64 `protobuf:"varint,51,opt,name=egq_deleted_pkt_cnt,json=egqDeletedPktCnt" json:"egq_deleted_pkt_cnt,omitempty"`
	// Number of multicast high packets discarded because multicast FIFO is full
	EgqEhpMcHighDiscardCnt uint64 `protobuf:"varint,52,opt,name=egq_ehp_mc_high_discard_cnt,json=egqEhpMcHighDiscardCnt" json:"egq_ehp_mc_high_discard_cnt,omitempty"`
	// Number of multicast low packets discarded because multicast FIFO is full
	EgqEhpMcLowDiscardCnt uint64 `protobuf:"varint,53,opt,name=egq_ehp_mc_low_discard_cnt,json=egqEhpMcLowDiscardCnt" json:"egq_ehp_mc_low_discard_cnt,omitempty"`
	// Number of packet descriptors discarded due to LAG multicast pruning
	EgqErppLagPruningDiscardCnt uint64 `protobuf:"varint,54,opt,name=egq_erpp_lag_pruning_discard_cnt,json=egqErppLagPruningDiscardCnt" json:"egq_erpp_lag_pruning_discard_cnt,omitempty"`
	// Number of packet descriptors discarded due to ERPP PMF
	EgqErppPmfDiscardCnt uint64 `protobuf:"varint,55,opt,name=egq_erpp_pmf_discard_cnt,json=egqErppPmfDiscardCnt" json:"egq_erpp_pmf_discard_cnt,omitempty"`
	// Number of packet descriptors discarded because of egress VLAN membership
	EgqErppVlanMbrDiscardCnt uint64 `protobuf:"varint,56,opt,name=egq_erpp_vlan_mbr_discard_cnt,json=egqErppVlanMbrDiscardCnt" json:"egq_erpp_vlan_mbr_discard_cnt,omitempty"`
	// EPE2PNI bytes counter
	EpniEpeByteCnt uint64 `protobuf:"varint,57,opt,name=epni_epe_byte_cnt,json=epniEpeByteCnt" json:"epni_epe_byte_cnt,omitempty"`
	// EPE2PNI packet counter
	EpniEpePktCnt uint64 `protobuf:"varint,58,opt,name=epni_epe_pkt_cnt,json=epniEpePktCnt" json:"epni_epe_pkt_cnt,omitempty"`
	// EPE discarded packet counter
	EpniEpeDiscardCnt uint64 `protobuf:"varint,59,opt,name=epni_epe_discard_cnt,json=epniEpeDiscardCnt" json:"epni_epe_discard_cnt,omitempty"`
	// Total bytes sent from EGQ to NIF
	NbiTxTotalByteCnt uint64 `protobuf:"varint,60,opt,name=nbi_tx_total_byte_cnt,json=nbiTxTotalByteCnt" json:"nbi_tx_total_byte_cnt,omitempty"`
	// Total packets sent from EGQ to NIF
	NbiTxTotalPktCnt uint64 `protobuf:"varint,61,opt,name=nbi_tx_total_pkt_cnt,json=nbiTxTotalPktCnt" json:"nbi_tx_total_pkt_cnt,omitempty"`
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) Reset()                    { *m = FiaEdmDeviceStatsAsicBriefInfo{} }
func (m *FiaEdmDeviceStatsAsicBriefInfo) String() string            { return proto.CompactTextString(m) }
func (*FiaEdmDeviceStatsAsicBriefInfo) ProtoMessage()               {}
func (*FiaEdmDeviceStatsAsicBriefInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetNbiRxTotalByteCnt() uint64 {
	if m != nil {
		return m.NbiRxTotalByteCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetNbiRxTotalPktCnt() uint64 {
	if m != nil {
		return m.NbiRxTotalPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIreCpuPktCnt() uint64 {
	if m != nil {
		return m.IreCpuPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIreNifPktCnt() uint64 {
	if m != nil {
		return m.IreNifPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIreOampPktCnt() uint64 {
	if m != nil {
		return m.IreOampPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIreOlpPktCnt() uint64 {
	if m != nil {
		return m.IreOlpPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIreRcyPktCnt() uint64 {
	if m != nil {
		return m.IreRcyPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIreFdtIfCnt() uint64 {
	if m != nil {
		return m.IreFdtIfCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIdrMmuIfCnt() uint64 {
	if m != nil {
		return m.IdrMmuIfCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIdrOcbIfCnt() uint64 {
	if m != nil {
		return m.IdrOcbIfCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIqmEnqueuePktCnt() uint64 {
	if m != nil {
		return m.IqmEnqueuePktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIqmDequeuePktCnt() uint64 {
	if m != nil {
		return m.IqmDequeuePktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIqmDeletedPktCnt() uint64 {
	if m != nil {
		return m.IqmDeletedPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIqmEnqDiscardedPktCnt() uint64 {
	if m != nil {
		return m.IqmEnqDiscardedPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIptEgqPktCnt() uint64 {
	if m != nil {
		return m.IptEgqPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIptEnqPktCnt() uint64 {
	if m != nil {
		return m.IptEnqPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIptFdtPktCnt() uint64 {
	if m != nil {
		return m.IptFdtPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIptCfgEventCnt() uint64 {
	if m != nil {
		return m.IptCfgEventCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetIptCfgByteCnt() uint64 {
	if m != nil {
		return m.IptCfgByteCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdtIptDescCellCnt() uint64 {
	if m != nil {
		return m.FdtIptDescCellCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdtIreDescCellCnt() uint64 {
	if m != nil {
		return m.FdtIreDescCellCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdtTransmittedDataCellsCnt() uint64 {
	if m != nil {
		return m.FdtTransmittedDataCellsCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdrP1CellInCnt() uint64 {
	if m != nil {
		return m.FdrP1CellInCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdrP2CellInCnt() uint64 {
	if m != nil {
		return m.FdrP2CellInCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdrP3CellInCnt() uint64 {
	if m != nil {
		return m.FdrP3CellInCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdrCellInCntTotal() uint64 {
	if m != nil {
		return m.FdrCellInCntTotal
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdaCellsInCntP1() uint64 {
	if m != nil {
		return m.FdaCellsInCntP1
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdaCellsInCntP2() uint64 {
	if m != nil {
		return m.FdaCellsInCntP2
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdaCellsInCntP3() uint64 {
	if m != nil {
		return m.FdaCellsInCntP3
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdaCellsInTdmCnt() uint64 {
	if m != nil {
		return m.FdaCellsInTdmCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdaCellsInMeshmcCnt() uint64 {
	if m != nil {
		return m.FdaCellsInMeshmcCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdaCellsInIptCnt() uint64 {
	if m != nil {
		return m.FdaCellsInIptCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdaCellsOutCntP1() uint64 {
	if m != nil {
		return m.FdaCellsOutCntP1
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdaCellsOutCntP2() uint64 {
	if m != nil {
		return m.FdaCellsOutCntP2
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdaCellsOutCntP3() uint64 {
	if m != nil {
		return m.FdaCellsOutCntP3
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdaCellsOutTdmCnt() uint64 {
	if m != nil {
		return m.FdaCellsOutTdmCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdaCellsOutMeshmcCnt() uint64 {
	if m != nil {
		return m.FdaCellsOutMeshmcCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdaCellsOutIptCnt() uint64 {
	if m != nil {
		return m.FdaCellsOutIptCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdaEgqDropCnt() uint64 {
	if m != nil {
		return m.FdaEgqDropCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetFdaEgqMeshmcDropCnt() uint64 {
	if m != nil {
		return m.FdaEgqMeshmcDropCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqFqpPktCnt() uint64 {
	if m != nil {
		return m.EgqFqpPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqPqpUcPktCnt() uint64 {
	if m != nil {
		return m.EgqPqpUcPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqPqpDiscardUcPktCnt() uint64 {
	if m != nil {
		return m.EgqPqpDiscardUcPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqPqpUcBytesCnt() uint64 {
	if m != nil {
		return m.EgqPqpUcBytesCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqPqpMcPktCnt() uint64 {
	if m != nil {
		return m.EgqPqpMcPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqPqpDiscardMcPktCnt() uint64 {
	if m != nil {
		return m.EgqPqpDiscardMcPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqPqpMcBytesCnt() uint64 {
	if m != nil {
		return m.EgqPqpMcBytesCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqEhpUcPktCnt() uint64 {
	if m != nil {
		return m.EgqEhpUcPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqEhpMcHighPktCnt() uint64 {
	if m != nil {
		return m.EgqEhpMcHighPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqEhpMcLowPktCnt() uint64 {
	if m != nil {
		return m.EgqEhpMcLowPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqDeletedPktCnt() uint64 {
	if m != nil {
		return m.EgqDeletedPktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqEhpMcHighDiscardCnt() uint64 {
	if m != nil {
		return m.EgqEhpMcHighDiscardCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqEhpMcLowDiscardCnt() uint64 {
	if m != nil {
		return m.EgqEhpMcLowDiscardCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqErppLagPruningDiscardCnt() uint64 {
	if m != nil {
		return m.EgqErppLagPruningDiscardCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqErppPmfDiscardCnt() uint64 {
	if m != nil {
		return m.EgqErppPmfDiscardCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEgqErppVlanMbrDiscardCnt() uint64 {
	if m != nil {
		return m.EgqErppVlanMbrDiscardCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEpniEpeByteCnt() uint64 {
	if m != nil {
		return m.EpniEpeByteCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEpniEpePktCnt() uint64 {
	if m != nil {
		return m.EpniEpePktCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetEpniEpeDiscardCnt() uint64 {
	if m != nil {
		return m.EpniEpeDiscardCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetNbiTxTotalByteCnt() uint64 {
	if m != nil {
		return m.NbiTxTotalByteCnt
	}
	return 0
}

func (m *FiaEdmDeviceStatsAsicBriefInfo) GetNbiTxTotalPktCnt() uint64 {
	if m != nil {
		return m.NbiTxTotalPktCnt
	}
	return 0
}

func init() {
	proto.RegisterType((*FiaEdmStatsBriefInfo_KEYS)(nil), "cisco_ios_xr_fretta_bcm_dpa_npu_stats_oper.dpa.stats.nodes.node.asic_statistics.asic_statistics_for_npu_ids.asic_statistics_for_npu_id.fia_edm_stats_brief_info_KEYS")
	proto.RegisterType((*FiaEdmStatsBriefInfo)(nil), "cisco_ios_xr_fretta_bcm_dpa_npu_stats_oper.dpa.stats.nodes.node.asic_statistics.asic_statistics_for_npu_ids.asic_statistics_for_npu_id.fia_edm_stats_brief_info")
	proto.RegisterType((*FiaEdmDeviceStatsAsicBriefInfo)(nil), "cisco_ios_xr_fretta_bcm_dpa_npu_stats_oper.dpa.stats.nodes.node.asic_statistics.asic_statistics_for_npu_ids.asic_statistics_for_npu_id.fia_edm_device_stats_asic_brief_info")
}

func init() { proto.RegisterFile("fia_edm_stats_brief_info.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x97, 0x6f, 0x6f, 0xd4, 0x36,
	0x18, 0xc0, 0x75, 0xfc, 0x1b, 0xb8, 0x2d, 0x6d, 0xd3, 0x96, 0x06, 0x18, 0x50, 0x0a, 0xac, 0x85,
	0xc1, 0x41, 0xef, 0xa0, 0xc0, 0xd8, 0x34, 0x89, 0xf6, 0xd0, 0xaa, 0x51, 0x5a, 0x1d, 0x1d, 0xd2,
	0x5e, 0x59, 0xb9, 0xd8, 0xc9, 0x59, 0x24, 0x8e, 0xe3, 0x38, 0x85, 0x7e, 0x81, 0xbd, 0x98, 0xf6,
	0x51, 0xf6, 0x55, 0xf6, 0x9d, 0x26, 0xff, 0x8d, 0x73, 0x3d, 0xd0, 0x5e, 0xee, 0x4d, 0xa5, 0x73,
	0x7e, 0x3f, 0xfb, 0xf1, 0xf3, 0x24, 0x8f, 0x5d, 0x70, 0x33, 0x21, 0x11, 0xc4, 0x28, 0x87, 0x95,
	0x88, 0x44, 0x05, 0x47, 0x9c, 0xe0, 0x04, 0x12, 0x9a, 0x14, 0x5d, 0xc6, 0x0b, 0x51, 0x04, 0x7f,
	0x74, 0x62, 0x52, 0xc5, 0x05, 0x24, 0x45, 0x05, 0x3f, 0x73, 0x98, 0x70, 0x2c, 0x44, 0x04, 0x47,
	0x71, 0x0e, 0x11, 0x8b, 0x20, 0x65, 0xb5, 0x11, 0x0b, 0x86, 0x79, 0x17, 0xb1, 0xa8, 0xab, 0x7e,
	0x76, 0x69, 0x81, 0xb0, 0xfe, 0xdb, 0x8d, 0x2a, 0x12, 0x2b, 0x88, 0x54, 0x82, 0xc4, 0xd5, 0xe4,
	0x6f, 0x98, 0x14, 0x5c, 0xcd, 0x43, 0xd0, 0xd7, 0x9e, 0xad, 0xbf, 0x07, 0x37, 0xbe, 0x14, 0x2a,
	0xfc, 0x75, 0xf0, 0xfb, 0xfb, 0xe0, 0x3a, 0xb8, 0x24, 0xd7, 0x83, 0x34, 0xca, 0x71, 0xd8, 0x59,
	0xeb, 0x6c, 0x5e, 0x1a, 0x5e, 0x94, 0x03, 0xef, 0xa2, 0x1c, 0x07, 0x2b, 0xe0, 0x82, 0x9e, 0x27,
	0x3c, 0xb3, 0xd6, 0xd9, 0x9c, 0x1b, 0x9e, 0xa7, 0xac, 0xde, 0x43, 0xeb, 0x7f, 0x9e, 0x05, 0xe1,
	0x97, 0x66, 0x0d, 0x96, 0xc1, 0xf9, 0xe3, 0x28, 0x23, 0x28, 0xec, 0xad, 0x75, 0x36, 0x2f, 0x0e,
	0xf5, 0x8f, 0xe0, 0x16, 0x98, 0xe1, 0x51, 0xfc, 0x11, 0xd2, 0x3a, 0x1f, 0x61, 0x1e, 0xf6, 0xd5,
	0x74, 0x40, 0x0e, 0xbd, 0x53, 0x23, 0x12, 0xa8, 0xb2, 0x42, 0x58, 0xe0, 0xa9, 0x06, 0xe4, 0x90,
	0x01, 0xee, 0x80, 0x39, 0xb5, 0x4f, 0x42, 0x2b, 0x11, 0xd1, 0x18, 0x87, 0xcf, 0x14, 0x32, 0x2b,
	0x07, 0xf7, 0xcc, 0x58, 0x70, 0x1b, 0xcc, 0xc6, 0x63, 0xc2, 0xe0, 0x31, 0xe6, 0x15, 0x29, 0x68,
	0xb8, 0xad, 0x98, 0x19, 0x39, 0xf6, 0x41, 0x0f, 0x05, 0xff, 0x74, 0x00, 0x68, 0x72, 0x15, 0x3e,
	0x5f, 0xeb, 0x6c, 0xce, 0xf4, 0xfe, 0xee, 0x74, 0xff, 0x1f, 0x05, 0xeb, 0xda, 0xbc, 0x22, 0x7c,
	0x4c, 0x62, 0x6c, 0x56, 0x55, 0x7c, 0x93, 0xe3, 0xa1, 0xb7, 0x81, 0xf5, 0xbf, 0x56, 0xc1, 0xdd,
	0xff, 0x22, 0x05, 0x4f, 0xc0, 0x0a, 0x1d, 0x11, 0xc8, 0x3f, 0x43, 0x51, 0x88, 0x28, 0x83, 0xa3,
	0x13, 0x81, 0x61, 0x4c, 0x85, 0xaa, 0xfa, 0xb9, 0xe1, 0x22, 0x1d, 0x91, 0xe1, 0xe7, 0x23, 0xf9,
	0xe8, 0xf5, 0x89, 0xc0, 0x3b, 0x54, 0x04, 0x5d, 0xb0, 0xdc, 0x32, 0xd8, 0x47, 0xa1, 0x84, 0x33,
	0x4a, 0x58, 0x68, 0x84, 0xc3, 0x8f, 0x42, 0xf2, 0xf7, 0xc0, 0x3c, 0xe1, 0x18, 0xc6, 0xac, 0x76,
	0xe8, 0x59, 0x85, 0xce, 0x12, 0x8e, 0x77, 0x58, 0xdd, 0xc6, 0x28, 0x49, 0x1c, 0x76, 0xce, 0x61,
	0xef, 0x48, 0x62, 0xb0, 0x0d, 0xb0, 0x20, 0xb1, 0x22, 0xca, 0x99, 0xe3, 0xce, 0x2b, 0x6e, 0x8e,
	0x70, 0x7c, 0x10, 0xe5, 0xac, 0x3d, 0x5f, 0x91, 0x35, 0xdc, 0x05, 0x37, 0xdf, 0x41, 0x36, 0x81,
	0xf1, 0xf8, 0xc4, 0x61, 0xdf, 0x38, 0x6c, 0x18, 0x9f, 0x18, 0xec, 0x0e, 0xb8, 0x2c, 0xb1, 0x04,
	0x09, 0x48, 0x12, 0x45, 0x5d, 0x54, 0xd4, 0x0c, 0xe1, 0xf8, 0x0d, 0x12, 0x7b, 0x89, 0x85, 0x10,
	0x87, 0x79, 0x5e, 0x5b, 0xe8, 0x92, 0x81, 0x10, 0xdf, 0xcf, 0xeb, 0x16, 0x54, 0xc4, 0x23, 0x0b,
	0x01, 0x07, 0x1d, 0xc4, 0x23, 0x0d, 0x3d, 0x02, 0x4b, 0xa4, 0xcc, 0x21, 0xa6, 0x65, 0x8d, 0x6b,
	0xec, 0x22, 0x9b, 0xd1, 0x29, 0x26, 0x65, 0x3e, 0xd0, 0x4f, 0x4c, 0x74, 0x06, 0x47, 0xb8, 0x8d,
	0xcf, 0x3a, 0x7c, 0x17, 0x4f, 0xc5, 0x33, 0x2c, 0x30, 0x72, 0xf8, 0x9c, 0x87, 0xab, 0x27, 0x06,
	0x7f, 0x01, 0xae, 0x9a, 0x60, 0x20, 0x22, 0x55, 0x1c, 0x71, 0xe4, 0x49, 0x97, 0x95, 0xb4, 0xa2,
	0x43, 0xda, 0xb5, 0x8f, 0xbd, 0xe4, 0x32, 0x01, 0x71, 0x5a, 0x3a, 0x7e, 0xde, 0x24, 0x97, 0x89,
	0x41, 0x5a, 0x4e, 0x60, 0xb4, 0xc1, 0x16, 0x1a, 0x8c, 0x4e, 0x60, 0xb2, 0x06, 0x16, 0x5b, 0x74,
	0xd8, 0x1b, 0x24, 0x0c, 0x76, 0x1f, 0x2c, 0x4a, 0x2c, 0x4e, 0x52, 0x88, 0x8f, 0x31, 0xd5, 0x60,
	0xa0, 0xc0, 0xcb, 0x84, 0x89, 0x9d, 0x24, 0x1d, 0xc8, 0x61, 0xfb, 0x32, 0x19, 0xd4, 0xbd, 0xf7,
	0x4b, 0xe6, 0x65, 0x52, 0xa4, 0x7d, 0xe7, 0x9f, 0x80, 0x15, 0x55, 0x7a, 0x26, 0x20, 0xc2, 0x55,
	0x0c, 0x63, 0x9c, 0x65, 0x8a, 0x5e, 0xd6, 0x5f, 0x49, 0x82, 0xc4, 0x1e, 0x13, 0xbb, 0xb8, 0x8a,
	0x77, 0x70, 0x96, 0xf9, 0x06, 0xc7, 0x13, 0xc6, 0x4a, 0x63, 0x70, 0xec, 0x1b, 0xaf, 0xc1, 0x4d,
	0x69, 0x08, 0x1e, 0xd1, 0x2a, 0x27, 0x42, 0x56, 0x06, 0x45, 0x22, 0x52, 0x66, 0xa5, 0xd4, 0x2b,
	0x4a, 0xbd, 0x96, 0x20, 0x71, 0xd4, 0x40, 0xbb, 0x91, 0x88, 0xe4, 0x14, 0x95, 0x9c, 0xe3, 0x01,
	0x08, 0x12, 0xc4, 0x21, 0xdb, 0xd2, 0xeb, 0x11, 0xaa, 0xbc, 0x55, 0xbd, 0xf9, 0x04, 0xf1, 0xc3,
	0x2d, 0x89, 0xee, 0x51, 0x9f, 0xed, 0xb5, 0xd8, 0xb0, 0x61, 0x7b, 0xa7, 0xd9, 0x7e, 0x8b, 0xbd,
	0xda, 0xb0, 0xfd, 0x86, 0x55, 0x3b, 0xe7, 0x3e, 0xa8, 0x1b, 0x45, 0x78, 0xcd, 0xee, 0x9c, 0x3b,
	0x58, 0xf5, 0x89, 0xe0, 0x21, 0x58, 0x4a, 0x90, 0xdd, 0xa8, 0x51, 0xd8, 0x56, 0x78, 0x5d, 0xf1,
	0xf3, 0x09, 0xd2, 0xfb, 0x53, 0xc2, 0xe1, 0xd6, 0x74, 0xba, 0x17, 0x7e, 0x3b, 0x8d, 0xee, 0x4d,
	0xa7, 0xfb, 0xe1, 0x8d, 0x69, 0x74, 0x5f, 0xf6, 0xb6, 0x16, 0x2d, 0x50, 0xae, 0x76, 0x7a, 0x53,
	0x7f, 0x1a, 0x0d, 0x7e, 0x84, 0x72, 0xb9, 0xd7, 0xa7, 0x60, 0xb5, 0xc5, 0xe7, 0xb8, 0x1a, 0xe7,
	0xb1, 0x52, 0x6e, 0x29, 0x65, 0xa9, 0x51, 0xf6, 0xd5, 0x33, 0xd3, 0x41, 0x5b, 0x96, 0x7a, 0x07,
	0xa9, 0x08, 0xd7, 0x26, 0x57, 0xd9, 0x63, 0xe2, 0x14, 0x5f, 0xd4, 0xc2, 0x26, 0xe8, 0x76, 0x9b,
	0x3f, 0xa8, 0x85, 0xce, 0xd0, 0x74, 0xbe, 0x17, 0xae, 0x4f, 0xe5, 0x7b, 0x5f, 0xe0, 0xfb, 0xe1,
	0x9d, 0xa9, 0x7c, 0x5f, 0x57, 0xd8, 0xe7, 0x6d, 0x9a, 0xee, 0xda, 0x0a, 0x3b, 0xc1, 0xe4, 0x69,
	0x1b, 0x84, 0x6d, 0xc3, 0x4b, 0xd4, 0x3d, 0x25, 0x2d, 0x7b, 0x52, 0x93, 0xa9, 0x53, 0x2b, 0xd9,
	0x54, 0x7d, 0x77, 0x6a, 0x25, 0x93, 0xab, 0x0d, 0x20, 0xe3, 0x55, 0x2d, 0x07, 0xf1, 0x82, 0x29,
	0x78, 0x43, 0x7f, 0xd2, 0x09, 0x8a, 0x06, 0x69, 0xb9, 0xcb, 0x0b, 0xe6, 0x95, 0x4e, 0x82, 0x26,
	0x18, 0xc7, 0x6f, 0xba, 0xd2, 0x0d, 0xd2, 0x52, 0x07, 0x63, 0xad, 0x7b, 0x60, 0x5e, 0x1a, 0x49,
	0xd9, 0x9c, 0x2a, 0xf7, 0x75, 0x0f, 0xc2, 0x69, 0xf9, 0xa6, 0xb4, 0xa7, 0xca, 0x03, 0x10, 0xa8,
	0xa6, 0x57, 0x32, 0x58, 0xc7, 0x8e, 0x7c, 0xa0, 0xbf, 0x17, 0x9c, 0x96, 0x87, 0x25, 0xfb, 0x2d,
	0x36, 0xec, 0x4b, 0x70, 0xcd, 0xb2, 0xa6, 0xbd, 0xfa, 0xce, 0xf7, 0xba, 0xbf, 0x6a, 0xc7, 0xf4,
	0x57, 0xa7, 0x76, 0xc1, 0xb2, 0xb7, 0x8c, 0x6c, 0x61, 0xba, 0x51, 0x3c, 0xd4, 0x85, 0xb3, 0x0b,
	0xc9, 0x2e, 0x56, 0x4d, 0x84, 0x95, 0x37, 0x4b, 0x3c, 0xf2, 0xc3, 0xda, 0xff, 0x4a, 0x58, 0x9e,
	0xd3, 0x9d, 0x12, 0xd6, 0xfe, 0x94, 0xb0, 0x72, 0x3f, 0xac, 0xc7, 0x7e, 0x58, 0xfb, 0xa7, 0xc2,
	0xc2, 0xe3, 0x56, 0xb6, 0x9e, 0xb8, 0xb0, 0x06, 0xe3, 0x26, 0x5b, 0x7d, 0xb0, 0x6a, 0xd9, 0x3c,
	0x86, 0x63, 0x92, 0x8e, 0x9d, 0xb0, 0xa5, 0x84, 0x40, 0x0b, 0xfb, 0xf1, 0x2f, 0x24, 0x1d, 0x1b,
	0x69, 0x0b, 0x5c, 0xf1, 0xa4, 0xac, 0xf8, 0xe4, 0x9c, 0x9e, 0x7e, 0x8f, 0xac, 0xf3, 0xb6, 0xf8,
	0xd4, 0x9c, 0x91, 0xea, 0x1d, 0x9a, 0x38, 0x23, 0xfb, 0x6e, 0x0b, 0xed, 0x33, 0xf2, 0x15, 0xb8,
	0x3e, 0x19, 0x96, 0xcd, 0x9a, 0xd4, 0x9e, 0x2a, 0xed, 0x8a, 0x1f, 0x9a, 0x49, 0x9a, 0x97, 0x6a,
	0x2f, 0x3c, 0xdf, 0x7d, 0xe6, 0x52, 0x6d, 0x43, 0xf4, 0xd4, 0x01, 0x58, 0x53, 0x2a, 0x67, 0x0c,
	0x66, 0x51, 0x0a, 0x19, 0xaf, 0x29, 0xa1, 0x69, 0x6b, 0x82, 0x6d, 0x35, 0x81, 0x8c, 0x6f, 0xc0,
	0x19, 0x7b, 0x1b, 0xa5, 0x87, 0x1a, 0xf2, 0xa6, 0xd9, 0x06, 0xa1, 0x9b, 0x86, 0xe5, 0x49, 0x4b,
	0x7f, 0xae, 0xbf, 0x4f, 0xa3, 0x1f, 0xe6, 0x89, 0xe7, 0xfd, 0x0c, 0x6e, 0x38, 0xef, 0x38, 0x8b,
	0x28, 0xcc, 0x47, 0xbc, 0x25, 0xbf, 0x50, 0x72, 0x68, 0xe4, 0x0f, 0x59, 0x44, 0xf7, 0x47, 0xdc,
	0x9b, 0xe0, 0x3e, 0x58, 0xc4, 0x8c, 0x12, 0x88, 0x19, 0x6e, 0x8e, 0xe0, 0x97, 0xa6, 0xf2, 0x8c,
	0x92, 0x01, 0xc3, 0xf6, 0x0c, 0xde, 0x00, 0x0b, 0x0e, 0xb5, 0xe5, 0xf8, 0x41, 0x7f, 0xd9, 0x86,
	0x34, 0xb5, 0x78, 0x0c, 0x96, 0x1d, 0xe8, 0xc7, 0xf2, 0xca, 0xd4, 0x5a, 0xc3, 0x5e, 0x10, 0xe6,
	0x0e, 0x2c, 0x4e, 0xdd, 0x81, 0x7f, 0x74, 0x77, 0xe0, 0xa3, 0xa9, 0x77, 0x60, 0x31, 0x79, 0x07,
	0xfe, 0xc9, 0xdd, 0x81, 0x8f, 0xfc, 0x3b, 0xf0, 0xe8, 0x82, 0xfa, 0x07, 0xb0, 0xff, 0x6f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x9d, 0x94, 0x60, 0xac, 0x22, 0x0e, 0x00, 0x00,
}
