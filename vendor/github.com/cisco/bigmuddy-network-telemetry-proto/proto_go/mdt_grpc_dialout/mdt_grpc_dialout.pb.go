// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mdt_grpc_dialout.proto

/*
Package mdt_dialout is a generated protocol buffer package.

Package implements gRPC Model Driven Telemetry service

It is generated from these files:
	mdt_grpc_dialout.proto

It has these top-level messages:
	MdtDialoutArgs
*/
package mdt_dialout

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// MdtDialoutArgs is the content pushed to the server
type MdtDialoutArgs struct {
	ReqId int64 `protobuf:"varint,1,opt,name=ReqId" json:"ReqId,omitempty"`
	// data carries the payload content.
	Data   []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Errors string `protobuf:"bytes,3,opt,name=errors" json:"errors,omitempty"`
}

func (m *MdtDialoutArgs) Reset()                    { *m = MdtDialoutArgs{} }
func (m *MdtDialoutArgs) String() string            { return proto.CompactTextString(m) }
func (*MdtDialoutArgs) ProtoMessage()               {}
func (*MdtDialoutArgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MdtDialoutArgs) GetReqId() int64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *MdtDialoutArgs) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MdtDialoutArgs) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

func init() {
	proto.RegisterType((*MdtDialoutArgs)(nil), "mdt_dialout.MdtDialoutArgs")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GRPCMdtDialout service

type GRPCMdtDialoutClient interface {
	MdtDialout(ctx context.Context, opts ...grpc.CallOption) (GRPCMdtDialout_MdtDialoutClient, error)
}

type gRPCMdtDialoutClient struct {
	cc *grpc.ClientConn
}

func NewGRPCMdtDialoutClient(cc *grpc.ClientConn) GRPCMdtDialoutClient {
	return &gRPCMdtDialoutClient{cc}
}

func (c *gRPCMdtDialoutClient) MdtDialout(ctx context.Context, opts ...grpc.CallOption) (GRPCMdtDialout_MdtDialoutClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_GRPCMdtDialout_serviceDesc.Streams[0], c.cc, "/mdt_dialout.gRPCMdtDialout/MdtDialout", opts...)
	if err != nil {
		return nil, err
	}
	x := &gRPCMdtDialoutMdtDialoutClient{stream}
	return x, nil
}

type GRPCMdtDialout_MdtDialoutClient interface {
	Send(*MdtDialoutArgs) error
	Recv() (*MdtDialoutArgs, error)
	grpc.ClientStream
}

type gRPCMdtDialoutMdtDialoutClient struct {
	grpc.ClientStream
}

func (x *gRPCMdtDialoutMdtDialoutClient) Send(m *MdtDialoutArgs) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gRPCMdtDialoutMdtDialoutClient) Recv() (*MdtDialoutArgs, error) {
	m := new(MdtDialoutArgs)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for GRPCMdtDialout service

type GRPCMdtDialoutServer interface {
	MdtDialout(GRPCMdtDialout_MdtDialoutServer) error
}

func RegisterGRPCMdtDialoutServer(s *grpc.Server, srv GRPCMdtDialoutServer) {
	s.RegisterService(&_GRPCMdtDialout_serviceDesc, srv)
}

func _GRPCMdtDialout_MdtDialout_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GRPCMdtDialoutServer).MdtDialout(&gRPCMdtDialoutMdtDialoutServer{stream})
}

type GRPCMdtDialout_MdtDialoutServer interface {
	Send(*MdtDialoutArgs) error
	Recv() (*MdtDialoutArgs, error)
	grpc.ServerStream
}

type gRPCMdtDialoutMdtDialoutServer struct {
	grpc.ServerStream
}

func (x *gRPCMdtDialoutMdtDialoutServer) Send(m *MdtDialoutArgs) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gRPCMdtDialoutMdtDialoutServer) Recv() (*MdtDialoutArgs, error) {
	m := new(MdtDialoutArgs)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GRPCMdtDialout_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mdt_dialout.gRPCMdtDialout",
	HandlerType: (*GRPCMdtDialoutServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MdtDialout",
			Handler:       _GRPCMdtDialout_MdtDialout_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "mdt_grpc_dialout.proto",
}

func init() { proto.RegisterFile("mdt_grpc_dialout.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcb, 0x4d, 0x29, 0x89,
	0x4f, 0x2f, 0x2a, 0x48, 0x8e, 0x4f, 0xc9, 0x4c, 0xcc, 0xc9, 0x2f, 0x2d, 0xd1, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0xe2, 0x06, 0x89, 0x43, 0x85, 0x94, 0x82, 0xb8, 0xf8, 0x7c, 0x53, 0x4a, 0x5c,
	0x20, 0x3c, 0xc7, 0xa2, 0xf4, 0x62, 0x21, 0x11, 0x2e, 0xd6, 0xa0, 0xd4, 0x42, 0xcf, 0x14, 0x09,
	0x46, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x08, 0x47, 0x48, 0x88, 0x8b, 0x25, 0x25, 0xb1, 0x24, 0x51,
	0x82, 0x49, 0x81, 0x51, 0x83, 0x27, 0x08, 0xcc, 0x16, 0x12, 0xe3, 0x62, 0x4b, 0x2d, 0x2a, 0xca,
	0x2f, 0x2a, 0x96, 0x60, 0x56, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf2, 0x8c, 0xe2, 0xb8, 0xf8, 0xd2,
	0x83, 0x02, 0x9c, 0x11, 0xe6, 0x0a, 0xf9, 0x70, 0x71, 0x21, 0xf1, 0xa4, 0xf5, 0x90, 0x5c, 0xa0,
	0x87, 0x6a, 0xbd, 0x14, 0x3e, 0x49, 0x25, 0x06, 0x0d, 0x46, 0x03, 0xc6, 0x24, 0x36, 0xb0, 0x3f,
	0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x69, 0x64, 0x2c, 0x14, 0xe1, 0x00, 0x00, 0x00,
}
