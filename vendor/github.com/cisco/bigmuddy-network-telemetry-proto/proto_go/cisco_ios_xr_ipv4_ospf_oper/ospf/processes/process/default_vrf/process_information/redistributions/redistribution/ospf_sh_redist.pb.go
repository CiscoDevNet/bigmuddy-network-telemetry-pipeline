// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospf_sh_redist.proto

/*
Package cisco_ios_xr_ipv4_ospf_oper_ospf_processes_process_default_vrf_process_information_redistributions_redistribution is a generated protocol buffer package.

It is generated from these files:
	ospf_sh_redist.proto

It has these top-level messages:
	OspfShRedist_KEYS
	OspfShRedist
	StringType
	OspfShRedistProto
*/
package cisco_ios_xr_ipv4_ospf_oper_ospf_processes_process_default_vrf_process_information_redistributions_redistribution

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// OSPF Redistribution Information
type OspfShRedist_KEYS struct {
	ProcessName   string `protobuf:"bytes,1,opt,name=process_name,json=processName" json:"process_name,omitempty"`
	ProtocolName  string `protobuf:"bytes,2,opt,name=protocol_name,json=protocolName" json:"protocol_name,omitempty"`
	ProcessName_1 string `protobuf:"bytes,3,opt,name=process_name_1,json=processName1" json:"process_name_1,omitempty"`
}

func (m *OspfShRedist_KEYS) Reset()                    { *m = OspfShRedist_KEYS{} }
func (m *OspfShRedist_KEYS) String() string            { return proto.CompactTextString(m) }
func (*OspfShRedist_KEYS) ProtoMessage()               {}
func (*OspfShRedist_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *OspfShRedist_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *OspfShRedist_KEYS) GetProtocolName() string {
	if m != nil {
		return m.ProtocolName
	}
	return ""
}

func (m *OspfShRedist_KEYS) GetProcessName_1() string {
	if m != nil {
		return m.ProcessName_1
	}
	return ""
}

type OspfShRedist struct {
	// Protocol Information
	RedistributionProtocol *OspfShRedistProto `protobuf:"bytes,50,opt,name=redistribution_protocol,json=redistributionProtocol" json:"redistribution_protocol,omitempty"`
	// If true, Metric configured
	MetricFlag bool `protobuf:"varint,51,opt,name=metric_flag,json=metricFlag" json:"metric_flag,omitempty"`
	// Route metric
	Metric uint32 `protobuf:"varint,52,opt,name=metric" json:"metric,omitempty"`
	// Whether to use CIDR
	Classless bool `protobuf:"varint,53,opt,name=classless" json:"classless,omitempty"`
	// To NSSA areas only
	NssaOnly bool `protobuf:"varint,54,opt,name=nssa_only,json=nssaOnly" json:"nssa_only,omitempty"`
}

func (m *OspfShRedist) Reset()                    { *m = OspfShRedist{} }
func (m *OspfShRedist) String() string            { return proto.CompactTextString(m) }
func (*OspfShRedist) ProtoMessage()               {}
func (*OspfShRedist) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OspfShRedist) GetRedistributionProtocol() *OspfShRedistProto {
	if m != nil {
		return m.RedistributionProtocol
	}
	return nil
}

func (m *OspfShRedist) GetMetricFlag() bool {
	if m != nil {
		return m.MetricFlag
	}
	return false
}

func (m *OspfShRedist) GetMetric() uint32 {
	if m != nil {
		return m.Metric
	}
	return 0
}

func (m *OspfShRedist) GetClassless() bool {
	if m != nil {
		return m.Classless
	}
	return false
}

func (m *OspfShRedist) GetNssaOnly() bool {
	if m != nil {
		return m.NssaOnly
	}
	return false
}

type StringType struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *StringType) Reset()                    { *m = StringType{} }
func (m *StringType) String() string            { return proto.CompactTextString(m) }
func (*StringType) ProtoMessage()               {}
func (*StringType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *StringType) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Redistributed protocol instance
type OspfShRedistProto struct {
	ProtocolType string `protobuf:"bytes,1,opt,name=protocol_type,json=protocolType" json:"protocol_type,omitempty"`
	// ISIS instance identifier
	IsisInstanceId *StringType `protobuf:"bytes,2,opt,name=isis_instance_id,json=isisInstanceId" json:"isis_instance_id,omitempty"`
	// OSPF process identifier
	OspfProcessId *StringType `protobuf:"bytes,3,opt,name=ospf_process_id,json=ospfProcessId" json:"ospf_process_id,omitempty"`
	// BGP Autonomous System Number
	BgpAsNumber *StringType `protobuf:"bytes,4,opt,name=bgp_as_number,json=bgpAsNumber" json:"bgp_as_number,omitempty"`
	// Autonomous System Number
	EigrpAsNumber *StringType `protobuf:"bytes,5,opt,name=eigrp_as_number,json=eigrpAsNumber" json:"eigrp_as_number,omitempty"`
	// Connected instance name
	ConnectedInstance *StringType `protobuf:"bytes,6,opt,name=connected_instance,json=connectedInstance" json:"connected_instance,omitempty"`
}

func (m *OspfShRedistProto) Reset()                    { *m = OspfShRedistProto{} }
func (m *OspfShRedistProto) String() string            { return proto.CompactTextString(m) }
func (*OspfShRedistProto) ProtoMessage()               {}
func (*OspfShRedistProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *OspfShRedistProto) GetProtocolType() string {
	if m != nil {
		return m.ProtocolType
	}
	return ""
}

func (m *OspfShRedistProto) GetIsisInstanceId() *StringType {
	if m != nil {
		return m.IsisInstanceId
	}
	return nil
}

func (m *OspfShRedistProto) GetOspfProcessId() *StringType {
	if m != nil {
		return m.OspfProcessId
	}
	return nil
}

func (m *OspfShRedistProto) GetBgpAsNumber() *StringType {
	if m != nil {
		return m.BgpAsNumber
	}
	return nil
}

func (m *OspfShRedistProto) GetEigrpAsNumber() *StringType {
	if m != nil {
		return m.EigrpAsNumber
	}
	return nil
}

func (m *OspfShRedistProto) GetConnectedInstance() *StringType {
	if m != nil {
		return m.ConnectedInstance
	}
	return nil
}

func init() {
	proto.RegisterType((*OspfShRedist_KEYS)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.default_vrf.process_information.redistributions.redistribution.ospf_sh_redist_KEYS")
	proto.RegisterType((*OspfShRedist)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.default_vrf.process_information.redistributions.redistribution.ospf_sh_redist")
	proto.RegisterType((*StringType)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.default_vrf.process_information.redistributions.redistribution.string_type")
	proto.RegisterType((*OspfShRedistProto)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.default_vrf.process_information.redistributions.redistribution.ospf_sh_redist_proto")
}

func init() { proto.RegisterFile("ospf_sh_redist.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 481 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x93, 0xcf, 0x8e, 0xd3, 0x3e,
	0x10, 0xc7, 0xe5, 0xfd, 0xfd, 0xb6, 0x6c, 0x27, 0xdb, 0x02, 0x66, 0xb5, 0x44, 0x02, 0x89, 0xd2,
	0xe5, 0xd0, 0x53, 0xa4, 0xed, 0x2e, 0xdc, 0x39, 0x80, 0x54, 0x21, 0x2d, 0xab, 0xc0, 0x85, 0x93,
	0xe5, 0x24, 0x6e, 0xb0, 0xe4, 0xd8, 0xc1, 0x93, 0x56, 0xf4, 0xc2, 0x85, 0x03, 0x27, 0x5e, 0x82,
	0x03, 0xe2, 0xc2, 0x43, 0x70, 0xe3, 0xb1, 0x90, 0x9d, 0x3f, 0x34, 0x7d, 0x00, 0xb6, 0xb7, 0xcc,
	0xf8, 0xeb, 0xef, 0x7c, 0x3c, 0x33, 0x81, 0x13, 0x83, 0xe5, 0x92, 0xe1, 0x7b, 0x66, 0x45, 0x26,
	0xb1, 0x8a, 0x4a, 0x6b, 0x2a, 0x43, 0x3f, 0xa4, 0x12, 0x53, 0xc3, 0xa4, 0x41, 0xf6, 0xd1, 0x32,
	0x59, 0xae, 0x2f, 0x99, 0xd7, 0x99, 0x52, 0xd8, 0xc8, 0x7d, 0x39, 0x5d, 0x2a, 0x10, 0x05, 0xb6,
	0x5f, 0x51, 0x26, 0x96, 0x7c, 0xa5, 0x2a, 0xb6, 0xb6, 0xdd, 0x29, 0x93, 0x7a, 0x69, 0x6c, 0xc1,
	0x2b, 0x69, 0x74, 0x54, 0x17, 0xb0, 0x32, 0x59, 0xb9, 0x10, 0x77, 0xe2, 0xe9, 0x67, 0x02, 0xf7,
	0xfa, 0x2c, 0xec, 0xd5, 0x8b, 0x77, 0x6f, 0xe8, 0x63, 0x38, 0x6e, 0xdd, 0x34, 0x2f, 0x44, 0x48,
	0x26, 0x64, 0x36, 0x8c, 0x83, 0x26, 0x77, 0xc5, 0x0b, 0x41, 0xcf, 0x60, 0xe4, 0xb1, 0x53, 0xa3,
	0x6a, 0xcd, 0x81, 0xd7, 0x1c, 0xb7, 0x49, 0x2f, 0x7a, 0x02, 0xe3, 0x6d, 0x1f, 0x76, 0x1e, 0xfe,
	0xd7, 0xa9, 0x5a, 0xa7, 0xf3, 0xe9, 0xef, 0x03, 0x18, 0xf7, 0x29, 0xe8, 0x2f, 0x02, 0xf7, 0xfb,
	0xac, 0xac, 0x35, 0x0e, 0xe7, 0x13, 0x32, 0x0b, 0xe6, 0x5f, 0x48, 0xf4, 0xcf, 0xfb, 0x15, 0xed,
	0xf4, 0xca, 0x23, 0xc5, 0xa7, 0x7d, 0xd1, 0x75, 0xc3, 0x49, 0x1f, 0x41, 0x50, 0x88, 0xca, 0xca,
	0x94, 0x2d, 0x15, 0xcf, 0xc3, 0x8b, 0x09, 0x99, 0x1d, 0xc5, 0x50, 0xa7, 0x5e, 0x2a, 0x9e, 0xd3,
	0x53, 0x18, 0xd4, 0x51, 0x78, 0x39, 0x21, 0xb3, 0x51, 0xdc, 0x44, 0xf4, 0x21, 0x0c, 0x53, 0xc5,
	0x11, 0x95, 0x40, 0x0c, 0x9f, 0xfa, 0x6b, 0x7f, 0x13, 0xf4, 0x01, 0x0c, 0x35, 0x22, 0x67, 0x46,
	0xab, 0x4d, 0xf8, 0xcc, 0x9f, 0x1e, 0xb9, 0xc4, 0x6b, 0xad, 0x36, 0xd3, 0x33, 0x08, 0x1c, 0x89,
	0xce, 0x59, 0xb5, 0x29, 0x05, 0x3d, 0x81, 0xc3, 0x35, 0x57, 0xab, 0x76, 0x80, 0x75, 0x30, 0xfd,
	0x7a, 0x6b, 0x77, 0x03, 0xeb, 0x97, 0xf4, 0x66, 0xea, 0xee, 0x37, 0xd7, 0xba, 0x99, 0xbe, 0x75,
	0x9e, 0x3f, 0x08, 0xdc, 0x91, 0x28, 0x5d, 0xdf, 0xb0, 0xe2, 0x3a, 0x15, 0x4c, 0x66, 0x7e, 0xf8,
	0xc1, 0xfc, 0xd3, 0x0d, 0x8c, 0x64, 0xeb, 0xb9, 0xf1, 0xd8, 0x71, 0x2d, 0x1a, 0xac, 0x45, 0x46,
	0xbf, 0x13, 0xb8, 0xed, 0xeb, 0x77, 0xbe, 0x99, 0x5f, 0xc0, 0x9b, 0x27, 0x1d, 0xb9, 0x12, 0xd7,
	0xb5, 0xc7, 0x22, 0xa3, 0xdf, 0x08, 0x8c, 0x92, 0xbc, 0x64, 0x1c, 0x99, 0x5e, 0x15, 0x89, 0xb0,
	0xe1, 0xff, 0x7b, 0x81, 0x19, 0x24, 0x79, 0xf9, 0x1c, 0xaf, 0x3c, 0x92, 0xef, 0xa6, 0x90, 0xb9,
	0xdd, 0xc6, 0x3c, 0xdc, 0x8f, 0x6e, 0x7a, 0xac, 0x0e, 0xf4, 0x27, 0x01, 0x9a, 0x1a, 0xad, 0x45,
	0x5a, 0x89, 0xac, 0x5b, 0xd3, 0x70, 0xb0, 0x17, 0xac, 0x77, 0x3b, 0xb2, 0x76, 0x51, 0x93, 0x81,
	0xff, 0xbf, 0x2e, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x15, 0x43, 0x1b, 0x87, 0x17, 0x06, 0x00,
	0x00,
}
