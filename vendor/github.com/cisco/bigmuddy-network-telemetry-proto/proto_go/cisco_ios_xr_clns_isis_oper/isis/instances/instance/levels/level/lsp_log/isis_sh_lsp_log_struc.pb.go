// Code generated by protoc-gen-go. DO NOT EDIT.
// source: isis_sh_lsp_log_struc.proto

/*
Package cisco_ios_xr_clns_isis_oper_isis_instances_instance_levels_level_lsp_log is a generated protocol buffer package.

It is generated from these files:
	isis_sh_lsp_log_struc.proto

It has these top-level messages:
	IsisShLspLogStruc_KEYS
	IsisShLspLogStruc
	IsisShTimestampType
	IsisShGenericLogEnt
	IsisShLspLogEnt
*/
package cisco_ios_xr_clns_isis_oper_isis_instances_instance_levels_level_lsp_log

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// LSP-log
type IsisShLspLogStruc_KEYS struct {
	InstanceName string `protobuf:"bytes,1,opt,name=instance_name,json=instanceName" json:"instance_name,omitempty"`
	Level        string `protobuf:"bytes,2,opt,name=level" json:"level,omitempty"`
}

func (m *IsisShLspLogStruc_KEYS) Reset()                    { *m = IsisShLspLogStruc_KEYS{} }
func (m *IsisShLspLogStruc_KEYS) String() string            { return proto.CompactTextString(m) }
func (*IsisShLspLogStruc_KEYS) ProtoMessage()               {}
func (*IsisShLspLogStruc_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *IsisShLspLogStruc_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *IsisShLspLogStruc_KEYS) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

type IsisShLspLogStruc struct {
	// Log entries
	LogEntry []*IsisShLspLogEnt `protobuf:"bytes,50,rep,name=log_entry,json=logEntry" json:"log_entry,omitempty"`
}

func (m *IsisShLspLogStruc) Reset()                    { *m = IsisShLspLogStruc{} }
func (m *IsisShLspLogStruc) String() string            { return proto.CompactTextString(m) }
func (*IsisShLspLogStruc) ProtoMessage()               {}
func (*IsisShLspLogStruc) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IsisShLspLogStruc) GetLogEntry() []*IsisShLspLogEnt {
	if m != nil {
		return m.LogEntry
	}
	return nil
}

// Timestamp for an event
type IsisShTimestampType struct {
	// Timestamp value (seconds)
	Seconds uint32 `protobuf:"varint,1,opt,name=seconds" json:"seconds,omitempty"`
	// Timestamp value (nanoseconds)
	NanoSeconds uint32 `protobuf:"varint,2,opt,name=nano_seconds,json=nanoSeconds" json:"nano_seconds,omitempty"`
}

func (m *IsisShTimestampType) Reset()                    { *m = IsisShTimestampType{} }
func (m *IsisShTimestampType) String() string            { return proto.CompactTextString(m) }
func (*IsisShTimestampType) ProtoMessage()               {}
func (*IsisShTimestampType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *IsisShTimestampType) GetSeconds() uint32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *IsisShTimestampType) GetNanoSeconds() uint32 {
	if m != nil {
		return m.NanoSeconds
	}
	return 0
}

// Generic portion of a log entry
type IsisShGenericLogEnt struct {
	// Time in UTC relative to Jan 1st, 1970
	Timestamp *IsisShTimestampType `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *IsisShGenericLogEnt) Reset()                    { *m = IsisShGenericLogEnt{} }
func (m *IsisShGenericLogEnt) String() string            { return proto.CompactTextString(m) }
func (*IsisShGenericLogEnt) ProtoMessage()               {}
func (*IsisShGenericLogEnt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *IsisShGenericLogEnt) GetTimestamp() *IsisShTimestampType {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

// LSP-log entry
type IsisShLspLogEnt struct {
	// Generic entry data
	GenericData *IsisShGenericLogEnt `protobuf:"bytes,1,opt,name=generic_data,json=genericData" json:"generic_data,omitempty"`
	// Triggers applying to this log entry.
	Triggers []string `protobuf:"bytes,2,rep,name=triggers" json:"triggers,omitempty"`
	// Number of triggers on this run. May not be equal to the number of trigger event types if one or more trigger events has occurred more than once.
	TriggerCount uint32 `protobuf:"varint,3,opt,name=trigger_count,json=triggerCount" json:"trigger_count,omitempty"`
	// Number of delayed triggers
	DelayedTriggerCount uint32 `protobuf:"varint,4,opt,name=delayed_trigger_count,json=delayedTriggerCount" json:"delayed_trigger_count,omitempty"`
	// Appropriate interface, if any
	LogInterface string `protobuf:"bytes,5,opt,name=log_interface,json=logInterface" json:"log_interface,omitempty"`
	// Pseudo-node number
	PseudoNodeNumber uint32 `protobuf:"varint,6,opt,name=pseudo_node_number,json=pseudoNodeNumber" json:"pseudo_node_number,omitempty"`
}

func (m *IsisShLspLogEnt) Reset()                    { *m = IsisShLspLogEnt{} }
func (m *IsisShLspLogEnt) String() string            { return proto.CompactTextString(m) }
func (*IsisShLspLogEnt) ProtoMessage()               {}
func (*IsisShLspLogEnt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *IsisShLspLogEnt) GetGenericData() *IsisShGenericLogEnt {
	if m != nil {
		return m.GenericData
	}
	return nil
}

func (m *IsisShLspLogEnt) GetTriggers() []string {
	if m != nil {
		return m.Triggers
	}
	return nil
}

func (m *IsisShLspLogEnt) GetTriggerCount() uint32 {
	if m != nil {
		return m.TriggerCount
	}
	return 0
}

func (m *IsisShLspLogEnt) GetDelayedTriggerCount() uint32 {
	if m != nil {
		return m.DelayedTriggerCount
	}
	return 0
}

func (m *IsisShLspLogEnt) GetLogInterface() string {
	if m != nil {
		return m.LogInterface
	}
	return ""
}

func (m *IsisShLspLogEnt) GetPseudoNodeNumber() uint32 {
	if m != nil {
		return m.PseudoNodeNumber
	}
	return 0
}

func init() {
	proto.RegisterType((*IsisShLspLogStruc_KEYS)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.lsp_log.isis_sh_lsp_log_struc_KEYS")
	proto.RegisterType((*IsisShLspLogStruc)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.lsp_log.isis_sh_lsp_log_struc")
	proto.RegisterType((*IsisShTimestampType)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.lsp_log.isis_sh_timestamp_type")
	proto.RegisterType((*IsisShGenericLogEnt)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.lsp_log.isis_sh_generic_log_ent")
	proto.RegisterType((*IsisShLspLogEnt)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.lsp_log.isis_sh_lsp_log_ent")
}

func init() { proto.RegisterFile("isis_sh_lsp_log_struc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xcd, 0x6e, 0xd4, 0x30,
	0x10, 0x56, 0x76, 0x69, 0xe9, 0xce, 0xee, 0x4a, 0xc8, 0xa5, 0x10, 0x95, 0x4b, 0x49, 0x2f, 0x7b,
	0x40, 0x39, 0x2c, 0x8f, 0x00, 0x95, 0x40, 0x48, 0x7b, 0x48, 0x41, 0x88, 0x03, 0x1a, 0x5c, 0x67,
	0x08, 0x96, 0x1c, 0x3b, 0xb2, 0x1d, 0xc4, 0x72, 0xe0, 0xc4, 0x1b, 0x70, 0xe2, 0xfd, 0x78, 0x10,
	0x64, 0x27, 0xee, 0x9f, 0xf6, 0xb8, 0xa7, 0xcc, 0x7c, 0xdf, 0xf8, 0xfb, 0x66, 0x46, 0x13, 0x78,
	0x26, 0x9d, 0x74, 0xe8, 0xbe, 0xa1, 0x72, 0x1d, 0x2a, 0xd3, 0xa0, 0xf3, 0xb6, 0x17, 0x65, 0x67,
	0x8d, 0x37, 0xec, 0x8d, 0x90, 0x4e, 0x18, 0x94, 0xc6, 0xe1, 0x0f, 0x8b, 0x42, 0x69, 0x87, 0xb1,
	0xdc, 0x74, 0x64, 0xcb, 0x10, 0x95, 0x52, 0x3b, 0xcf, 0xb5, 0xa0, 0x9b, 0xa8, 0x54, 0xf4, 0x9d,
	0x94, 0x1b, 0x3e, 0xe5, 0xa8, 0x5a, 0x7c, 0x84, 0xd3, 0x9d, 0x46, 0xf8, 0xee, 0xe2, 0xd3, 0x25,
	0x3b, 0x87, 0x65, 0x7a, 0x8e, 0x9a, 0xb7, 0x94, 0x67, 0x67, 0xd9, 0x6a, 0x56, 0x2d, 0x12, 0xb8,
	0xe1, 0x2d, 0xb1, 0xc7, 0x70, 0x10, 0x35, 0xf3, 0x49, 0x24, 0x87, 0xa4, 0xf8, 0x93, 0xc1, 0xc9,
	0x4e, 0x65, 0xf6, 0x13, 0x66, 0x21, 0x21, 0xed, 0xed, 0x36, 0x5f, 0x9f, 0x4d, 0x57, 0xf3, 0xf5,
	0xe7, 0x72, 0x5f, 0x03, 0x95, 0xf7, 0x3d, 0x49, 0xfb, 0xea, 0x48, 0x99, 0xe6, 0x22, 0xd8, 0x15,
	0x1f, 0xe0, 0x49, 0x2a, 0xf0, 0xb2, 0x25, 0xe7, 0x79, 0xdb, 0xa1, 0xdf, 0x76, 0xc4, 0x72, 0x78,
	0xe8, 0x48, 0x18, 0x5d, 0xbb, 0x38, 0xe4, 0xb2, 0x4a, 0x29, 0x7b, 0x0e, 0x0b, 0xcd, 0xb5, 0xc1,
	0x44, 0x4f, 0x22, 0x3d, 0x0f, 0xd8, 0xe5, 0x00, 0x15, 0x7f, 0x33, 0x78, 0x9a, 0x74, 0x1b, 0xd2,
	0x64, 0xa5, 0x48, 0xe6, 0xec, 0x17, 0xcc, 0xae, 0xad, 0xa2, 0xf4, 0x7c, 0xfd, 0x65, 0xff, 0xe3,
	0xde, 0x9d, 0xa6, 0xba, 0xb1, 0x2c, 0xfe, 0x4d, 0xe0, 0x78, 0xc7, 0x52, 0xd8, 0xef, 0x0c, 0x16,
	0xa9, 0xd7, 0x9a, 0x7b, 0x3e, 0xf6, 0xc6, 0xf7, 0xdf, 0xdb, 0xbd, 0x8d, 0x54, 0xf3, 0x11, 0x78,
	0xcd, 0x3d, 0x67, 0xa7, 0x70, 0xe4, 0xad, 0x6c, 0x1a, 0xb2, 0x61, 0xb3, 0xd3, 0xd5, 0xac, 0xba,
	0xce, 0xc3, 0xf9, 0x8d, 0x31, 0x0a, 0xd3, 0x6b, 0x9f, 0x4f, 0xe3, 0xea, 0x17, 0x23, 0xf8, 0x2a,
	0x60, 0x6c, 0x0d, 0x27, 0x35, 0x29, 0xbe, 0xa5, 0x1a, 0xef, 0x16, 0x3f, 0x88, 0xc5, 0xc7, 0x23,
	0xf9, 0xfe, 0xf6, 0x9b, 0x73, 0x58, 0x86, 0x66, 0xa4, 0xf6, 0x64, 0xbf, 0x72, 0x41, 0xf9, 0xc1,
	0x70, 0xd7, 0xca, 0x34, 0x6f, 0x13, 0xc6, 0x5e, 0x00, 0xeb, 0x1c, 0xf5, 0xb5, 0x41, 0x6d, 0x6a,
	0x42, 0xdd, 0xb7, 0x57, 0x64, 0xf3, 0xc3, 0xa8, 0xfa, 0x68, 0x60, 0x36, 0xa6, 0xa6, 0x4d, 0xc4,
	0xaf, 0x0e, 0xe3, 0x9f, 0xf9, 0xf2, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb1, 0x09, 0xf6, 0x72,
	0xb8, 0x03, 0x00, 0x00,
}
