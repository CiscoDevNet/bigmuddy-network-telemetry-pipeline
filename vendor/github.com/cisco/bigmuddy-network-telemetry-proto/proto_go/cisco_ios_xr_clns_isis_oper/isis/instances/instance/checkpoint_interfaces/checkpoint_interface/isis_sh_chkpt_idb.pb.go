// Code generated by protoc-gen-go. DO NOT EDIT.
// source: isis_sh_chkpt_idb.proto

/*
Package cisco_ios_xr_clns_isis_oper_isis_instances_instance_checkpoint_interfaces_checkpoint_interface is a generated protocol buffer package.

It is generated from these files:
	isis_sh_chkpt_idb.proto

It has these top-level messages:
	IsisShChkptIdb_KEYS
	IsisShChkptIdb
*/
package cisco_ios_xr_clns_isis_oper_isis_instances_instance_checkpoint_interfaces_checkpoint_interface

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Checkpointed interface
type IsisShChkptIdb_KEYS struct {
	InstanceName  string `protobuf:"bytes,1,opt,name=instance_name,json=instanceName" json:"instance_name,omitempty"`
	InterfaceName string `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName" json:"interface_name,omitempty"`
}

func (m *IsisShChkptIdb_KEYS) Reset()                    { *m = IsisShChkptIdb_KEYS{} }
func (m *IsisShChkptIdb_KEYS) String() string            { return proto.CompactTextString(m) }
func (*IsisShChkptIdb_KEYS) ProtoMessage()               {}
func (*IsisShChkptIdb_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *IsisShChkptIdb_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *IsisShChkptIdb_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type IsisShChkptIdb struct {
	// Checkpoint object ID
	CheckpointObjectId uint32 `protobuf:"varint,50,opt,name=checkpoint_object_id,json=checkpointObjectId" json:"checkpoint_object_id,omitempty"`
	// Interface name
	InterfaceName string `protobuf:"bytes,51,opt,name=interface_name,json=interfaceName" json:"interface_name,omitempty"`
	// Local interface handle
	CheckpointInterfaceHandle string `protobuf:"bytes,52,opt,name=checkpoint_interface_handle,json=checkpointInterfaceHandle" json:"checkpoint_interface_handle,omitempty"`
	// Local circuit number
	LocalCircuitNumber uint32 `protobuf:"varint,53,opt,name=local_circuit_number,json=localCircuitNumber" json:"local_circuit_number,omitempty"`
	// Areas in which this system is DIS
	DisAreas string `protobuf:"bytes,54,opt,name=dis_areas,json=disAreas" json:"dis_areas,omitempty"`
	// TRUE if there is an adjacency on this interface
	HasAdjacency bool `protobuf:"varint,55,opt,name=has_adjacency,json=hasAdjacency" json:"has_adjacency,omitempty"`
	// SNPA of this interface
	LocalSnpa string `protobuf:"bytes,56,opt,name=local_snpa,json=localSnpa" json:"local_snpa,omitempty"`
	// TRUE if multicast group registration succeeded on this interface
	HasJoinedMcastGroup bool `protobuf:"varint,57,opt,name=has_joined_mcast_group,json=hasJoinedMcastGroup" json:"has_joined_mcast_group,omitempty"`
	// MPLS LDP sync status
	HasAchievedLdpSync bool `protobuf:"varint,58,opt,name=has_achieved_ldp_sync,json=hasAchievedLdpSync" json:"has_achieved_ldp_sync,omitempty"`
	// MPLS LDPv6 sync status
	HasAchievedLdPv6Sync bool `protobuf:"varint,59,opt,name=has_achieved_ld_pv6_sync,json=hasAchievedLdPv6Sync" json:"has_achieved_ld_pv6_sync,omitempty"`
}

func (m *IsisShChkptIdb) Reset()                    { *m = IsisShChkptIdb{} }
func (m *IsisShChkptIdb) String() string            { return proto.CompactTextString(m) }
func (*IsisShChkptIdb) ProtoMessage()               {}
func (*IsisShChkptIdb) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IsisShChkptIdb) GetCheckpointObjectId() uint32 {
	if m != nil {
		return m.CheckpointObjectId
	}
	return 0
}

func (m *IsisShChkptIdb) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *IsisShChkptIdb) GetCheckpointInterfaceHandle() string {
	if m != nil {
		return m.CheckpointInterfaceHandle
	}
	return ""
}

func (m *IsisShChkptIdb) GetLocalCircuitNumber() uint32 {
	if m != nil {
		return m.LocalCircuitNumber
	}
	return 0
}

func (m *IsisShChkptIdb) GetDisAreas() string {
	if m != nil {
		return m.DisAreas
	}
	return ""
}

func (m *IsisShChkptIdb) GetHasAdjacency() bool {
	if m != nil {
		return m.HasAdjacency
	}
	return false
}

func (m *IsisShChkptIdb) GetLocalSnpa() string {
	if m != nil {
		return m.LocalSnpa
	}
	return ""
}

func (m *IsisShChkptIdb) GetHasJoinedMcastGroup() bool {
	if m != nil {
		return m.HasJoinedMcastGroup
	}
	return false
}

func (m *IsisShChkptIdb) GetHasAchievedLdpSync() bool {
	if m != nil {
		return m.HasAchievedLdpSync
	}
	return false
}

func (m *IsisShChkptIdb) GetHasAchievedLdPv6Sync() bool {
	if m != nil {
		return m.HasAchievedLdPv6Sync
	}
	return false
}

func init() {
	proto.RegisterType((*IsisShChkptIdb_KEYS)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.checkpoint_interfaces.checkpoint_interface.isis_sh_chkpt_idb_KEYS")
	proto.RegisterType((*IsisShChkptIdb)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.checkpoint_interfaces.checkpoint_interface.isis_sh_chkpt_idb")
}

func init() { proto.RegisterFile("isis_sh_chkpt_idb.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 405 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x6d, 0x6b, 0x13, 0x41,
	0x10, 0xc7, 0x89, 0x82, 0x34, 0x4b, 0x23, 0xb8, 0xd6, 0xba, 0x52, 0x84, 0x50, 0x11, 0xf2, 0x2a,
	0xa8, 0xd1, 0xf8, 0x04, 0x42, 0x11, 0xd1, 0xfa, 0x50, 0x25, 0x79, 0xe5, 0x1b, 0x87, 0xc9, 0xec,
	0xea, 0x6d, 0x7a, 0xd9, 0x5d, 0x76, 0x2e, 0xc1, 0x7c, 0x5a, 0xbf, 0x8a, 0xec, 0x9c, 0x69, 0xd4,
	0xe6, 0xdd, 0xdc, 0xfc, 0xfe, 0x0f, 0x73, 0xc7, 0xa9, 0xdb, 0x9e, 0x3d, 0x03, 0x57, 0x40, 0xd5,
	0x79, 0x6a, 0xc0, 0xdb, 0xd9, 0x30, 0xe5, 0xd8, 0x44, 0xfd, 0x8d, 0x3c, 0x53, 0x04, 0x1f, 0x19,
	0x7e, 0x66, 0xa0, 0x3a, 0x30, 0x88, 0x34, 0x26, 0x97, 0x87, 0x65, 0x1a, 0xfa, 0xc0, 0x0d, 0x06,
	0x72, 0xdb, 0x69, 0x48, 0x95, 0xa3, 0xf3, 0x14, 0x7d, 0x68, 0xc0, 0x87, 0xc6, 0xe5, 0xef, 0x58,
	0xf0, 0xae, 0xed, 0xb1, 0x55, 0x87, 0x97, 0xaa, 0xe1, 0xc3, 0x9b, 0xaf, 0x53, 0x7d, 0x4f, 0xf5,
	0x36, 0x81, 0x10, 0x70, 0xe1, 0x4c, 0xa7, 0xdf, 0x19, 0x74, 0x27, 0xfb, 0x9b, 0xe5, 0x19, 0x2e,
	0x9c, 0xbe, 0xaf, 0xae, 0x5f, 0x64, 0xb5, 0xaa, 0x2b, 0xa2, 0xea, 0x5d, 0x6c, 0x8b, 0xec, 0xf8,
	0xd7, 0x55, 0x75, 0xe3, 0x52, 0x8d, 0x7e, 0xa0, 0x0e, 0xfe, 0xba, 0x29, 0xce, 0xe6, 0x8e, 0x0a,
	0x30, 0x8f, 0xfa, 0x9d, 0x41, 0x6f, 0xa2, 0xb7, 0xec, 0xb3, 0xa0, 0x53, 0xbb, 0xa3, 0x6e, 0xb4,
	0xa3, 0x4e, 0xbf, 0x52, 0x47, 0xbb, 0x5e, 0x16, 0x2a, 0x0c, 0xb6, 0x76, 0xe6, 0xb1, 0x78, 0xee,
	0x6c, 0x25, 0xa7, 0x1b, 0xc5, 0x3b, 0x11, 0x94, 0xc3, 0xea, 0x48, 0x58, 0x03, 0xf9, 0x4c, 0x4b,
	0xdf, 0x40, 0x58, 0x2e, 0x66, 0x2e, 0x9b, 0x27, 0xed, 0x61, 0xc2, 0x5e, 0xb7, 0xe8, 0x4c, 0x88,
	0x3e, 0x52, 0x5d, 0xeb, 0x19, 0x30, 0x3b, 0x64, 0x33, 0x96, 0xfc, 0x3d, 0xeb, 0xf9, 0xa4, 0x3c,
	0x97, 0x2f, 0x59, 0x21, 0x03, 0xda, 0x39, 0x92, 0x0b, 0xb4, 0x36, 0x4f, 0xfb, 0x9d, 0xc1, 0xde,
	0x64, 0xbf, 0x42, 0x3e, 0xd9, 0xec, 0xf4, 0x5d, 0xa5, 0xda, 0x4e, 0x0e, 0x09, 0xcd, 0x33, 0x89,
	0xe8, 0xca, 0x66, 0x1a, 0x12, 0xea, 0x91, 0x3a, 0x2c, 0x19, 0xf3, 0xe8, 0x83, 0xb3, 0xb0, 0x20,
	0xe4, 0x06, 0x7e, 0xe4, 0xb8, 0x4c, 0xe6, 0xb9, 0x84, 0xdd, 0xac, 0x90, 0xdf, 0x0b, 0xfc, 0x54,
	0xd8, 0xdb, 0x82, 0xf4, 0x43, 0x75, 0x4b, 0x8a, 0xa9, 0xf2, 0x6e, 0xe5, 0x2c, 0xd4, 0x36, 0x01,
	0xaf, 0x03, 0x99, 0x17, 0xe2, 0xd1, 0xe5, 0x80, 0x3f, 0xec, 0xa3, 0x4d, 0xd3, 0x75, 0x20, 0x3d,
	0x56, 0xe6, 0x3f, 0x0b, 0xa4, 0xd5, 0xb8, 0x75, 0xbd, 0x14, 0xd7, 0xc1, 0x3f, 0xae, 0x2f, 0xab,
	0x71, 0xf1, 0xcd, 0xae, 0xc9, 0xef, 0x3a, 0xfa, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x97, 0x4b, 0x17,
	0x05, 0xc9, 0x02, 0x00, 0x00,
}
