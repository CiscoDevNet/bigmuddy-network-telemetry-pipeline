// Code generated by protoc-gen-go. DO NOT EDIT.
// source: isis_sh_frr_summary.proto

/*
Package cisco_ios_xr_clns_isis_oper_isis_instances_instance_topologies_topology_frr_summary is a generated protocol buffer package.

It is generated from these files:
	isis_sh_frr_summary.proto

It has these top-level messages:
	IsisShFrrSummary_KEYS
	IsisShFrrSummary
	IsisPerPriorityCounts
	IsisShFrrLevelSummary
*/
package cisco_ios_xr_clns_isis_oper_isis_instances_instance_topologies_topology_frr_summary

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// FRR summary for an ISIS topology
type IsisShFrrSummary_KEYS struct {
	InstanceName string `protobuf:"bytes,1,opt,name=instance_name,json=instanceName" json:"instance_name,omitempty"`
	AfName       string `protobuf:"bytes,2,opt,name=af_name,json=afName" json:"af_name,omitempty"`
	SafName      string `protobuf:"bytes,3,opt,name=saf_name,json=safName" json:"saf_name,omitempty"`
	TopologyName string `protobuf:"bytes,4,opt,name=topology_name,json=topologyName" json:"topology_name,omitempty"`
}

func (m *IsisShFrrSummary_KEYS) Reset()                    { *m = IsisShFrrSummary_KEYS{} }
func (m *IsisShFrrSummary_KEYS) String() string            { return proto.CompactTextString(m) }
func (*IsisShFrrSummary_KEYS) ProtoMessage()               {}
func (*IsisShFrrSummary_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *IsisShFrrSummary_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *IsisShFrrSummary_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *IsisShFrrSummary_KEYS) GetSafName() string {
	if m != nil {
		return m.SafName
	}
	return ""
}

func (m *IsisShFrrSummary_KEYS) GetTopologyName() string {
	if m != nil {
		return m.TopologyName
	}
	return ""
}

type IsisShFrrSummary struct {
	// FRR summary for prefixes reachable in L1
	Level1Prefixes *IsisShFrrLevelSummary `protobuf:"bytes,50,opt,name=level1_prefixes,json=level1Prefixes" json:"level1_prefixes,omitempty"`
	// FRR summary for prefixes reachable in L2
	Level2Prefixes *IsisShFrrLevelSummary `protobuf:"bytes,51,opt,name=level2_prefixes,json=level2Prefixes" json:"level2_prefixes,omitempty"`
	// Unreachable prefixes
	UnreachablePrefixes *IsisPerPriorityCounts `protobuf:"bytes,52,opt,name=unreachable_prefixes,json=unreachablePrefixes" json:"unreachable_prefixes,omitempty"`
}

func (m *IsisShFrrSummary) Reset()                    { *m = IsisShFrrSummary{} }
func (m *IsisShFrrSummary) String() string            { return proto.CompactTextString(m) }
func (*IsisShFrrSummary) ProtoMessage()               {}
func (*IsisShFrrSummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IsisShFrrSummary) GetLevel1Prefixes() *IsisShFrrLevelSummary {
	if m != nil {
		return m.Level1Prefixes
	}
	return nil
}

func (m *IsisShFrrSummary) GetLevel2Prefixes() *IsisShFrrLevelSummary {
	if m != nil {
		return m.Level2Prefixes
	}
	return nil
}

func (m *IsisShFrrSummary) GetUnreachablePrefixes() *IsisPerPriorityCounts {
	if m != nil {
		return m.UnreachablePrefixes
	}
	return nil
}

// Per-priority counts
type IsisPerPriorityCounts struct {
	// Critical priority
	Critical uint32 `protobuf:"varint,1,opt,name=critical" json:"critical,omitempty"`
	// High priority
	High uint32 `protobuf:"varint,2,opt,name=high" json:"high,omitempty"`
	// Medium priority
	Medium uint32 `protobuf:"varint,3,opt,name=medium" json:"medium,omitempty"`
	// Low priority
	Low uint32 `protobuf:"varint,4,opt,name=low" json:"low,omitempty"`
}

func (m *IsisPerPriorityCounts) Reset()                    { *m = IsisPerPriorityCounts{} }
func (m *IsisPerPriorityCounts) String() string            { return proto.CompactTextString(m) }
func (*IsisPerPriorityCounts) ProtoMessage()               {}
func (*IsisPerPriorityCounts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *IsisPerPriorityCounts) GetCritical() uint32 {
	if m != nil {
		return m.Critical
	}
	return 0
}

func (m *IsisPerPriorityCounts) GetHigh() uint32 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *IsisPerPriorityCounts) GetMedium() uint32 {
	if m != nil {
		return m.Medium
	}
	return 0
}

func (m *IsisPerPriorityCounts) GetLow() uint32 {
	if m != nil {
		return m.Low
	}
	return 0
}

// FRR backup statistics for one level
type IsisShFrrLevelSummary struct {
	// Number of prefixes with all paths having FRR backup
	AllPathsProtected *IsisPerPriorityCounts `protobuf:"bytes,1,opt,name=all_paths_protected,json=allPathsProtected" json:"all_paths_protected,omitempty"`
	// Number of prefixes with some paths having FRR backup
	SomePathsProtected *IsisPerPriorityCounts `protobuf:"bytes,2,opt,name=some_paths_protected,json=somePathsProtected" json:"some_paths_protected,omitempty"`
	// Number of reachable prefixes without FRR backup
	Unprotected *IsisPerPriorityCounts `protobuf:"bytes,3,opt,name=unprotected" json:"unprotected,omitempty"`
}

func (m *IsisShFrrLevelSummary) Reset()                    { *m = IsisShFrrLevelSummary{} }
func (m *IsisShFrrLevelSummary) String() string            { return proto.CompactTextString(m) }
func (*IsisShFrrLevelSummary) ProtoMessage()               {}
func (*IsisShFrrLevelSummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *IsisShFrrLevelSummary) GetAllPathsProtected() *IsisPerPriorityCounts {
	if m != nil {
		return m.AllPathsProtected
	}
	return nil
}

func (m *IsisShFrrLevelSummary) GetSomePathsProtected() *IsisPerPriorityCounts {
	if m != nil {
		return m.SomePathsProtected
	}
	return nil
}

func (m *IsisShFrrLevelSummary) GetUnprotected() *IsisPerPriorityCounts {
	if m != nil {
		return m.Unprotected
	}
	return nil
}

func init() {
	proto.RegisterType((*IsisShFrrSummary_KEYS)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.frr_summary.isis_sh_frr_summary_KEYS")
	proto.RegisterType((*IsisShFrrSummary)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.frr_summary.isis_sh_frr_summary")
	proto.RegisterType((*IsisPerPriorityCounts)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.frr_summary.isis_per_priority_counts")
	proto.RegisterType((*IsisShFrrLevelSummary)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.frr_summary.isis_sh_frr_level_summary")
}

func init() { proto.RegisterFile("isis_sh_frr_summary.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 424 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0xd4, 0x4d, 0x6e, 0xd4, 0x30,
	0x14, 0x07, 0x70, 0xb9, 0xa9, 0xa6, 0xe5, 0x95, 0xf0, 0xe1, 0xa9, 0x60, 0xca, 0xaa, 0x9a, 0x6e,
	0xba, 0x8a, 0xc4, 0x94, 0x2b, 0xb0, 0x42, 0x42, 0xa3, 0x74, 0xc5, 0xca, 0x72, 0xdd, 0x97, 0xc6,
	0x92, 0x3f, 0x22, 0xdb, 0x81, 0xce, 0x29, 0x58, 0xc2, 0x06, 0xc1, 0x01, 0x91, 0xb8, 0x02, 0x8a,
	0x13, 0x37, 0x29, 0xcc, 0xb6, 0x9d, 0xdd, 0xb3, 0xff, 0x8e, 0xfd, 0x93, 0xf5, 0x1c, 0x38, 0x91,
	0x5e, 0x7a, 0xe6, 0x6b, 0x56, 0x39, 0xc7, 0x7c, 0xab, 0x35, 0x77, 0x9b, 0xa2, 0x71, 0x36, 0x58,
	0x7a, 0x29, 0xa4, 0x17, 0x96, 0x49, 0xeb, 0xd9, 0xad, 0x63, 0x42, 0x19, 0xcf, 0xe2, 0x62, 0xdb,
	0xa0, 0x2b, 0xba, 0xaa, 0x90, 0xc6, 0x07, 0x6e, 0x04, 0x8e, 0x55, 0x11, 0x6c, 0x63, 0x95, 0xbd,
	0x91, 0xe8, 0x53, 0xb9, 0x29, 0x26, 0x5b, 0x2f, 0xbf, 0x13, 0x58, 0x6c, 0x39, 0x92, 0x7d, 0x78,
	0xff, 0xe9, 0x92, 0x9e, 0x41, 0x9e, 0x36, 0x62, 0x86, 0x6b, 0x5c, 0x90, 0x53, 0x72, 0xfe, 0xa4,
	0x7c, 0x9a, 0x26, 0x3f, 0x72, 0x8d, 0xf4, 0x35, 0x1c, 0xf0, 0xaa, 0x8f, 0xf7, 0x62, 0x3c, 0xe3,
	0x55, 0x0c, 0x4e, 0xe0, 0xd0, 0xa7, 0x24, 0x8b, 0xc9, 0x81, 0x1f, 0xa2, 0x33, 0xc8, 0x93, 0xa6,
	0xcf, 0xf7, 0xfb, 0x8d, 0xd3, 0x64, 0xb7, 0x68, 0xf9, 0x3b, 0x83, 0xf9, 0x16, 0x1a, 0xfd, 0x46,
	0xe0, 0xb9, 0xc2, 0xcf, 0xa8, 0xde, 0xb2, 0xc6, 0x61, 0x25, 0x6f, 0xd1, 0x2f, 0x56, 0xa7, 0xe4,
	0xfc, 0x68, 0x65, 0x8a, 0x07, 0xb8, 0xa2, 0x62, 0x6a, 0x88, 0xe7, 0xa6, 0xa4, 0x7c, 0xd6, 0x33,
	0xd6, 0x83, 0x62, 0x94, 0xad, 0x46, 0xd9, 0xc5, 0x0e, 0x65, 0xab, 0x3b, 0xd9, 0x2f, 0x02, 0xc7,
	0xad, 0x71, 0xc8, 0x45, 0xcd, 0xaf, 0x14, 0x8e, 0xbc, 0x77, 0x91, 0xa7, 0x1f, 0x8e, 0xd7, 0xa0,
	0x63, 0x8d, 0x93, 0xd6, 0xc9, 0xb0, 0x61, 0xc2, 0xb6, 0x26, 0xf8, 0x72, 0x3e, 0xa1, 0x24, 0xe2,
	0x32, 0x0c, 0x8d, 0xb8, 0xe5, 0x03, 0xfa, 0x06, 0x0e, 0x85, 0x93, 0x41, 0x0a, 0xae, 0x62, 0x0f,
	0xe6, 0xe5, 0xdd, 0x98, 0x52, 0xd8, 0xaf, 0xe5, 0x4d, 0x1d, 0x9b, 0x2f, 0x2f, 0x63, 0x4d, 0x5f,
	0xc1, 0x4c, 0xe3, 0xb5, 0x6c, 0x75, 0x6c, 0xbc, 0xbc, 0x1c, 0x46, 0xf4, 0x05, 0x64, 0xca, 0x7e,
	0x89, 0xdd, 0x96, 0x97, 0x5d, 0xb9, 0xfc, 0x93, 0xdd, 0x7f, 0x72, 0xf7, 0xae, 0x91, 0xfe, 0x20,
	0x30, 0xe7, 0x4a, 0xb1, 0x86, 0x87, 0xda, 0xb3, 0xee, 0x19, 0xa2, 0x08, 0x78, 0x1d, 0x0d, 0x8f,
	0x7e, 0x6b, 0x2f, 0xb9, 0x52, 0xeb, 0x0e, 0xb2, 0x4e, 0x0e, 0xfa, 0x93, 0xc0, 0xb1, 0xb7, 0x1a,
	0xff, 0x03, 0xee, 0xed, 0x02, 0x48, 0x3b, 0xca, 0x3f, 0xc2, 0xaf, 0x04, 0x8e, 0x5a, 0x33, 0xc2,
	0xb2, 0x5d, 0xc0, 0xa6, 0x82, 0xab, 0x59, 0xfc, 0x9b, 0x5e, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0xbc, 0x85, 0xab, 0x87, 0x6a, 0x05, 0x00, 0x00,
}
