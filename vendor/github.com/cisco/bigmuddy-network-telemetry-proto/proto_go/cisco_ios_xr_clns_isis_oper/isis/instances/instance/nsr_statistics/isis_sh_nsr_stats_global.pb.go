// Code generated by protoc-gen-go. DO NOT EDIT.
// source: isis_sh_nsr_stats_global.proto

/*
Package cisco_ios_xr_clns_isis_oper_isis_instances_instance_nsr_statistics is a generated protocol buffer package.

It is generated from these files:
	isis_sh_nsr_stats_global.proto

It has these top-level messages:
	IsisShNsrStatsGlobal_KEYS
	IsisShNsrStatsGlobal
	NsrStatsGblType
	NsrStatsGblArrType
*/
package cisco_ios_xr_clns_isis_oper_isis_instances_instance_nsr_statistics

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// IS-IS process NSR statistics
type IsisShNsrStatsGlobal_KEYS struct {
	InstanceName string `protobuf:"bytes,1,opt,name=instance_name,json=instanceName" json:"instance_name,omitempty"`
}

func (m *IsisShNsrStatsGlobal_KEYS) Reset()                    { *m = IsisShNsrStatsGlobal_KEYS{} }
func (m *IsisShNsrStatsGlobal_KEYS) String() string            { return proto.CompactTextString(m) }
func (*IsisShNsrStatsGlobal_KEYS) ProtoMessage()               {}
func (*IsisShNsrStatsGlobal_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *IsisShNsrStatsGlobal_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

type IsisShNsrStatsGlobal struct {
	// ISIS VM STATE
	IsisVmState uint32 `protobuf:"varint,50,opt,name=isis_vm_state,json=isisVmState" json:"isis_vm_state,omitempty"`
	// ISIS NSR STATS Data
	IsisNsrStatsData *NsrStatsGblArrType `protobuf:"bytes,51,opt,name=isis_nsr_stats_data,json=isisNsrStatsData" json:"isis_nsr_stats_data,omitempty"`
}

func (m *IsisShNsrStatsGlobal) Reset()                    { *m = IsisShNsrStatsGlobal{} }
func (m *IsisShNsrStatsGlobal) String() string            { return proto.CompactTextString(m) }
func (*IsisShNsrStatsGlobal) ProtoMessage()               {}
func (*IsisShNsrStatsGlobal) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IsisShNsrStatsGlobal) GetIsisVmState() uint32 {
	if m != nil {
		return m.IsisVmState
	}
	return 0
}

func (m *IsisShNsrStatsGlobal) GetIsisNsrStatsData() *NsrStatsGblArrType {
	if m != nil {
		return m.IsisNsrStatsData
	}
	return nil
}

type NsrStatsGblType struct {
	NoOfL1Lsp             uint32 `protobuf:"varint,1,opt,name=no_of_l1_lsp,json=noOfL1Lsp" json:"no_of_l1_lsp,omitempty"`
	NoOfL2Lsp             uint32 `protobuf:"varint,2,opt,name=no_of_l2_lsp,json=noOfL2Lsp" json:"no_of_l2_lsp,omitempty"`
	NoOfL1Adj             uint32 `protobuf:"varint,3,opt,name=no_of_l1_adj,json=noOfL1Adj" json:"no_of_l1_adj,omitempty"`
	NoOfL2Adj             uint32 `protobuf:"varint,4,opt,name=no_of_l2_adj,json=noOfL2Adj" json:"no_of_l2_adj,omitempty"`
	NoOfLiveInterface     uint32 `protobuf:"varint,5,opt,name=no_of_live_interface,json=noOfLiveInterface" json:"no_of_live_interface,omitempty"`
	NoOfPtpInterface      uint32 `protobuf:"varint,6,opt,name=no_of_ptp_interface,json=noOfPtpInterface" json:"no_of_ptp_interface,omitempty"`
	NoOfLanInterface      uint32 `protobuf:"varint,7,opt,name=no_of_lan_interface,json=noOfLanInterface" json:"no_of_lan_interface,omitempty"`
	NoOfLoopbackInterface uint32 `protobuf:"varint,8,opt,name=no_of_loopback_interface,json=noOfLoopbackInterface" json:"no_of_loopback_interface,omitempty"`
	NoOfTeTunnels         uint32 `protobuf:"varint,9,opt,name=no_of_te_tunnels,json=noOfTeTunnels" json:"no_of_te_tunnels,omitempty"`
	NoOfTeLinks           uint32 `protobuf:"varint,10,opt,name=no_of_te_links,json=noOfTeLinks" json:"no_of_te_links,omitempty"`
	NoOfIpv4Routes        uint32 `protobuf:"varint,11,opt,name=no_of_ipv4_routes,json=noOfIpv4Routes" json:"no_of_ipv4_routes,omitempty"`
	NoOfIpv6Routes        uint32 `protobuf:"varint,12,opt,name=no_of_ipv6_routes,json=noOfIpv6Routes" json:"no_of_ipv6_routes,omitempty"`
	Seqnum                uint32 `protobuf:"varint,13,opt,name=seqnum" json:"seqnum,omitempty"`
}

func (m *NsrStatsGblType) Reset()                    { *m = NsrStatsGblType{} }
func (m *NsrStatsGblType) String() string            { return proto.CompactTextString(m) }
func (*NsrStatsGblType) ProtoMessage()               {}
func (*NsrStatsGblType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *NsrStatsGblType) GetNoOfL1Lsp() uint32 {
	if m != nil {
		return m.NoOfL1Lsp
	}
	return 0
}

func (m *NsrStatsGblType) GetNoOfL2Lsp() uint32 {
	if m != nil {
		return m.NoOfL2Lsp
	}
	return 0
}

func (m *NsrStatsGblType) GetNoOfL1Adj() uint32 {
	if m != nil {
		return m.NoOfL1Adj
	}
	return 0
}

func (m *NsrStatsGblType) GetNoOfL2Adj() uint32 {
	if m != nil {
		return m.NoOfL2Adj
	}
	return 0
}

func (m *NsrStatsGblType) GetNoOfLiveInterface() uint32 {
	if m != nil {
		return m.NoOfLiveInterface
	}
	return 0
}

func (m *NsrStatsGblType) GetNoOfPtpInterface() uint32 {
	if m != nil {
		return m.NoOfPtpInterface
	}
	return 0
}

func (m *NsrStatsGblType) GetNoOfLanInterface() uint32 {
	if m != nil {
		return m.NoOfLanInterface
	}
	return 0
}

func (m *NsrStatsGblType) GetNoOfLoopbackInterface() uint32 {
	if m != nil {
		return m.NoOfLoopbackInterface
	}
	return 0
}

func (m *NsrStatsGblType) GetNoOfTeTunnels() uint32 {
	if m != nil {
		return m.NoOfTeTunnels
	}
	return 0
}

func (m *NsrStatsGblType) GetNoOfTeLinks() uint32 {
	if m != nil {
		return m.NoOfTeLinks
	}
	return 0
}

func (m *NsrStatsGblType) GetNoOfIpv4Routes() uint32 {
	if m != nil {
		return m.NoOfIpv4Routes
	}
	return 0
}

func (m *NsrStatsGblType) GetNoOfIpv6Routes() uint32 {
	if m != nil {
		return m.NoOfIpv6Routes
	}
	return 0
}

func (m *NsrStatsGblType) GetSeqnum() uint32 {
	if m != nil {
		return m.Seqnum
	}
	return 0
}

type NsrStatsGblArrType struct {
	Self *NsrStatsGblType   `protobuf:"bytes,1,opt,name=self" json:"self,omitempty"`
	Peer []*NsrStatsGblType `protobuf:"bytes,2,rep,name=peer" json:"peer,omitempty"`
}

func (m *NsrStatsGblArrType) Reset()                    { *m = NsrStatsGblArrType{} }
func (m *NsrStatsGblArrType) String() string            { return proto.CompactTextString(m) }
func (*NsrStatsGblArrType) ProtoMessage()               {}
func (*NsrStatsGblArrType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *NsrStatsGblArrType) GetSelf() *NsrStatsGblType {
	if m != nil {
		return m.Self
	}
	return nil
}

func (m *NsrStatsGblArrType) GetPeer() []*NsrStatsGblType {
	if m != nil {
		return m.Peer
	}
	return nil
}

func init() {
	proto.RegisterType((*IsisShNsrStatsGlobal_KEYS)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.nsr_statistics.isis_sh_nsr_stats_global_KEYS")
	proto.RegisterType((*IsisShNsrStatsGlobal)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.nsr_statistics.isis_sh_nsr_stats_global")
	proto.RegisterType((*NsrStatsGblType)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.nsr_statistics.nsr_stats_gbl_type")
	proto.RegisterType((*NsrStatsGblArrType)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.nsr_statistics.nsr_stats_gbl_arr_type")
}

func init() { proto.RegisterFile("isis_sh_nsr_stats_global.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 497 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0xd4, 0xd1, 0x6e, 0xd3, 0x3c,
	0x14, 0x07, 0x70, 0x65, 0xeb, 0xd7, 0x8f, 0xba, 0xcd, 0xd4, 0x79, 0x30, 0xf9, 0x06, 0xa8, 0xba,
	0x0b, 0xca, 0x05, 0x41, 0xed, 0xa6, 0x71, 0x0d, 0x1a, 0x17, 0x13, 0xd5, 0x40, 0xdd, 0x34, 0x09,
	0x6e, 0x2c, 0x37, 0x75, 0xc1, 0x9d, 0x63, 0x1b, 0x1f, 0x37, 0x82, 0x47, 0xe0, 0x1d, 0x78, 0x22,
	0x9e, 0x86, 0x47, 0x40, 0x76, 0x12, 0x92, 0x48, 0xdb, 0x15, 0x70, 0x97, 0x9e, 0xf3, 0xfb, 0x9f,
	0x93, 0x56, 0x47, 0x45, 0x8f, 0x04, 0x08, 0xa0, 0xf0, 0x89, 0x2a, 0xb0, 0x14, 0x1c, 0x73, 0x40,
	0x3f, 0x4a, 0xbd, 0x64, 0x32, 0x31, 0x56, 0x3b, 0x8d, 0x5f, 0xa5, 0x02, 0x52, 0x4d, 0x85, 0x06,
	0xfa, 0xc5, 0xd2, 0x54, 0x2a, 0xa0, 0x21, 0xa1, 0x0d, 0xb7, 0x89, 0x7f, 0x4a, 0x84, 0x02, 0xc7,
	0x54, 0xca, 0xeb, 0xa7, 0xa4, 0x9a, 0x25, 0xc0, 0x89, 0x14, 0xc6, 0x67, 0xe8, 0xe1, 0x5d, 0x5b,
	0xe8, 0x9b, 0xd7, 0xef, 0x2f, 0xf1, 0x11, 0x8a, 0xab, 0x2c, 0x55, 0x2c, 0xe3, 0x24, 0x1a, 0x45,
	0x93, 0xde, 0x62, 0x50, 0x15, 0x2f, 0x58, 0xc6, 0xc7, 0x3f, 0x22, 0x44, 0xee, 0x1a, 0x83, 0xc7,
	0x28, 0x0e, 0xbd, 0x3c, 0x0b, 0x75, 0x4e, 0x66, 0xa3, 0x68, 0x12, 0x2f, 0xfa, 0xbe, 0x78, 0x9d,
	0x5d, 0xfa, 0x12, 0xfe, 0x16, 0xa1, 0x83, 0x80, 0xea, 0xf4, 0x8a, 0x39, 0x46, 0x8e, 0x47, 0xd1,
	0xa4, 0x3f, 0xfb, 0x90, 0xfc, 0xf9, 0x37, 0x4d, 0x1a, 0xef, 0xb5, 0x94, 0x94, 0x59, 0x4b, 0xdd,
	0x57, 0xc3, 0x17, 0x43, 0x1f, 0xbf, 0x00, 0xeb, 0xdf, 0x03, 0xce, 0x98, 0x63, 0xe3, 0xef, 0x1d,
	0x84, 0xdb, 0xd8, 0x43, 0xfc, 0x18, 0x0d, 0x94, 0xa6, 0x7a, 0x4d, 0xe5, 0x94, 0x4a, 0x30, 0xe1,
	0x77, 0x88, 0x17, 0x3d, 0xa5, 0xdf, 0xae, 0xe7, 0xd3, 0x39, 0x98, 0x06, 0x98, 0x05, 0xb0, 0xd3,
	0x00, 0xb3, 0x36, 0x98, 0x52, 0xb6, 0xda, 0x90, 0xdd, 0xe6, 0x84, 0x97, 0xab, 0x4d, 0x6b, 0x82,
	0x07, 0x9d, 0xe6, 0x04, 0x0f, 0x9e, 0xa3, 0xfb, 0x25, 0x10, 0x39, 0xa7, 0x42, 0x39, 0x6e, 0xd7,
	0x2c, 0xe5, 0xe4, 0xbf, 0x00, 0xf7, 0x03, 0x14, 0x39, 0x3f, 0xaf, 0x1a, 0xf8, 0x19, 0x3a, 0x28,
	0x02, 0xc6, 0x99, 0x86, 0xef, 0x06, 0x3f, 0xf4, 0xfe, 0x9d, 0x33, 0xb7, 0x70, 0xc9, 0x54, 0x83,
	0xff, 0x5f, 0xf3, 0x39, 0x53, 0x35, 0x7f, 0x81, 0x48, 0xc9, 0xb5, 0x36, 0x4b, 0x96, 0xde, 0x34,
	0x32, 0xf7, 0x42, 0xe6, 0x41, 0xc8, 0x94, 0xdd, 0x3a, 0xf8, 0x04, 0x0d, 0x8b, 0xa0, 0xe3, 0xd4,
	0x6d, 0x95, 0xe2, 0x12, 0x48, 0x2f, 0x04, 0x62, 0x1f, 0xb8, 0xe2, 0x57, 0x45, 0x11, 0x1f, 0xa1,
	0xbd, 0xdf, 0x50, 0x0a, 0x75, 0x03, 0x04, 0x15, 0xc7, 0x53, 0xb0, 0xb9, 0x2f, 0xe1, 0xa7, 0x68,
	0xbf, 0x40, 0xc2, 0xe4, 0x27, 0xd4, 0xea, 0xad, 0xe3, 0x40, 0xfa, 0xc1, 0xed, 0x79, 0x77, 0x6e,
	0xf2, 0x93, 0x45, 0xa8, 0xb6, 0xe8, 0x69, 0x45, 0x07, 0x2d, 0x7a, 0x5a, 0xd2, 0x43, 0xd4, 0x05,
	0xfe, 0x59, 0x6d, 0x33, 0x12, 0x87, 0x7e, 0xf9, 0x69, 0xfc, 0x33, 0x42, 0x87, 0xb7, 0xdf, 0x12,
	0xde, 0xa0, 0x0e, 0x70, 0xb9, 0x0e, 0xa7, 0xd1, 0x9f, 0x5d, 0xff, 0xfd, 0xab, 0x0d, 0x17, 0x1b,
	0x76, 0xf8, 0x5d, 0x86, 0x73, 0x4b, 0x76, 0x46, 0xbb, 0xff, 0x72, 0x97, 0xdf, 0xb1, 0xec, 0x86,
	0xff, 0x9b, 0xe3, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x64, 0xf9, 0x52, 0xc7, 0x91, 0x04, 0x00,
	0x00,
}
