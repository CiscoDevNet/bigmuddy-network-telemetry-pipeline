// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipv6_dhcpv6d_type.proto

/*
Package cisco_ios_xr_ipv6_new_dhcpv6d_oper_dhcpv6_nodes_node_relay_vrfs_vrf_statistics is a generated protocol buffer package.

It is generated from these files:
	ipv6_dhcpv6d_type.proto

It has these top-level messages:
	Ipv6Dhcpv6DType_KEYS
	Ipv6Dhcpv6DType
	Ipv6Dhcpv6DFilteredStats
*/
package cisco_ios_xr_ipv6_new_dhcpv6d_oper_dhcpv6_nodes_node_relay_vrfs_vrf_statistics

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// DHCPv6 packets
type Ipv6Dhcpv6DType_KEYS struct {
	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	VrfName  string `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName" json:"vrf_name,omitempty"`
}

func (m *Ipv6Dhcpv6DType_KEYS) Reset()                    { *m = Ipv6Dhcpv6DType_KEYS{} }
func (m *Ipv6Dhcpv6DType_KEYS) String() string            { return proto.CompactTextString(m) }
func (*Ipv6Dhcpv6DType_KEYS) ProtoMessage()               {}
func (*Ipv6Dhcpv6DType_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Ipv6Dhcpv6DType_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *Ipv6Dhcpv6DType_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type Ipv6Dhcpv6DType struct {
	// DHCPV6 solicit packets
	Solicit *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,50,opt,name=solicit" json:"solicit,omitempty"`
	// DHCPV6 advertise packets
	Advertise *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,51,opt,name=advertise" json:"advertise,omitempty"`
	// DHCPV6 request packets
	Request *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,52,opt,name=request" json:"request,omitempty"`
	// DHCPV6 reply packets
	Reply *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,53,opt,name=reply" json:"reply,omitempty"`
	// DHCPV6 confirm packets
	Confirm *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,54,opt,name=confirm" json:"confirm,omitempty"`
	// DHCPV6 decline packets
	Decline *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,55,opt,name=decline" json:"decline,omitempty"`
	// DHCPV6 renew packets
	Renew *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,56,opt,name=renew" json:"renew,omitempty"`
	// DHCPV6 rebind packets
	Rebind *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,57,opt,name=rebind" json:"rebind,omitempty"`
	// DHCPV6 release packets
	Release *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,58,opt,name=release" json:"release,omitempty"`
	// DHCPV6 reconfig packets
	Reconfig *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,59,opt,name=reconfig" json:"reconfig,omitempty"`
	// DHCPV6 inform packets
	Inform *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,60,opt,name=inform" json:"inform,omitempty"`
	// DHCPV6 relay forward packets
	RelayForward *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,61,opt,name=relay_forward,json=relayForward" json:"relay_forward,omitempty"`
	// DHCPV6 relay reply packets
	RelayReply *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,62,opt,name=relay_reply,json=relayReply" json:"relay_reply,omitempty"`
	// DHCPV6 lease query packets
	LeaseQuery *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,63,opt,name=lease_query,json=leaseQuery" json:"lease_query,omitempty"`
	// DHCPV6 lease query reply packets
	LeaseQueryReply *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,64,opt,name=lease_query_reply,json=leaseQueryReply" json:"lease_query_reply,omitempty"`
	// DHCPV6 lease query done packets
	LeaseQueryDone *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,65,opt,name=lease_query_done,json=leaseQueryDone" json:"lease_query_done,omitempty"`
	// DHCPV6 lease query data packets
	LeaseQueryData *Ipv6Dhcpv6DFilteredStats `protobuf:"bytes,66,opt,name=lease_query_data,json=leaseQueryData" json:"lease_query_data,omitempty"`
}

func (m *Ipv6Dhcpv6DType) Reset()                    { *m = Ipv6Dhcpv6DType{} }
func (m *Ipv6Dhcpv6DType) String() string            { return proto.CompactTextString(m) }
func (*Ipv6Dhcpv6DType) ProtoMessage()               {}
func (*Ipv6Dhcpv6DType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Ipv6Dhcpv6DType) GetSolicit() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.Solicit
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetAdvertise() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.Advertise
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetRequest() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetReply() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetConfirm() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.Confirm
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetDecline() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.Decline
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetRenew() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.Renew
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetRebind() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.Rebind
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetRelease() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.Release
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetReconfig() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.Reconfig
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetInform() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.Inform
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetRelayForward() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.RelayForward
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetRelayReply() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.RelayReply
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetLeaseQuery() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.LeaseQuery
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetLeaseQueryReply() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.LeaseQueryReply
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetLeaseQueryDone() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.LeaseQueryDone
	}
	return nil
}

func (m *Ipv6Dhcpv6DType) GetLeaseQueryData() *Ipv6Dhcpv6DFilteredStats {
	if m != nil {
		return m.LeaseQueryData
	}
	return nil
}

// DHCPv6 filtered statistics
type Ipv6Dhcpv6DFilteredStats struct {
	// Received packets
	ReceivedPackets uint64 `protobuf:"varint,1,opt,name=received_packets,json=receivedPackets" json:"received_packets,omitempty"`
	// Transmitted packets
	TransmittedPackets uint64 `protobuf:"varint,2,opt,name=transmitted_packets,json=transmittedPackets" json:"transmitted_packets,omitempty"`
	// Dropped packets
	DroppedPackets uint64 `protobuf:"varint,3,opt,name=dropped_packets,json=droppedPackets" json:"dropped_packets,omitempty"`
}

func (m *Ipv6Dhcpv6DFilteredStats) Reset()                    { *m = Ipv6Dhcpv6DFilteredStats{} }
func (m *Ipv6Dhcpv6DFilteredStats) String() string            { return proto.CompactTextString(m) }
func (*Ipv6Dhcpv6DFilteredStats) ProtoMessage()               {}
func (*Ipv6Dhcpv6DFilteredStats) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Ipv6Dhcpv6DFilteredStats) GetReceivedPackets() uint64 {
	if m != nil {
		return m.ReceivedPackets
	}
	return 0
}

func (m *Ipv6Dhcpv6DFilteredStats) GetTransmittedPackets() uint64 {
	if m != nil {
		return m.TransmittedPackets
	}
	return 0
}

func (m *Ipv6Dhcpv6DFilteredStats) GetDroppedPackets() uint64 {
	if m != nil {
		return m.DroppedPackets
	}
	return 0
}

func init() {
	proto.RegisterType((*Ipv6Dhcpv6DType_KEYS)(nil), "cisco_ios_xr_ipv6_new_dhcpv6d_oper.dhcpv6.nodes.node.relay.vrfs.vrf.statistics.ipv6_dhcpv6d_type_KEYS")
	proto.RegisterType((*Ipv6Dhcpv6DType)(nil), "cisco_ios_xr_ipv6_new_dhcpv6d_oper.dhcpv6.nodes.node.relay.vrfs.vrf.statistics.ipv6_dhcpv6d_type")
	proto.RegisterType((*Ipv6Dhcpv6DFilteredStats)(nil), "cisco_ios_xr_ipv6_new_dhcpv6d_oper.dhcpv6.nodes.node.relay.vrfs.vrf.statistics.ipv6_dhcpv6d_filtered_stats")
}

func init() { proto.RegisterFile("ipv6_dhcpv6d_type.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 537 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x96, 0xcf, 0x6b, 0x14, 0x31,
	0x14, 0xc7, 0x49, 0xd5, 0x76, 0x37, 0xd5, 0x6e, 0x1b, 0x41, 0x23, 0xbd, 0x94, 0xbd, 0x58, 0x2f,
	0x23, 0xb4, 0xba, 0xfe, 0xfe, 0x89, 0x7a, 0x11, 0x4a, 0x5d, 0x4f, 0x9e, 0x42, 0x3a, 0x79, 0xa3,
	0xa1, 0x33, 0xc9, 0xf4, 0x25, 0x9d, 0x75, 0x8f, 0x22, 0x22, 0x82, 0x07, 0x2f, 0xe2, 0xdd, 0xbf,
	0xcc, 0x3f, 0x45, 0x26, 0x33, 0xbb, 0x3b, 0xb2, 0xe0, 0xa9, 0xcc, 0x5c, 0x06, 0xf6, 0xbd, 0xef,
	0xcb, 0xf7, 0xb3, 0xef, 0x25, 0x21, 0xf4, 0xaa, 0xce, 0x8b, 0x91, 0x50, 0x1f, 0xe2, 0xbc, 0x18,
	0x29, 0xe1, 0xa7, 0x39, 0x44, 0x39, 0x5a, 0x6f, 0xd9, 0x41, 0xac, 0x5d, 0x6c, 0x85, 0xb6, 0x4e,
	0x7c, 0x44, 0x11, 0x54, 0x06, 0x26, 0x73, 0xa5, 0xcd, 0x01, 0xa3, 0xea, 0x47, 0x64, 0xac, 0x02,
	0x17, 0xbe, 0x11, 0x42, 0x2a, 0xa7, 0x51, 0x81, 0x89, 0x2b, 0x3f, 0x91, 0xf3, 0xd2, 0x6b, 0xe7,
	0x75, 0xec, 0x86, 0x87, 0xf4, 0xca, 0x92, 0x95, 0x78, 0xfd, 0xf2, 0xdd, 0x5b, 0xb6, 0x4d, 0xfb,
	0x65, 0xad, 0x30, 0x32, 0x03, 0x4e, 0x76, 0xc8, 0x6e, 0x7f, 0xdc, 0x2b, 0x03, 0x07, 0x32, 0x03,
	0x76, 0x8d, 0xf6, 0x0a, 0x4c, 0xaa, 0xdc, 0x4a, 0xc8, 0xad, 0x15, 0x98, 0x94, 0xa9, 0xe1, 0x1f,
	0x46, 0xb7, 0x96, 0x96, 0x64, 0x5f, 0x08, 0x5d, 0x73, 0x36, 0xd5, 0xb1, 0xf6, 0x7c, 0x6f, 0x87,
	0xec, 0xae, 0xef, 0x1d, 0x47, 0x67, 0xfb, 0x57, 0xa2, 0x7f, 0x4c, 0x13, 0x9d, 0x7a, 0x40, 0x50,
	0xa2, 0x14, 0xb8, 0xf1, 0xcc, 0x9b, 0x7d, 0x23, 0xb4, 0x2f, 0x55, 0x01, 0xe8, 0xb5, 0x03, 0xbe,
	0xdf, 0x3e, 0xc9, 0xc2, 0x3d, 0xf4, 0x04, 0xe1, 0xe4, 0x14, 0x9c, 0xe7, 0xb7, 0x3a, 0xe8, 0x49,
	0xed, 0xcd, 0x3e, 0x11, 0x7a, 0x01, 0x21, 0x4f, 0xa7, 0xfc, 0x76, 0xfb, 0x14, 0x95, 0x73, 0xe8,
	0x45, 0x6c, 0x4d, 0xa2, 0x31, 0xe3, 0xa3, 0x0e, 0x7a, 0x51, 0x7b, 0x07, 0x0e, 0x05, 0x71, 0xaa,
	0x0d, 0xf0, 0x3b, 0x1d, 0x70, 0xd4, 0xde, 0xf5, 0x4c, 0x0c, 0x4c, 0xf8, 0xdd, 0x4e, 0x66, 0x62,
	0x60, 0xc2, 0x3e, 0x13, 0xba, 0x8a, 0x70, 0xa4, 0x8d, 0xe2, 0xf7, 0xda, 0x87, 0xa8, 0xad, 0xeb,
	0x53, 0x92, 0x82, 0x74, 0xc0, 0xef, 0x77, 0x72, 0x4a, 0x82, 0x37, 0xfb, 0x4a, 0x68, 0x0f, 0x21,
	0xec, 0x93, 0xf7, 0xfc, 0x41, 0xfb, 0x20, 0x73, 0xf3, 0x30, 0x17, 0x6d, 0x12, 0x8b, 0x19, 0x7f,
	0xd8, 0xc1, 0x5c, 0x2a, 0x6b, 0xf6, 0x83, 0xd0, 0x4b, 0x61, 0x05, 0x91, 0x58, 0x9c, 0x48, 0x54,
	0xfc, 0x51, 0xfb, 0x30, 0x17, 0x43, 0xd9, 0xab, 0x0a, 0x80, 0x7d, 0x27, 0x74, 0xbd, 0x42, 0xaa,
	0xae, 0xb3, 0xc7, 0xed, 0x03, 0xd1, 0x50, 0x36, 0x0e, 0x77, 0x5a, 0x89, 0x13, 0xf6, 0x8e, 0x38,
	0x39, 0x05, 0x9c, 0xf2, 0x27, 0x1d, 0xe0, 0x04, 0xff, 0x37, 0xa5, 0x3d, 0xfb, 0x45, 0xe8, 0x56,
	0x03, 0xa7, 0xee, 0xd1, 0xd3, 0xf6, 0xa1, 0x06, 0x0b, 0xa8, 0xaa, 0x51, 0x3f, 0x09, 0xdd, 0x6c,
	0x92, 0x29, 0x6b, 0x80, 0x3f, 0x6b, 0x1f, 0x6c, 0x63, 0x01, 0xf6, 0xc2, 0x1a, 0x58, 0xe6, 0x92,
	0x5e, 0xf2, 0xe7, 0xdd, 0x72, 0x49, 0x2f, 0x87, 0xbf, 0x09, 0xdd, 0xfe, 0x8f, 0x9e, 0xdd, 0xa0,
	0x9b, 0x08, 0x31, 0xe8, 0x02, 0x94, 0xc8, 0x65, 0x7c, 0x0c, 0xde, 0x85, 0x17, 0xdc, 0xf9, 0xf1,
	0x60, 0x16, 0x3f, 0xac, 0xc2, 0xec, 0x26, 0xbd, 0xec, 0x51, 0x1a, 0x97, 0x69, 0xef, 0x1b, 0xea,
	0x95, 0xa0, 0x66, 0x8d, 0xd4, 0xac, 0xe0, 0x3a, 0x1d, 0x28, 0xb4, 0x79, 0xde, 0x10, 0x9f, 0x0b,
	0xe2, 0x8d, 0x3a, 0x5c, 0x0b, 0x8f, 0x56, 0xc3, 0x83, 0x75, 0xff, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x28, 0x9e, 0xdd, 0xa5, 0xcb, 0x0a, 0x00, 0x00,
}
