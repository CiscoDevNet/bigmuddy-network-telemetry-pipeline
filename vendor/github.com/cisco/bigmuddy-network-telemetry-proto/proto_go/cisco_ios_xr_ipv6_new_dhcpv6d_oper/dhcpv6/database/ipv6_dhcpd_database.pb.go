// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipv6_dhcpd_database.proto

/*
Package cisco_ios_xr_ipv6_new_dhcpv6d_oper_dhcpv6_database is a generated protocol buffer package.

It is generated from these files:
	ipv6_dhcpd_database.proto

It has these top-level messages:
	Ipv6DhcpdDatabase_KEYS
	Ipv6DhcpdDatabase
*/
package cisco_ios_xr_ipv6_new_dhcpv6d_oper_dhcpv6_database

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// IPv6 DHCP database
type Ipv6DhcpdDatabase_KEYS struct {
}

func (m *Ipv6DhcpdDatabase_KEYS) Reset()                    { *m = Ipv6DhcpdDatabase_KEYS{} }
func (m *Ipv6DhcpdDatabase_KEYS) String() string            { return proto.CompactTextString(m) }
func (*Ipv6DhcpdDatabase_KEYS) ProtoMessage()               {}
func (*Ipv6DhcpdDatabase_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Ipv6DhcpdDatabase struct {
	// Database feature configured
	Configured bool `protobuf:"varint,50,opt,name=configured" json:"configured,omitempty"`
	// Current file version
	Version uint32 `protobuf:"varint,51,opt,name=version" json:"version,omitempty"`
	// Full file write interval in minutes
	FullFileWriteInterval uint32 `protobuf:"varint,52,opt,name=full_file_write_interval,json=fullFileWriteInterval" json:"full_file_write_interval,omitempty"`
	// Last full write file name
	LastFullWriteFileName string `protobuf:"bytes,53,opt,name=last_full_write_file_name,json=lastFullWriteFileName" json:"last_full_write_file_name,omitempty"`
	// Last full write time since epoch
	LastFullWriteTime uint32 `protobuf:"varint,54,opt,name=last_full_write_time,json=lastFullWriteTime" json:"last_full_write_time,omitempty"`
	// Full file write count
	FullFileWriteCount uint32 `protobuf:"varint,55,opt,name=full_file_write_count,json=fullFileWriteCount" json:"full_file_write_count,omitempty"`
	// Failed full file write count
	FailedFullFileWriteCount uint32 `protobuf:"varint,56,opt,name=failed_full_file_write_count,json=failedFullFileWriteCount" json:"failed_full_file_write_count,omitempty"`
	// Full file record count
	FullFileRecordCount uint32 `protobuf:"varint,57,opt,name=full_file_record_count,json=fullFileRecordCount" json:"full_file_record_count,omitempty"`
	// Last full file write error timestamp since epoch
	LastFullFileWriteErrorTimestamp uint32 `protobuf:"varint,58,opt,name=last_full_file_write_error_timestamp,json=lastFullFileWriteErrorTimestamp" json:"last_full_file_write_error_timestamp,omitempty"`
	// Incremental file write interval in minutes
	IncrementalFileWriteInterval uint32 `protobuf:"varint,59,opt,name=incremental_file_write_interval,json=incrementalFileWriteInterval" json:"incremental_file_write_interval,omitempty"`
	// Last incremental write file name
	LastIncrementalWriteFileName string `protobuf:"bytes,60,opt,name=last_incremental_write_file_name,json=lastIncrementalWriteFileName" json:"last_incremental_write_file_name,omitempty"`
	// Last incremental write time since epoch
	LastIncrementalWriteTime uint32 `protobuf:"varint,61,opt,name=last_incremental_write_time,json=lastIncrementalWriteTime" json:"last_incremental_write_time,omitempty"`
	// Incremental file write count
	IncrementalFileWriteCount uint32 `protobuf:"varint,62,opt,name=incremental_file_write_count,json=incrementalFileWriteCount" json:"incremental_file_write_count,omitempty"`
	// Failed incremental file write count
	FailedIncrementalFileWriteCount uint32 `protobuf:"varint,63,opt,name=failed_incremental_file_write_count,json=failedIncrementalFileWriteCount" json:"failed_incremental_file_write_count,omitempty"`
	// Incremental file record count
	IncrementalFileRecordCount uint32 `protobuf:"varint,64,opt,name=incremental_file_record_count,json=incrementalFileRecordCount" json:"incremental_file_record_count,omitempty"`
	// Last incremental file write error timestamp since epoch
	LastIncrementalFileWriteErrorTimestamp uint32 `protobuf:"varint,65,opt,name=last_incremental_file_write_error_timestamp,json=lastIncrementalFileWriteErrorTimestamp" json:"last_incremental_file_write_error_timestamp,omitempty"`
}

func (m *Ipv6DhcpdDatabase) Reset()                    { *m = Ipv6DhcpdDatabase{} }
func (m *Ipv6DhcpdDatabase) String() string            { return proto.CompactTextString(m) }
func (*Ipv6DhcpdDatabase) ProtoMessage()               {}
func (*Ipv6DhcpdDatabase) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Ipv6DhcpdDatabase) GetConfigured() bool {
	if m != nil {
		return m.Configured
	}
	return false
}

func (m *Ipv6DhcpdDatabase) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Ipv6DhcpdDatabase) GetFullFileWriteInterval() uint32 {
	if m != nil {
		return m.FullFileWriteInterval
	}
	return 0
}

func (m *Ipv6DhcpdDatabase) GetLastFullWriteFileName() string {
	if m != nil {
		return m.LastFullWriteFileName
	}
	return ""
}

func (m *Ipv6DhcpdDatabase) GetLastFullWriteTime() uint32 {
	if m != nil {
		return m.LastFullWriteTime
	}
	return 0
}

func (m *Ipv6DhcpdDatabase) GetFullFileWriteCount() uint32 {
	if m != nil {
		return m.FullFileWriteCount
	}
	return 0
}

func (m *Ipv6DhcpdDatabase) GetFailedFullFileWriteCount() uint32 {
	if m != nil {
		return m.FailedFullFileWriteCount
	}
	return 0
}

func (m *Ipv6DhcpdDatabase) GetFullFileRecordCount() uint32 {
	if m != nil {
		return m.FullFileRecordCount
	}
	return 0
}

func (m *Ipv6DhcpdDatabase) GetLastFullFileWriteErrorTimestamp() uint32 {
	if m != nil {
		return m.LastFullFileWriteErrorTimestamp
	}
	return 0
}

func (m *Ipv6DhcpdDatabase) GetIncrementalFileWriteInterval() uint32 {
	if m != nil {
		return m.IncrementalFileWriteInterval
	}
	return 0
}

func (m *Ipv6DhcpdDatabase) GetLastIncrementalWriteFileName() string {
	if m != nil {
		return m.LastIncrementalWriteFileName
	}
	return ""
}

func (m *Ipv6DhcpdDatabase) GetLastIncrementalWriteTime() uint32 {
	if m != nil {
		return m.LastIncrementalWriteTime
	}
	return 0
}

func (m *Ipv6DhcpdDatabase) GetIncrementalFileWriteCount() uint32 {
	if m != nil {
		return m.IncrementalFileWriteCount
	}
	return 0
}

func (m *Ipv6DhcpdDatabase) GetFailedIncrementalFileWriteCount() uint32 {
	if m != nil {
		return m.FailedIncrementalFileWriteCount
	}
	return 0
}

func (m *Ipv6DhcpdDatabase) GetIncrementalFileRecordCount() uint32 {
	if m != nil {
		return m.IncrementalFileRecordCount
	}
	return 0
}

func (m *Ipv6DhcpdDatabase) GetLastIncrementalFileWriteErrorTimestamp() uint32 {
	if m != nil {
		return m.LastIncrementalFileWriteErrorTimestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*Ipv6DhcpdDatabase_KEYS)(nil), "cisco_ios_xr_ipv6_new_dhcpv6d_oper.dhcpv6.database.ipv6_dhcpd_database_KEYS")
	proto.RegisterType((*Ipv6DhcpdDatabase)(nil), "cisco_ios_xr_ipv6_new_dhcpv6d_oper.dhcpv6.database.ipv6_dhcpd_database")
}

func init() { proto.RegisterFile("ipv6_dhcpd_database.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 461 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0xdb, 0x6b, 0x13, 0x41,
	0x14, 0xc6, 0xc9, 0x8b, 0xd5, 0x03, 0x3e, 0x38, 0x35, 0x32, 0xa9, 0xd1, 0x86, 0x2a, 0x12, 0x10,
	0x22, 0x36, 0x9a, 0xd6, 0x4b, 0x5b, 0x8b, 0x24, 0x10, 0xbc, 0x3c, 0xc4, 0x82, 0x88, 0x0f, 0xc3,
	0x74, 0xf7, 0x44, 0x07, 0x66, 0x67, 0x96, 0xd9, 0x49, 0xea, 0x7f, 0xec, 0xbf, 0x21, 0x7b, 0x26,
	0x6b, 0x36, 0x9b, 0xdd, 0x3c, 0xce, 0x9e, 0xef, 0xf7, 0x9d, 0xcb, 0x07, 0x0b, 0x1d, 0x95, 0x2e,
	0x47, 0x22, 0xfe, 0x1d, 0xa5, 0xb1, 0x88, 0xa5, 0x97, 0xd7, 0x32, 0xc3, 0x41, 0xea, 0xac, 0xb7,
	0xec, 0x38, 0x52, 0x59, 0x64, 0x85, 0xb2, 0x99, 0xf8, 0xe3, 0x04, 0xe9, 0x0c, 0xde, 0x90, 0x76,
	0x39, 0x8a, 0x85, 0x4d, 0xd1, 0x0d, 0xc2, 0x63, 0x50, 0x90, 0x47, 0x07, 0xc0, 0x6b, 0x0c, 0xc5,
	0xa7, 0xf1, 0x8f, 0x6f, 0x47, 0x7f, 0xf7, 0x60, 0xbf, 0xa6, 0xc8, 0x1e, 0x03, 0x44, 0xd6, 0xcc,
	0xd5, 0xaf, 0x85, 0xc3, 0x98, 0x1f, 0xf7, 0x5a, 0xfd, 0xdb, 0xb3, 0xd2, 0x17, 0xc6, 0x61, 0x6f,
	0x89, 0x2e, 0x53, 0xd6, 0xf0, 0x61, 0xaf, 0xd5, 0xbf, 0x3b, 0x2b, 0x9e, 0xec, 0x04, 0xf8, 0x7c,
	0xa1, 0xb5, 0x98, 0x2b, 0x8d, 0xe2, 0xc6, 0x29, 0x8f, 0x42, 0x19, 0x8f, 0x6e, 0x29, 0x35, 0x7f,
	0x45, 0xd2, 0x76, 0x5e, 0x9f, 0x28, 0x8d, 0xdf, 0xf3, 0xea, 0x74, 0x55, 0x64, 0xa7, 0xd0, 0xd1,
	0x32, 0xf3, 0x82, 0xe8, 0x00, 0x92, 0x87, 0x91, 0x09, 0xf2, 0xd7, 0xbd, 0x56, 0xff, 0xce, 0xac,
	0x9d, 0x0b, 0x26, 0x0b, 0xad, 0x89, 0xcc, 0x2d, 0xbe, 0xca, 0x04, 0xd9, 0x0b, 0xb8, 0x5f, 0x25,
	0xbd, 0x4a, 0x90, 0x8f, 0xa8, 0xdd, 0xbd, 0x0d, 0xe8, 0x4a, 0x25, 0xc8, 0x5e, 0x42, 0xbb, 0x3a,
	0x63, 0x64, 0x17, 0xc6, 0xf3, 0x13, 0x22, 0xd8, 0xc6, 0x80, 0x1f, 0xf3, 0x0a, 0x3b, 0x87, 0xee,
	0x5c, 0x2a, 0x8d, 0xb1, 0xa8, 0x27, 0x4f, 0x89, 0xe4, 0x41, 0x33, 0xd9, 0xe6, 0x87, 0xf0, 0x60,
	0x0d, 0x3a, 0x8c, 0xac, 0x8b, 0x57, 0xe4, 0x1b, 0x22, 0xf7, 0x8b, 0x9e, 0x33, 0xaa, 0x05, 0xe8,
	0x0b, 0x3c, 0x5d, 0x2f, 0x56, 0x6a, 0x89, 0xce, 0x59, 0x47, 0x3b, 0x66, 0x5e, 0x26, 0x29, 0x7f,
	0x4b, 0x16, 0x87, 0xc5, 0xa2, 0xff, 0x5b, 0x8f, 0x73, 0xdd, 0x55, 0x21, 0x63, 0x63, 0x38, 0x54,
	0x26, 0x72, 0x98, 0xa0, 0xf1, 0xb2, 0x3e, 0xa1, 0x77, 0xe4, 0xd4, 0x2d, 0xc9, 0xb6, 0x83, 0x9a,
	0x40, 0x8f, 0xa6, 0x2a, 0x7b, 0x55, 0xf3, 0x7a, 0x4f, 0x79, 0x75, 0x73, 0xdd, 0x74, 0x2d, 0xdb,
	0x8c, 0xed, 0x0c, 0x1e, 0x36, 0xf8, 0x50, 0x7a, 0x67, 0xe1, 0xa2, 0x75, 0x16, 0x14, 0xe2, 0x05,
	0x74, 0x1b, 0xb6, 0x09, 0x77, 0x3d, 0x27, 0xbe, 0x53, 0xb7, 0x4a, 0xb8, 0xee, 0x67, 0x78, 0xb2,
	0x8a, 0x74, 0xa7, 0xcf, 0x45, 0x38, 0x6e, 0x90, 0x4e, 0x1b, 0xdd, 0x2e, 0xe1, 0xd1, 0x96, 0xcd,
	0x46, 0xce, 0x1f, 0xc8, 0xe7, 0xa0, 0x32, 0x4f, 0x39, 0xee, 0x9f, 0xf0, 0x7c, 0xeb, 0x20, 0x3b,
	0x52, 0xbf, 0x24, 0xc3, 0x67, 0x95, 0x03, 0x35, 0x84, 0x7f, 0x7d, 0x8b, 0x7e, 0x20, 0xc3, 0x7f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x36, 0xfb, 0xc3, 0xd2, 0x5d, 0x04, 0x00, 0x00,
}
