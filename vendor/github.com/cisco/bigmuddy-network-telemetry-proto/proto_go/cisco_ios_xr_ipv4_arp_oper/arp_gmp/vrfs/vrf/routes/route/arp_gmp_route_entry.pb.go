// Code generated by protoc-gen-go. DO NOT EDIT.
// source: arp_gmp_route_entry.proto

/*
Package cisco_ios_xr_ipv4_arp_oper_arp_gmp_vrfs_vrf_routes_route is a generated protocol buffer package.

It is generated from these files:
	arp_gmp_route_entry.proto

It has these top-level messages:
	ArpGmpRouteEntry_KEYS
	ArpGmpRouteEntry
*/
package cisco_ios_xr_ipv4_arp_oper_arp_gmp_vrfs_vrf_routes_route

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ARP GMP route entry
type ArpGmpRouteEntry_KEYS struct {
	VrfName      string `protobuf:"bytes,1,opt,name=vrf_name,json=vrfName" json:"vrf_name,omitempty"`
	Address      string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	PrefixLength uint32 `protobuf:"varint,3,opt,name=prefix_length,json=prefixLength" json:"prefix_length,omitempty"`
}

func (m *ArpGmpRouteEntry_KEYS) Reset()                    { *m = ArpGmpRouteEntry_KEYS{} }
func (m *ArpGmpRouteEntry_KEYS) String() string            { return proto.CompactTextString(m) }
func (*ArpGmpRouteEntry_KEYS) ProtoMessage()               {}
func (*ArpGmpRouteEntry_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ArpGmpRouteEntry_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *ArpGmpRouteEntry_KEYS) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ArpGmpRouteEntry_KEYS) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

type ArpGmpRouteEntry struct {
	// IP address
	IpAddress string `protobuf:"bytes,50,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
	// IP address length
	PrefixLength uint32 `protobuf:"varint,51,opt,name=prefix_length,json=prefixLength" json:"prefix_length,omitempty"`
	// Interface name (first element of InterfaceNames array)
	InterfaceName string `protobuf:"bytes,52,opt,name=interface_name,json=interfaceName" json:"interface_name,omitempty"`
	// Interface names
	InterfaceNames []string `protobuf:"bytes,53,rep,name=interface_names,json=interfaceNames" json:"interface_names,omitempty"`
}

func (m *ArpGmpRouteEntry) Reset()                    { *m = ArpGmpRouteEntry{} }
func (m *ArpGmpRouteEntry) String() string            { return proto.CompactTextString(m) }
func (*ArpGmpRouteEntry) ProtoMessage()               {}
func (*ArpGmpRouteEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ArpGmpRouteEntry) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *ArpGmpRouteEntry) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

func (m *ArpGmpRouteEntry) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *ArpGmpRouteEntry) GetInterfaceNames() []string {
	if m != nil {
		return m.InterfaceNames
	}
	return nil
}

func init() {
	proto.RegisterType((*ArpGmpRouteEntry_KEYS)(nil), "cisco_ios_xr_ipv4_arp_oper.arp_gmp.vrfs.vrf.routes.route.arp_gmp_route_entry_KEYS")
	proto.RegisterType((*ArpGmpRouteEntry)(nil), "cisco_ios_xr_ipv4_arp_oper.arp_gmp.vrfs.vrf.routes.route.arp_gmp_route_entry")
}

func init() { proto.RegisterFile("arp_gmp_route_entry.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0xc5, 0x59, 0x0b, 0xd6, 0x1d, 0xdc, 0x0a, 0xf1, 0x92, 0x1e, 0x84, 0xa5, 0x22, 0xee, 0x69,
	0x0f, 0xb6, 0x82, 0x57, 0x0f, 0x9e, 0x14, 0x0f, 0xeb, 0xc9, 0xd3, 0x10, 0xb7, 0x93, 0x1a, 0x70,
	0x37, 0x61, 0x12, 0x97, 0xfa, 0x91, 0xfc, 0x96, 0xd2, 0xa4, 0x0a, 0xc5, 0xf6, 0x92, 0x90, 0x97,
	0xf7, 0x7e, 0xf3, 0x07, 0xa6, 0x8a, 0x1d, 0xae, 0x3a, 0x87, 0x6c, 0x3f, 0x03, 0x21, 0xf5, 0x81,
	0xbf, 0x6a, 0xc7, 0x36, 0x58, 0x71, 0xd7, 0x1a, 0xdf, 0x5a, 0x34, 0xd6, 0xe3, 0x9a, 0xd1, 0xb8,
	0x61, 0x81, 0x1b, 0xb3, 0x75, 0xc4, 0xf5, 0x36, 0x55, 0x0f, 0xac, 0xfd, 0xe6, 0xa8, 0x63, 0xdc,
	0xa7, 0x6b, 0x16, 0x40, 0xee, 0xc1, 0xe2, 0xe3, 0xc3, 0xeb, 0x8b, 0x98, 0xc2, 0xc9, 0xc0, 0x1a,
	0x7b, 0xd5, 0x91, 0xcc, 0xca, 0xac, 0xca, 0x9b, 0xf1, 0xc0, 0xfa, 0x59, 0x75, 0x24, 0x24, 0x8c,
	0xd5, 0x72, 0xc9, 0xe4, 0xbd, 0x3c, 0x4a, 0x3f, 0xdb, 0xa7, 0xb8, 0x84, 0xc2, 0x31, 0x69, 0xb3,
	0xc6, 0x0f, 0xea, 0x57, 0xe1, 0x5d, 0x8e, 0xca, 0xac, 0x2a, 0x9a, 0xd3, 0x24, 0x3e, 0x45, 0x6d,
	0xf6, 0x9d, 0xc1, 0xf9, 0x9e, 0xb2, 0xe2, 0x02, 0xc0, 0x38, 0xfc, 0x25, 0xdf, 0x44, 0x72, 0x6e,
	0xdc, 0xfd, 0x21, 0xf6, 0xfc, 0x3f, 0x5b, 0x5c, 0xc1, 0xc4, 0xf4, 0x81, 0x58, 0xab, 0x96, 0x52,
	0xef, 0x8b, 0xc8, 0x29, 0xfe, 0xd4, 0x38, 0xc1, 0x35, 0x9c, 0xed, 0xda, 0xbc, 0xbc, 0x2d, 0x47,
	0x55, 0xde, 0x4c, 0x76, 0x7c, 0xfe, 0xed, 0x38, 0xae, 0x78, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff,
	0x91, 0xeb, 0x24, 0xdd, 0x7f, 0x01, 0x00, 0x00,
}
