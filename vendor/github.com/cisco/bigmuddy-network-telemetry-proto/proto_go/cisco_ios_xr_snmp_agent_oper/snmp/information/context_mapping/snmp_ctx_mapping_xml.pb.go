// Code generated by protoc-gen-go. DO NOT EDIT.
// source: snmp_ctx_mapping_xml.proto

/*
Package cisco_ios_xr_snmp_agent_oper_snmp_information_context_mapping is a generated protocol buffer package.

It is generated from these files:
	snmp_ctx_mapping_xml.proto

It has these top-level messages:
	SnmpCtxMappingXml_KEYS
	SnmpCtxMappingXml
	SnmpCtxMappingEntryXml
*/
package cisco_ios_xr_snmp_agent_oper_snmp_information_context_mapping

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// SNMP context mapping
type SnmpCtxMappingXml_KEYS struct {
}

func (m *SnmpCtxMappingXml_KEYS) Reset()                    { *m = SnmpCtxMappingXml_KEYS{} }
func (m *SnmpCtxMappingXml_KEYS) String() string            { return proto.CompactTextString(m) }
func (*SnmpCtxMappingXml_KEYS) ProtoMessage()               {}
func (*SnmpCtxMappingXml_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SnmpCtxMappingXml struct {
	// Context Mapping
	ContexMapping []*SnmpCtxMappingEntryXml `protobuf:"bytes,50,rep,name=contex_mapping,json=contexMapping" json:"contex_mapping,omitempty"`
}

func (m *SnmpCtxMappingXml) Reset()                    { *m = SnmpCtxMappingXml{} }
func (m *SnmpCtxMappingXml) String() string            { return proto.CompactTextString(m) }
func (*SnmpCtxMappingXml) ProtoMessage()               {}
func (*SnmpCtxMappingXml) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SnmpCtxMappingXml) GetContexMapping() []*SnmpCtxMappingEntryXml {
	if m != nil {
		return m.ContexMapping
	}
	return nil
}

// SNMP context mapping entry xml
type SnmpCtxMappingEntryXml struct {
	// Context name
	Context string `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	// Feature name
	FeatureName string `protobuf:"bytes,2,opt,name=feature_name,json=featureName" json:"feature_name,omitempty"`
	// Instance name
	Instance string `protobuf:"bytes,3,opt,name=instance" json:"instance,omitempty"`
	// Topology name
	Topology string `protobuf:"bytes,4,opt,name=topology" json:"topology,omitempty"`
	// Feature
	Feature string `protobuf:"bytes,5,opt,name=feature" json:"feature,omitempty"`
}

func (m *SnmpCtxMappingEntryXml) Reset()                    { *m = SnmpCtxMappingEntryXml{} }
func (m *SnmpCtxMappingEntryXml) String() string            { return proto.CompactTextString(m) }
func (*SnmpCtxMappingEntryXml) ProtoMessage()               {}
func (*SnmpCtxMappingEntryXml) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SnmpCtxMappingEntryXml) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *SnmpCtxMappingEntryXml) GetFeatureName() string {
	if m != nil {
		return m.FeatureName
	}
	return ""
}

func (m *SnmpCtxMappingEntryXml) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *SnmpCtxMappingEntryXml) GetTopology() string {
	if m != nil {
		return m.Topology
	}
	return ""
}

func (m *SnmpCtxMappingEntryXml) GetFeature() string {
	if m != nil {
		return m.Feature
	}
	return ""
}

func init() {
	proto.RegisterType((*SnmpCtxMappingXml_KEYS)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.context_mapping.snmp_ctx_mapping_xml_KEYS")
	proto.RegisterType((*SnmpCtxMappingXml)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.context_mapping.snmp_ctx_mapping_xml")
	proto.RegisterType((*SnmpCtxMappingEntryXml)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.context_mapping.snmp_ctx_mapping_entry_xml")
}

func init() { proto.RegisterFile("snmp_ctx_mapping_xml.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x91, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0x65, 0xca, 0x5f, 0x17, 0x18, 0x2c, 0x06, 0x53, 0x96, 0xd2, 0xa9, 0x93, 0x87, 0x32,
	0x33, 0x32, 0x21, 0x18, 0xca, 0xd4, 0xc9, 0x32, 0xd6, 0x35, 0xb2, 0x54, 0xdf, 0x59, 0xce, 0x21,
	0xa5, 0x1b, 0xaf, 0xc1, 0x33, 0xf0, 0x92, 0x28, 0x89, 0xd3, 0x85, 0x6c, 0x1d, 0xbf, 0xfb, 0x9d,
	0x7e, 0xdf, 0xc9, 0x96, 0xb3, 0x1a, 0x63, 0xb2, 0x9e, 0x1b, 0x1b, 0x5d, 0x4a, 0x01, 0x2b, 0xdb,
	0xc4, 0x9d, 0x49, 0x99, 0x98, 0xd4, 0xb3, 0x0f, 0xb5, 0x27, 0x1b, 0xa8, 0xb6, 0x4d, 0xb6, 0xdd,
	0xa2, 0xab, 0x00, 0xd9, 0x52, 0x82, 0x6c, 0xda, 0x6c, 0x02, 0x6e, 0x29, 0x47, 0xc7, 0x81, 0xd0,
	0x78, 0x42, 0x86, 0x86, 0x07, 0xd1, 0xe2, 0x41, 0xde, 0x8f, 0xc9, 0xed, 0xeb, 0xcb, 0xe6, 0x63,
	0xf1, 0x23, 0xe4, 0xdd, 0x18, 0x55, 0xdf, 0x42, 0xde, 0xf6, 0xa6, 0x61, 0xac, 0x57, 0xf3, 0xc9,
	0x72, 0xba, 0xda, 0x98, 0xa3, 0xce, 0x31, 0xff, 0xda, 0x00, 0x39, 0xef, 0xdb, 0xce, 0xf5, 0x4d,
	0xbf, 0xfb, 0x56, 0x0e, 0xff, 0x15, 0x23, 0xcf, 0x72, 0xd8, 0x56, 0x5a, 0x5e, 0x14, 0xb7, 0x16,
	0x73, 0xb1, 0xbc, 0x5a, 0x0f, 0x51, 0x3d, 0xca, 0xeb, 0x2d, 0x38, 0xfe, 0xca, 0x60, 0xd1, 0x45,
	0xd0, 0x27, 0x1d, 0x9e, 0x96, 0xd9, 0xbb, 0x8b, 0xa0, 0x66, 0xf2, 0x32, 0x60, 0xcd, 0x0e, 0x3d,
	0xe8, 0x49, 0x87, 0x0f, 0xb9, 0x65, 0x4c, 0x89, 0x76, 0x54, 0xed, 0xf5, 0x69, 0xcf, 0x86, 0xdc,
	0x96, 0x16, 0x8d, 0x3e, 0xeb, 0x4b, 0x4b, 0xfc, 0x3c, 0xef, 0x3e, 0xeb, 0xe9, 0x2f, 0x00, 0x00,
	0xff, 0xff, 0x65, 0x8d, 0xe2, 0x8e, 0xca, 0x01, 0x00, 0x00,
}
