// Code generated by protoc-gen-go. DO NOT EDIT.
// source: snmp_rxque.proto

/*
Package cisco_ios_xr_snmp_agent_oper_snmp_information_rx_queue is a generated protocol buffer package.

It is generated from these files:
	snmp_rxque.proto

It has these top-level messages:
	SnmpRxque_KEYS
	SnmpRxque
*/
package cisco_ios_xr_snmp_agent_oper_snmp_information_rx_queue

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// SNMP Incoming queue statistics
type SnmpRxque_KEYS struct {
}

func (m *SnmpRxque_KEYS) Reset()                    { *m = SnmpRxque_KEYS{} }
func (m *SnmpRxque_KEYS) String() string            { return proto.CompactTextString(m) }
func (*SnmpRxque_KEYS) ProtoMessage()               {}
func (*SnmpRxque_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SnmpRxque struct {
	Qlen      uint32 `protobuf:"varint,50,opt,name=qlen" json:"qlen,omitempty"`
	InMin     uint32 `protobuf:"varint,51,opt,name=in_min,json=inMin" json:"in_min,omitempty"`
	InAvg     uint32 `protobuf:"varint,52,opt,name=in_avg,json=inAvg" json:"in_avg,omitempty"`
	InMax     uint32 `protobuf:"varint,53,opt,name=in_max,json=inMax" json:"in_max,omitempty"`
	PendMin   uint32 `protobuf:"varint,54,opt,name=pend_min,json=pendMin" json:"pend_min,omitempty"`
	PendAvg   uint32 `protobuf:"varint,55,opt,name=pend_avg,json=pendAvg" json:"pend_avg,omitempty"`
	PendMax   uint32 `protobuf:"varint,56,opt,name=pend_max,json=pendMax" json:"pend_max,omitempty"`
	IncomingQ []byte `protobuf:"bytes,57,opt,name=incoming_q,json=incomingQ,proto3" json:"incoming_q,omitempty"`
	PendingQ  []byte `protobuf:"bytes,58,opt,name=pending_q,json=pendingQ,proto3" json:"pending_q,omitempty"`
}

func (m *SnmpRxque) Reset()                    { *m = SnmpRxque{} }
func (m *SnmpRxque) String() string            { return proto.CompactTextString(m) }
func (*SnmpRxque) ProtoMessage()               {}
func (*SnmpRxque) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SnmpRxque) GetQlen() uint32 {
	if m != nil {
		return m.Qlen
	}
	return 0
}

func (m *SnmpRxque) GetInMin() uint32 {
	if m != nil {
		return m.InMin
	}
	return 0
}

func (m *SnmpRxque) GetInAvg() uint32 {
	if m != nil {
		return m.InAvg
	}
	return 0
}

func (m *SnmpRxque) GetInMax() uint32 {
	if m != nil {
		return m.InMax
	}
	return 0
}

func (m *SnmpRxque) GetPendMin() uint32 {
	if m != nil {
		return m.PendMin
	}
	return 0
}

func (m *SnmpRxque) GetPendAvg() uint32 {
	if m != nil {
		return m.PendAvg
	}
	return 0
}

func (m *SnmpRxque) GetPendMax() uint32 {
	if m != nil {
		return m.PendMax
	}
	return 0
}

func (m *SnmpRxque) GetIncomingQ() []byte {
	if m != nil {
		return m.IncomingQ
	}
	return nil
}

func (m *SnmpRxque) GetPendingQ() []byte {
	if m != nil {
		return m.PendingQ
	}
	return nil
}

func init() {
	proto.RegisterType((*SnmpRxque_KEYS)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.rx_queue.snmp_rxque_KEYS")
	proto.RegisterType((*SnmpRxque)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.rx_queue.snmp_rxque")
}

func init() { proto.RegisterFile("snmp_rxque.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0x40, 0x15, 0x09, 0x4a, 0x7b, 0x02, 0x01, 0x96, 0x90, 0x8c, 0x10, 0x52, 0xd5, 0xa9, 0x53,
	0x06, 0x0a, 0xe5, 0x63, 0x63, 0x60, 0x42, 0x0c, 0x2d, 0x13, 0xd3, 0xc9, 0x04, 0x13, 0x9d, 0x44,
	0xee, 0x12, 0x27, 0xa9, 0xfc, 0xbb, 0xf9, 0x05, 0xc8, 0x06, 0x27, 0x6c, 0xbe, 0xf7, 0xee, 0xde,
	0x60, 0x38, 0x69, 0xb9, 0xaa, 0xd1, 0xf9, 0xa6, 0xb7, 0x79, 0xed, 0xa4, 0x13, 0xb5, 0x2e, 0xa8,
	0x2d, 0x04, 0x49, 0x5a, 0xf4, 0x0e, 0xa3, 0x36, 0xa5, 0xe5, 0x0e, 0xa5, 0xb6, 0x2e, 0x0f, 0x73,
	0x4e, 0xfc, 0x29, 0xae, 0x32, 0x1d, 0x09, 0xe7, 0xce, 0x63, 0xd3, 0xdb, 0xde, 0x2e, 0x4e, 0xe1,
	0x78, 0x6c, 0xe1, 0xf3, 0xd3, 0xdb, 0xeb, 0xe2, 0x3b, 0x03, 0x18, 0x99, 0x52, 0xb0, 0xd7, 0x7c,
	0x59, 0xd6, 0x57, 0xf3, 0x6c, 0x79, 0xb4, 0x8d, 0x6f, 0x75, 0x06, 0x13, 0x62, 0xac, 0x88, 0xf5,
	0x2a, 0xd2, 0x7d, 0xe2, 0x17, 0x4a, 0xd8, 0xec, 0x4a, 0x7d, 0x9d, 0xf0, 0xe3, 0xae, 0x4c, 0xdb,
	0xc6, 0xeb, 0x9b, 0x61, 0xdb, 0x78, 0x75, 0x0e, 0xd3, 0xda, 0xf2, 0x47, 0xcc, 0xac, 0xa3, 0x38,
	0x08, 0x73, 0x08, 0x25, 0x15, 0x52, 0xb7, 0xa3, 0x0a, 0xb1, 0xe1, 0xca, 0x78, 0x7d, 0xf7, 0xef,
	0xca, 0x78, 0x75, 0x09, 0x40, 0x5c, 0x48, 0x45, 0x5c, 0x62, 0xa3, 0xef, 0xe7, 0xd9, 0xf2, 0x70,
	0x3b, 0x4b, 0x64, 0xa3, 0x2e, 0x60, 0x16, 0x36, 0x7f, 0xed, 0x43, 0xb4, 0xd3, 0x3f, 0xb0, 0x79,
	0x9f, 0xc4, 0x6f, 0x5c, 0xfd, 0x04, 0x00, 0x00, 0xff, 0xff, 0x79, 0x4d, 0xc8, 0x07, 0x5a, 0x01,
	0x00, 0x00,
}
