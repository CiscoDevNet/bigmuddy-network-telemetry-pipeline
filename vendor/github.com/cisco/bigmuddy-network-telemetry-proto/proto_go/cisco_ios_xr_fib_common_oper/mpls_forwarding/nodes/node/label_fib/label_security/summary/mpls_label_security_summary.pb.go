// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_label_security_summary.proto

/*
Package cisco_ios_xr_fib_common_oper_mpls_forwarding_nodes_node_label_fib_label_security_summary is a generated protocol buffer package.

It is generated from these files:
	mpls_label_security_summary.proto

It has these top-level messages:
	MplsLabelSecuritySummary_KEYS
	MplsLabelSecuritySummary
*/
package cisco_ios_xr_fib_common_oper_mpls_forwarding_nodes_node_label_fib_label_security_summary

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MplsLabelSecuritySummary_KEYS struct {
	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
}

func (m *MplsLabelSecuritySummary_KEYS) Reset()                    { *m = MplsLabelSecuritySummary_KEYS{} }
func (m *MplsLabelSecuritySummary_KEYS) String() string            { return proto.CompactTextString(m) }
func (*MplsLabelSecuritySummary_KEYS) ProtoMessage()               {}
func (*MplsLabelSecuritySummary_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MplsLabelSecuritySummary_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type MplsLabelSecuritySummary struct {
	// RPF drops
	RpfDrops uint64 `protobuf:"varint,50,opt,name=rpf_drops,json=rpfDrops" json:"rpf_drops,omitempty"`
	// Multi-label drops
	MultiLabelDrops uint64 `protobuf:"varint,51,opt,name=multi_label_drops,json=multiLabelDrops" json:"multi_label_drops,omitempty"`
}

func (m *MplsLabelSecuritySummary) Reset()                    { *m = MplsLabelSecuritySummary{} }
func (m *MplsLabelSecuritySummary) String() string            { return proto.CompactTextString(m) }
func (*MplsLabelSecuritySummary) ProtoMessage()               {}
func (*MplsLabelSecuritySummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MplsLabelSecuritySummary) GetRpfDrops() uint64 {
	if m != nil {
		return m.RpfDrops
	}
	return 0
}

func (m *MplsLabelSecuritySummary) GetMultiLabelDrops() uint64 {
	if m != nil {
		return m.MultiLabelDrops
	}
	return 0
}

func init() {
	proto.RegisterType((*MplsLabelSecuritySummary_KEYS)(nil), "cisco_ios_xr_fib_common_oper.mpls_forwarding.nodes.node.label_fib.label_security.summary.mpls_label_security_summary_KEYS")
	proto.RegisterType((*MplsLabelSecuritySummary)(nil), "cisco_ios_xr_fib_common_oper.mpls_forwarding.nodes.node.label_fib.label_security.summary.mpls_label_security_summary")
}

func init() { proto.RegisterFile("mpls_label_security_summary.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xb1, 0x4a, 0x04, 0x31,
	0x10, 0x86, 0x59, 0x10, 0xb9, 0x4b, 0x23, 0x6e, 0x75, 0x70, 0xcd, 0x7a, 0xd5, 0x61, 0x91, 0xc2,
	0x7b, 0x00, 0x1b, 0xad, 0x14, 0x8b, 0xb5, 0xd1, 0x6a, 0x48, 0xb2, 0x89, 0x04, 0x32, 0x99, 0x30,
	0xd9, 0x45, 0xf7, 0xed, 0x25, 0xd9, 0x6d, 0xae, 0xd9, 0x26, 0x90, 0x7f, 0xfe, 0xef, 0x1b, 0x18,
	0xf1, 0x80, 0x29, 0x64, 0x08, 0x4a, 0xdb, 0x00, 0xd9, 0x9a, 0x89, 0xfd, 0x38, 0x43, 0x9e, 0x10,
	0x15, 0xcf, 0x32, 0x31, 0x8d, 0xd4, 0x7e, 0x19, 0x9f, 0x0d, 0x81, 0xa7, 0x0c, 0x7f, 0x0c, 0xce,
	0x6b, 0x30, 0x84, 0x48, 0x11, 0x28, 0x59, 0x96, 0x95, 0x77, 0xc4, 0xbf, 0x8a, 0x07, 0x1f, 0x7f,
	0x64, 0xa4, 0xc1, 0xe6, 0xfa, 0xca, 0xc5, 0xea, 0xbc, 0x96, 0xd7, 0x7e, 0xb9, 0xfa, 0x4f, 0xcf,
	0xa2, 0xdb, 0x58, 0x0f, 0x6f, 0xaf, 0xdf, 0x9f, 0xed, 0x51, 0xec, 0x8b, 0x0c, 0xa2, 0x42, 0x7b,
	0x68, 0xba, 0xe6, 0xbc, 0xef, 0x77, 0x25, 0xf8, 0x50, 0x68, 0x4f, 0x4e, 0x1c, 0x37, 0x04, 0x85,
	0xe5, 0xe4, 0x60, 0x60, 0x4a, 0xf9, 0xf0, 0xd4, 0x35, 0xe7, 0x9b, 0x7e, 0xc7, 0xc9, 0xbd, 0x94,
	0x7f, 0xfb, 0x28, 0xee, 0x71, 0x0a, 0xa3, 0x5f, 0xe1, 0xa5, 0x74, 0xa9, 0xa5, 0xbb, 0x3a, 0x78,
	0x2f, 0x79, 0xed, 0xea, 0xdb, 0x7a, 0x89, 0xcb, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x91, 0xde,
	0x32, 0x35, 0x2e, 0x01, 0x00, 0x00,
}
