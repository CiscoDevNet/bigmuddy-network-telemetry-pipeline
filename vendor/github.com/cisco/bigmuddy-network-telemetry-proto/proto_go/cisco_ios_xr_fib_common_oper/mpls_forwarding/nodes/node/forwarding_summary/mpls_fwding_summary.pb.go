// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_fwding_summary.proto

/*
Package cisco_ios_xr_fib_common_oper_mpls_forwarding_nodes_node_forwarding_summary is a generated protocol buffer package.

It is generated from these files:
	mpls_fwding_summary.proto

It has these top-level messages:
	MplsFwdingSummary_KEYS
	MplsFwdingSummary
*/
package cisco_ios_xr_fib_common_oper_mpls_forwarding_nodes_node_forwarding_summary

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MplsFwdingSummary_KEYS struct {
	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
}

func (m *MplsFwdingSummary_KEYS) Reset()                    { *m = MplsFwdingSummary_KEYS{} }
func (m *MplsFwdingSummary_KEYS) String() string            { return proto.CompactTextString(m) }
func (*MplsFwdingSummary_KEYS) ProtoMessage()               {}
func (*MplsFwdingSummary_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MplsFwdingSummary_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type MplsFwdingSummary struct {
	// Number of IPv4 imposition entries
	Ipv4ImpositionEntries uint32 `protobuf:"varint,50,opt,name=ipv4_imposition_entries,json=ipv4ImpositionEntries" json:"ipv4_imposition_entries,omitempty"`
	// Number of reserved label entries
	ReservedLabelEntries uint32 `protobuf:"varint,51,opt,name=reserved_label_entries,json=reservedLabelEntries" json:"reserved_label_entries,omitempty"`
	// Number of label swap/disposition entries
	LabelSwitchedEntries uint32 `protobuf:"varint,52,opt,name=label_switched_entries,json=labelSwitchedEntries" json:"label_switched_entries,omitempty"`
	// Number of delete stale label entries
	DeletedStaleEntries uint32 `protobuf:"varint,53,opt,name=deleted_stale_entries,json=deletedStaleEntries" json:"deleted_stale_entries,omitempty"`
	// Number of TE tunnel head imposition entries
	TeHeadEntries uint32 `protobuf:"varint,54,opt,name=te_head_entries,json=teHeadEntries" json:"te_head_entries,omitempty"`
	// Number of TE FRR tunnel head imposition entries
	TeFrrHeadEntries uint32 `protobuf:"varint,55,opt,name=te_frr_head_entries,json=teFrrHeadEntries" json:"te_frr_head_entries,omitempty"`
	// Number of TE FRR protected interface entries
	TeFrrInterfaceEntries uint32 `protobuf:"varint,56,opt,name=te_frr_interface_entries,json=teFrrInterfaceEntries" json:"te_frr_interface_entries,omitempty"`
	// Number of TE FRR protected next-hop entries
	TeFrrNextHopEntries uint32 `protobuf:"varint,57,opt,name=te_frr_next_hop_entries,json=teFrrNextHopEntries" json:"te_frr_next_hop_entries,omitempty"`
	// Number of TE MidPoints forwarding entries
	TeMidPointsEntries uint32 `protobuf:"varint,58,opt,name=te_mid_points_entries,json=teMidPointsEntries" json:"te_mid_points_entries,omitempty"`
	// Number of TE FRR MidPoints forwarding entries
	TeFrrMidPointsEntries uint32 `protobuf:"varint,59,opt,name=te_frr_mid_points_entries,json=teFrrMidPointsEntries" json:"te_frr_mid_points_entries,omitempty"`
	// Number of TE internal forwarding entries
	TeInternalEntries uint32 `protobuf:"varint,60,opt,name=te_internal_entries,json=teInternalEntries" json:"te_internal_entries,omitempty"`
	// Number of TE internal forwarding entries
	TeFrrInternalEntries uint32 `protobuf:"varint,61,opt,name=te_frr_internal_entries,json=teFrrInternalEntries" json:"te_frr_internal_entries,omitempty"`
	// Total forwarding updates from LSD to LFDs
	TotalForwardingUpdates uint32 `protobuf:"varint,62,opt,name=total_forwarding_updates,json=totalForwardingUpdates" json:"total_forwarding_updates,omitempty"`
	// Total forwarding update messages from LSD to LFDs
	TotalForwardingUpdateMessages uint32 `protobuf:"varint,63,opt,name=total_forwarding_update_messages,json=totalForwardingUpdateMessages" json:"total_forwarding_update_messages,omitempty"`
	// Total forwarding updates from MRIB to LFDs
	TotalP2MpForwardingUpdates uint32 `protobuf:"varint,64,opt,name=total_p2_mp_forwarding_updates,json=totalP2MpForwardingUpdates" json:"total_p2_mp_forwarding_updates,omitempty"`
	// Total p2mp forwarding add/modify messages from MRIB to LFDs
	TotalP2MpForwardingAddedOrModifyMessages uint32 `protobuf:"varint,65,opt,name=total_p2_mp_forwarding_added_or_modify_messages,json=totalP2MpForwardingAddedOrModifyMessages" json:"total_p2_mp_forwarding_added_or_modify_messages,omitempty"`
	// Total p2mp forwarding del messages from MRIB to LFDs
	TotalP2MpForwardingDeleteMessages uint32 `protobuf:"varint,66,opt,name=total_p2_mp_forwarding_delete_messages,json=totalP2MpForwardingDeleteMessages" json:"total_p2_mp_forwarding_delete_messages,omitempty"`
	// Total p2mp forwarding messages dropped from MRIB to LFDs
	TotalP2MpForwardingDropMessages uint32 `protobuf:"varint,67,opt,name=total_p2_mp_forwarding_drop_messages,json=totalP2MpForwardingDropMessages" json:"total_p2_mp_forwarding_drop_messages,omitempty"`
	// Total IIR triggered p2mp forwarding MRIB messages dropped
	TotalP2MpIirForwardingDropMessages uint32 `protobuf:"varint,68,opt,name=total_p2_mp_iir_forwarding_drop_messages,json=totalP2MpIirForwardingDropMessages" json:"total_p2_mp_iir_forwarding_drop_messages,omitempty"`
	// Lowest label in use
	LowestLabel uint32 `protobuf:"varint,69,opt,name=lowest_label,json=lowestLabel" json:"lowest_label,omitempty"`
	// Highest Label in use
	HighestLabel uint32 `protobuf:"varint,70,opt,name=highest_label,json=highestLabel" json:"highest_label,omitempty"`
	// Number of TE tunnels treated as non-protected
	IgnoreProtect uint32 `protobuf:"varint,71,opt,name=ignore_protect,json=ignoreProtect" json:"ignore_protect,omitempty"`
	// Number of MTE tunnel head entries
	MteHeadEntries uint32 `protobuf:"varint,72,opt,name=mte_head_entries,json=mteHeadEntries" json:"mte_head_entries,omitempty"`
	// Number of MTE local entries
	MteLlEntries uint32 `protobuf:"varint,73,opt,name=mte_ll_entries,json=mteLlEntries" json:"mte_ll_entries,omitempty"`
	// Number of MTE midpoint entries
	MteMidpointEntries uint32 `protobuf:"varint,74,opt,name=mte_midpoint_entries,json=mteMidpointEntries" json:"mte_midpoint_entries,omitempty"`
	// Number of global FIB packets dropped
	GlobalDroppedPackets uint64 `protobuf:"varint,75,opt,name=global_dropped_packets,json=globalDroppedPackets" json:"global_dropped_packets,omitempty"`
	// Number of global FIB packets fragmented
	GlobalFragmentedPackets uint64 `protobuf:"varint,76,opt,name=global_fragmented_packets,json=globalFragmentedPackets" json:"global_fragmented_packets,omitempty"`
	// Number of global failed lookups
	GlobalFailedLookups uint64 `protobuf:"varint,77,opt,name=global_failed_lookups,json=globalFailedLookups" json:"global_failed_lookups,omitempty"`
	// Number of labels with RPF
	LrpfEntries uint32 `protobuf:"varint,78,opt,name=lrpf_entries,json=lrpfEntries" json:"lrpf_entries,omitempty"`
}

func (m *MplsFwdingSummary) Reset()                    { *m = MplsFwdingSummary{} }
func (m *MplsFwdingSummary) String() string            { return proto.CompactTextString(m) }
func (*MplsFwdingSummary) ProtoMessage()               {}
func (*MplsFwdingSummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MplsFwdingSummary) GetIpv4ImpositionEntries() uint32 {
	if m != nil {
		return m.Ipv4ImpositionEntries
	}
	return 0
}

func (m *MplsFwdingSummary) GetReservedLabelEntries() uint32 {
	if m != nil {
		return m.ReservedLabelEntries
	}
	return 0
}

func (m *MplsFwdingSummary) GetLabelSwitchedEntries() uint32 {
	if m != nil {
		return m.LabelSwitchedEntries
	}
	return 0
}

func (m *MplsFwdingSummary) GetDeletedStaleEntries() uint32 {
	if m != nil {
		return m.DeletedStaleEntries
	}
	return 0
}

func (m *MplsFwdingSummary) GetTeHeadEntries() uint32 {
	if m != nil {
		return m.TeHeadEntries
	}
	return 0
}

func (m *MplsFwdingSummary) GetTeFrrHeadEntries() uint32 {
	if m != nil {
		return m.TeFrrHeadEntries
	}
	return 0
}

func (m *MplsFwdingSummary) GetTeFrrInterfaceEntries() uint32 {
	if m != nil {
		return m.TeFrrInterfaceEntries
	}
	return 0
}

func (m *MplsFwdingSummary) GetTeFrrNextHopEntries() uint32 {
	if m != nil {
		return m.TeFrrNextHopEntries
	}
	return 0
}

func (m *MplsFwdingSummary) GetTeMidPointsEntries() uint32 {
	if m != nil {
		return m.TeMidPointsEntries
	}
	return 0
}

func (m *MplsFwdingSummary) GetTeFrrMidPointsEntries() uint32 {
	if m != nil {
		return m.TeFrrMidPointsEntries
	}
	return 0
}

func (m *MplsFwdingSummary) GetTeInternalEntries() uint32 {
	if m != nil {
		return m.TeInternalEntries
	}
	return 0
}

func (m *MplsFwdingSummary) GetTeFrrInternalEntries() uint32 {
	if m != nil {
		return m.TeFrrInternalEntries
	}
	return 0
}

func (m *MplsFwdingSummary) GetTotalForwardingUpdates() uint32 {
	if m != nil {
		return m.TotalForwardingUpdates
	}
	return 0
}

func (m *MplsFwdingSummary) GetTotalForwardingUpdateMessages() uint32 {
	if m != nil {
		return m.TotalForwardingUpdateMessages
	}
	return 0
}

func (m *MplsFwdingSummary) GetTotalP2MpForwardingUpdates() uint32 {
	if m != nil {
		return m.TotalP2MpForwardingUpdates
	}
	return 0
}

func (m *MplsFwdingSummary) GetTotalP2MpForwardingAddedOrModifyMessages() uint32 {
	if m != nil {
		return m.TotalP2MpForwardingAddedOrModifyMessages
	}
	return 0
}

func (m *MplsFwdingSummary) GetTotalP2MpForwardingDeleteMessages() uint32 {
	if m != nil {
		return m.TotalP2MpForwardingDeleteMessages
	}
	return 0
}

func (m *MplsFwdingSummary) GetTotalP2MpForwardingDropMessages() uint32 {
	if m != nil {
		return m.TotalP2MpForwardingDropMessages
	}
	return 0
}

func (m *MplsFwdingSummary) GetTotalP2MpIirForwardingDropMessages() uint32 {
	if m != nil {
		return m.TotalP2MpIirForwardingDropMessages
	}
	return 0
}

func (m *MplsFwdingSummary) GetLowestLabel() uint32 {
	if m != nil {
		return m.LowestLabel
	}
	return 0
}

func (m *MplsFwdingSummary) GetHighestLabel() uint32 {
	if m != nil {
		return m.HighestLabel
	}
	return 0
}

func (m *MplsFwdingSummary) GetIgnoreProtect() uint32 {
	if m != nil {
		return m.IgnoreProtect
	}
	return 0
}

func (m *MplsFwdingSummary) GetMteHeadEntries() uint32 {
	if m != nil {
		return m.MteHeadEntries
	}
	return 0
}

func (m *MplsFwdingSummary) GetMteLlEntries() uint32 {
	if m != nil {
		return m.MteLlEntries
	}
	return 0
}

func (m *MplsFwdingSummary) GetMteMidpointEntries() uint32 {
	if m != nil {
		return m.MteMidpointEntries
	}
	return 0
}

func (m *MplsFwdingSummary) GetGlobalDroppedPackets() uint64 {
	if m != nil {
		return m.GlobalDroppedPackets
	}
	return 0
}

func (m *MplsFwdingSummary) GetGlobalFragmentedPackets() uint64 {
	if m != nil {
		return m.GlobalFragmentedPackets
	}
	return 0
}

func (m *MplsFwdingSummary) GetGlobalFailedLookups() uint64 {
	if m != nil {
		return m.GlobalFailedLookups
	}
	return 0
}

func (m *MplsFwdingSummary) GetLrpfEntries() uint32 {
	if m != nil {
		return m.LrpfEntries
	}
	return 0
}

func init() {
	proto.RegisterType((*MplsFwdingSummary_KEYS)(nil), "cisco_ios_xr_fib_common_oper.mpls_forwarding.nodes.node.forwarding_summary.mpls_fwding_summary_KEYS")
	proto.RegisterType((*MplsFwdingSummary)(nil), "cisco_ios_xr_fib_common_oper.mpls_forwarding.nodes.node.forwarding_summary.mpls_fwding_summary")
}

func init() { proto.RegisterFile("mpls_fwding_summary.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 756 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x95, 0xdf, 0x53, 0x2b, 0x35,
	0x14, 0xc7, 0xa7, 0x33, 0x8e, 0xe3, 0x8d, 0x70, 0xbd, 0x6e, 0xe9, 0x65, 0xd1, 0x51, 0x7b, 0x11,
	0x99, 0xbe, 0x58, 0xb5, 0xfc, 0x14, 0x7f, 0x82, 0x50, 0x28, 0xb4, 0x58, 0x41, 0x1f, 0x7c, 0xca,
	0xa4, 0xdd, 0xb3, 0x6d, 0x86, 0xcd, 0x26, 0x93, 0x04, 0x0a, 0x7f, 0xaf, 0xff, 0x88, 0xb3, 0x27,
	0xbb, 0xd9, 0xe5, 0xb2, 0x7d, 0xe9, 0xc3, 0xf9, 0x7e, 0x3f, 0xdf, 0xe4, 0x6c, 0x92, 0x53, 0xb2,
	0x21, 0x54, 0x62, 0x68, 0xbc, 0x88, 0x78, 0x3a, 0xa3, 0xe6, 0x5e, 0x08, 0xa6, 0x9f, 0xba, 0x4a,
	0x4b, 0x2b, 0x83, 0xcb, 0x29, 0x37, 0x53, 0x49, 0xb9, 0x34, 0xf4, 0x51, 0xd3, 0x98, 0x4f, 0xe8,
	0x54, 0x0a, 0x21, 0x53, 0x2a, 0x15, 0xe8, 0xae, 0xe3, 0xa4, 0x5e, 0x30, 0x9d, 0xb1, 0xdd, 0x54,
	0x46, 0x60, 0xf0, 0xb7, 0x5b, 0x56, 0x8b, 0xc4, 0xcd, 0x03, 0x12, 0xd6, 0x2c, 0x44, 0xaf, 0xce,
	0xfe, 0xbd, 0x0d, 0x3e, 0x27, 0xaf, 0x32, 0x8c, 0xa6, 0x4c, 0x40, 0xd8, 0x68, 0x37, 0x3a, 0xaf,
	0x6e, 0x3e, 0xca, 0x0a, 0xd7, 0x4c, 0xc0, 0xe6, 0x7f, 0x2b, 0xa4, 0x59, 0x43, 0x06, 0xfb, 0x64,
	0x9d, 0xab, 0x87, 0x5d, 0xca, 0x85, 0x92, 0x86, 0x5b, 0x2e, 0x53, 0x0a, 0xa9, 0xd5, 0x1c, 0x4c,
	0xd8, 0x6b, 0x37, 0x3a, 0xab, 0x37, 0xad, 0x4c, 0x1e, 0x78, 0xf5, 0xcc, 0x89, 0xc1, 0x2e, 0x79,
	0xab, 0xc1, 0x80, 0x7e, 0x80, 0x88, 0x26, 0x6c, 0x02, 0x89, 0xc7, 0x76, 0x10, 0x5b, 0x2b, 0xd4,
	0x61, 0x26, 0x56, 0x28, 0x67, 0x36, 0x0b, 0x6e, 0xa7, 0x73, 0x88, 0x3c, 0xb5, 0xeb, 0x28, 0x54,
	0x6f, 0x73, 0xb1, 0xa0, 0x7a, 0xa4, 0x15, 0x41, 0x02, 0x16, 0x22, 0x6a, 0x2c, 0x4b, 0xc0, 0x43,
	0x7b, 0x08, 0x35, 0x73, 0xf1, 0x36, 0xd3, 0x0a, 0x66, 0x9b, 0x7c, 0x62, 0x81, 0xce, 0x81, 0x95,
	0x4b, 0xec, 0xa3, 0x7b, 0xd5, 0xc2, 0x05, 0x30, 0x9f, 0xfd, 0x2d, 0x69, 0x5a, 0xa0, 0xb1, 0xd6,
	0xcf, 0xbd, 0x07, 0xe8, 0x7d, 0x63, 0xa1, 0xaf, 0x75, 0xd5, 0x7e, 0x40, 0xc2, 0xdc, 0xce, 0x53,
	0x0b, 0x3a, 0x66, 0xd3, 0x72, 0x37, 0x87, 0xee, 0x7b, 0x21, 0x33, 0x28, 0xd4, 0xb2, 0xf3, 0xf5,
	0x1c, 0x4c, 0xe1, 0xd1, 0xd2, 0xb9, 0x54, 0x9e, 0xfb, 0xd1, 0x75, 0x81, 0xdc, 0x35, 0x3c, 0xda,
	0x0b, 0xa9, 0x0a, 0xea, 0x07, 0xd2, 0xb2, 0x40, 0x05, 0x8f, 0xa8, 0x92, 0x3c, 0xb5, 0xc6, 0x33,
	0x47, 0xc8, 0x04, 0x16, 0x46, 0x3c, 0x1a, 0xa3, 0x54, 0x20, 0x87, 0x64, 0x23, 0x5f, 0xa8, 0x06,
	0xfb, 0xa9, 0xb2, 0xc5, 0x17, 0x64, 0x17, 0x3f, 0x05, 0xf6, 0x95, 0xb2, 0xf2, 0x3c, 0x7f, 0x46,
	0xe6, 0x53, 0x0b, 0x83, 0x5c, 0x29, 0xfc, 0x7b, 0xbe, 0xa5, 0x17, 0xcc, 0x2f, 0xee, 0x34, 0xcb,
	0x4f, 0x51, 0xc1, 0x0e, 0x49, 0x68, 0xa5, 0x65, 0x49, 0xe5, 0xd2, 0xd3, 0x7b, 0x15, 0x31, 0x0b,
	0x26, 0xfc, 0x15, 0xb9, 0xb7, 0xa8, 0xf7, 0xbd, 0xfc, 0x8f, 0x53, 0x83, 0x73, 0xd2, 0x5e, 0x42,
	0x52, 0x01, 0xc6, 0xb0, 0x19, 0x98, 0xf0, 0x37, 0x4c, 0xf8, 0xa2, 0x36, 0x61, 0x94, 0x9b, 0x82,
	0x13, 0xf2, 0xa5, 0x0b, 0x52, 0x3d, 0x2a, 0x54, 0xdd, 0x46, 0x7e, 0xc7, 0x98, 0xcf, 0xd0, 0x35,
	0xee, 0x8d, 0xd4, 0xcb, 0xcd, 0x30, 0xf2, 0xdd, 0x92, 0x0c, 0x16, 0x45, 0x10, 0x51, 0xa9, 0xa9,
	0x90, 0x11, 0x8f, 0x9f, 0xca, 0xbd, 0x1d, 0x63, 0x68, 0xa7, 0x26, 0xf4, 0x38, 0x43, 0xfe, 0xd4,
	0x23, 0x04, 0xfc, 0x36, 0xff, 0x22, 0xdb, 0x4b, 0x96, 0x70, 0x37, 0xbe, 0x4c, 0x3e, 0xc1, 0xe4,
	0x77, 0x35, 0xc9, 0xa7, 0xe8, 0xf4, 0x91, 0x23, 0xb2, 0xb5, 0x2c, 0x52, 0x4b, 0x55, 0x06, 0xfe,
	0x81, 0x81, 0x5f, 0xd5, 0x05, 0x6a, 0xa9, 0x7c, 0xdc, 0xdf, 0xa4, 0x53, 0x8d, 0xe3, 0x5c, 0x2f,
	0x8f, 0x3c, 0xc5, 0xc8, 0x4d, 0x1f, 0x39, 0xe0, 0x7a, 0x49, 0xea, 0x3b, 0xb2, 0x92, 0xc8, 0x05,
	0x18, 0xeb, 0x26, 0x4b, 0x78, 0x86, 0xe4, 0xc7, 0xae, 0x86, 0xf3, 0x24, 0xf8, 0x9a, 0xac, 0xce,
	0xf9, 0x6c, 0x5e, 0x7a, 0xfa, 0xe8, 0x59, 0xc9, 0x8b, 0xce, 0xf4, 0x0d, 0x79, 0xcd, 0x67, 0xa9,
	0xd4, 0x40, 0xb3, 0x41, 0x0c, 0x53, 0x1b, 0x9e, 0xbb, 0x11, 0xe0, 0xaa, 0x63, 0x57, 0x0c, 0x3a,
	0xe4, 0x8d, 0x78, 0x7f, 0x56, 0x5c, 0xa0, 0xf1, 0xb5, 0x78, 0x3e, 0x2c, 0xb6, 0x48, 0x56, 0xa1,
	0x49, 0x79, 0xd1, 0x07, 0x6e, 0x59, 0x61, 0x61, 0xe8, 0x2f, 0xf8, 0xf7, 0x64, 0x4d, 0xb8, 0x57,
	0x8b, 0xaf, 0xcf, 0x7b, 0x2f, 0xdd, 0x9b, 0x15, 0xf8, 0x68, 0x51, 0xaa, 0x8c, 0xc5, 0x59, 0x22,
	0x27, 0x2c, 0xc1, 0x4f, 0xa6, 0x20, 0xa2, 0x8a, 0x4d, 0xef, 0xc0, 0x9a, 0xf0, 0xaa, 0xdd, 0xe8,
	0x7c, 0x70, 0xb3, 0xe6, 0xd4, 0x53, 0x27, 0x8e, 0x9d, 0x16, 0x1c, 0x91, 0x8d, 0x9c, 0x8a, 0x35,
	0x9b, 0x09, 0x48, 0x6d, 0x05, 0x1c, 0x22, 0xb8, 0xee, 0x0c, 0x7d, 0xaf, 0x17, 0x6c, 0x8f, 0xb4,
	0x0a, 0x96, 0xf1, 0x24, 0x9b, 0xe1, 0x52, 0xde, 0xdd, 0x2b, 0x13, 0x8e, 0x90, 0x6b, 0xe6, 0x1c,
	0x6a, 0x43, 0x27, 0xe1, 0xb1, 0x68, 0x15, 0xfb, 0x7e, 0xae, 0xf3, 0x63, 0xd1, 0x2a, 0xce, 0x1b,
	0x99, 0x7c, 0x88, 0xff, 0x78, 0x3b, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x16, 0x1c, 0x2f, 0x22,
	0x0e, 0x07, 0x00, 0x00,
}
