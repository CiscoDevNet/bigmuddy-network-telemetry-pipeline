// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vrrp_trackitem_info.proto

/*
Package cisco_ios_xr_ipv4_vrrp_oper_vrrp_ipv6_track_items_track_item is a generated protocol buffer package.

It is generated from these files:
	vrrp_trackitem_info.proto

It has these top-level messages:
	VrrpTrackitemInfo_KEYS
	VrrpTrackitemInfo
*/
package cisco_ios_xr_ipv4_vrrp_oper_vrrp_ipv6_track_items_track_item

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Tracked item information
type VrrpTrackitemInfo_KEYS struct {
	InterfaceName        string `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName" json:"interface_name,omitempty"`
	VirtualRouterId      uint32 `protobuf:"varint,2,opt,name=virtual_router_id,json=virtualRouterId" json:"virtual_router_id,omitempty"`
	TrackedInterfaceName string `protobuf:"bytes,3,opt,name=tracked_interface_name,json=trackedInterfaceName" json:"tracked_interface_name,omitempty"`
}

func (m *VrrpTrackitemInfo_KEYS) Reset()                    { *m = VrrpTrackitemInfo_KEYS{} }
func (m *VrrpTrackitemInfo_KEYS) String() string            { return proto.CompactTextString(m) }
func (*VrrpTrackitemInfo_KEYS) ProtoMessage()               {}
func (*VrrpTrackitemInfo_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *VrrpTrackitemInfo_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *VrrpTrackitemInfo_KEYS) GetVirtualRouterId() uint32 {
	if m != nil {
		return m.VirtualRouterId
	}
	return 0
}

func (m *VrrpTrackitemInfo_KEYS) GetTrackedInterfaceName() string {
	if m != nil {
		return m.TrackedInterfaceName
	}
	return ""
}

type VrrpTrackitemInfo struct {
	// IM Interface
	Interface string `protobuf:"bytes,50,opt,name=interface" json:"interface,omitempty"`
	// Virtual Router ID
	VirtualRouterId uint32 `protobuf:"varint,51,opt,name=virtual_router_id,json=virtualRouterId" json:"virtual_router_id,omitempty"`
	// Type of tracked item
	TrackedItemType uint32 `protobuf:"varint,52,opt,name=tracked_item_type,json=trackedItemType" json:"tracked_item_type,omitempty"`
	// Tracked item index
	TrackedItemIndex string `protobuf:"bytes,53,opt,name=tracked_item_index,json=trackedItemIndex" json:"tracked_item_index,omitempty"`
	// State of the tracked item
	State uint32 `protobuf:"varint,54,opt,name=state" json:"state,omitempty"`
	// Priority weight of item
	Priority uint32 `protobuf:"varint,55,opt,name=priority" json:"priority,omitempty"`
}

func (m *VrrpTrackitemInfo) Reset()                    { *m = VrrpTrackitemInfo{} }
func (m *VrrpTrackitemInfo) String() string            { return proto.CompactTextString(m) }
func (*VrrpTrackitemInfo) ProtoMessage()               {}
func (*VrrpTrackitemInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *VrrpTrackitemInfo) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *VrrpTrackitemInfo) GetVirtualRouterId() uint32 {
	if m != nil {
		return m.VirtualRouterId
	}
	return 0
}

func (m *VrrpTrackitemInfo) GetTrackedItemType() uint32 {
	if m != nil {
		return m.TrackedItemType
	}
	return 0
}

func (m *VrrpTrackitemInfo) GetTrackedItemIndex() string {
	if m != nil {
		return m.TrackedItemIndex
	}
	return ""
}

func (m *VrrpTrackitemInfo) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *VrrpTrackitemInfo) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func init() {
	proto.RegisterType((*VrrpTrackitemInfo_KEYS)(nil), "cisco_ios_xr_ipv4_vrrp_oper.vrrp.ipv6.track_items.track_item.vrrp_trackitem_info_KEYS")
	proto.RegisterType((*VrrpTrackitemInfo)(nil), "cisco_ios_xr_ipv4_vrrp_oper.vrrp.ipv6.track_items.track_item.vrrp_trackitem_info")
}

func init() { proto.RegisterFile("vrrp_trackitem_info.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x41, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0xc9, 0xff, 0x8f, 0x62, 0x17, 0xaa, 0x76, 0x2d, 0xb2, 0x8a, 0x87, 0x52, 0x10, 0x4a,
	0x91, 0x1c, 0x6c, 0xac, 0x17, 0xaf, 0x1e, 0x82, 0xe0, 0x21, 0x7a, 0xf1, 0x34, 0xac, 0xc9, 0x14,
	0x06, 0x4d, 0x76, 0x99, 0x6c, 0x43, 0xf3, 0x79, 0xfc, 0x78, 0x7e, 0x09, 0xc9, 0xb6, 0xc6, 0x28,
	0xb9, 0xed, 0xbc, 0x79, 0xf3, 0x7b, 0x0f, 0x56, 0x9c, 0x55, 0xcc, 0x16, 0x1c, 0xeb, 0xf4, 0x8d,
	0x1c, 0xe6, 0x40, 0xc5, 0xca, 0x84, 0x96, 0x8d, 0x33, 0xf2, 0x2e, 0xa5, 0x32, 0x35, 0x40, 0xa6,
	0x84, 0x0d, 0x03, 0xd9, 0x2a, 0x02, 0x6f, 0x36, 0x16, 0x39, 0x6c, 0x5e, 0x21, 0xd9, 0x6a, 0x19,
	0xfa, 0x5b, 0x68, 0x8e, 0xcb, 0xce, 0x7b, 0xfa, 0x11, 0x08, 0xd5, 0xc3, 0x86, 0x87, 0xfb, 0x97,
	0x27, 0x79, 0x29, 0x0e, 0xa9, 0x70, 0xc8, 0x2b, 0x9d, 0x22, 0x14, 0x3a, 0x47, 0x15, 0x4c, 0x82,
	0xd9, 0x20, 0x19, 0xb6, 0xea, 0xa3, 0xce, 0x51, 0xce, 0xc5, 0xa8, 0x22, 0x76, 0x6b, 0xfd, 0x0e,
	0x6c, 0xd6, 0x0e, 0x19, 0x28, 0x53, 0xff, 0x26, 0xc1, 0x6c, 0x98, 0x1c, 0xed, 0x16, 0x89, 0xd7,
	0xe3, 0x4c, 0x46, 0xe2, 0xd4, 0x27, 0x61, 0x06, 0x7f, 0xd0, 0xff, 0x3d, 0x7a, 0xbc, 0xdb, 0xc6,
	0xdd, 0x84, 0xe9, 0x67, 0x20, 0x4e, 0x7a, 0x5a, 0xca, 0x0b, 0x31, 0x68, 0x29, 0xea, 0xda, 0x03,
	0x7e, 0x84, 0xfe, 0x5e, 0x8b, 0xfe, 0x5e, 0x73, 0x31, 0x6a, 0x7b, 0x35, 0x78, 0x57, 0x5b, 0x54,
	0xd1, 0xd6, 0xfb, 0x5d, 0xc9, 0x61, 0xfe, 0x5c, 0x5b, 0x94, 0x57, 0x42, 0xfe, 0xf2, 0x52, 0x91,
	0xe1, 0x46, 0xdd, 0xf8, 0xf8, 0xe3, 0x8e, 0x39, 0x6e, 0x74, 0x39, 0x16, 0x7b, 0xa5, 0xd3, 0x0e,
	0xd5, 0xd2, 0xd3, 0xb6, 0x83, 0x3c, 0x17, 0x07, 0x96, 0xc9, 0x30, 0xb9, 0x5a, 0xdd, 0xfa, 0x45,
	0x3b, 0xbf, 0xee, 0xfb, 0x8f, 0x5d, 0x7c, 0x05, 0x00, 0x00, 0xff, 0xff, 0x71, 0x1c, 0x64, 0x84,
	0xf5, 0x01, 0x00, 0x00,
}
